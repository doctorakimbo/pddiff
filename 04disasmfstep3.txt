GetWhoStrikesFirst(battler1, battler2, ignoreChosenMoves)
{
	if(!AbilityBattleEffects(ABILITYEFFECT_CHECK_ON_FIELD, 0, ABILITY_CLOUD_NINE, 0, 0) && !AbilityBattleEffects(ABILITYEFFECT_CHECK_ON_FIELD, 0, ABILITY_AIR_LOCK, 0, 0))
	{
		if((gBattleMons[battler1].ability == ABILITY_SWIFT_SWIM && gBattleWeather & WEATHER_RAIN_ANY) || (gBattleMons[battler1].ability == ABILITY_CHLOROPHYLL && gBattleWeather & WEATHER_SUN_ANY))
			speedMultiplierBattler1 = 2;
		else
			speedMultiplierBattler1 = 1;
		
		if((gBattleMons[battler2].ability == ABILITY_SWIFT_SWIM && gBattleWeather & WEATHER_RAIN_ANY) || (gBattleMons[battler2].ability == ABILITY_CHLOROPHYLL && gBattleWeather & WEATHER_SUN_ANY))
			speedMultiplierBattler2 = 2;
		else
			speedMultiplierBattler2 = 1;
	}
	else
	{
		speedMultiplierBattler1 = 1;
		speedMultiplierBattler2 = 1;
	}

	speedBattler1 = (gBattleMons[battler1].speed * speedMultiplierBattler1) * gStatStageRatios[gBattleMons[battler1].statStages[STAT_SPEED]][0] / gStatStageRatios[gBattleMons[battler1].statStages[STAT_SPEED]][1];
	
	if(r0 == ITEM_ENIGMA_BERRY)
	{
		holdEffect = gEnigmaBerries[battler1].holdEffect;
		holdEffectParam = gEnigmaBerries[battler1].holdEffectParam;
	}
	else
	{
		holdEffect = GetHoldEffect(gBattleMons[battler1].item);
		holdEffectParam = GetHoldEffectParam(gBattleMons[battler1].item);
	}

	if(!(gBattleTypeFlags & 2) && FlagGet(FLAG_BADGE03_GET) && getBattlerSide(battler1) == B_SIDE_PLAYER)
		speedBattler1 = (speedBattler1 * 110) / 100;

	if(holdEffect == HOLD_EFFECT_MACHO_BRACE)
		speedBattler1 *= 2;

	if(gBattleMons[battler1].status1 & STATUS1_PARALYSIS != 0)
		speedBattler1 /= 4;

	if(holdEffect == HOLD_EFFECT_QUICK_CLAW && *gRandomTurnNumber < (((holdEffectParam << 0x10) - holdEffectParam) / 0x64))
		speedBattler1 = UINT_MAX;

	speedBattler2 = (gBattleMons[battler2].speed * speedMultiplierBattler2) * gStatStageRatios[gBattleMons[battler2].statStages[STAT_SPEED]][0] / gStatStageRatios[gBattleMons[battler2].statStages[STAT_SPEED]][1]

	if(gBattleMons[battler2].item == ITEM_ENIGMA_BERRY)
	{
		holdEffect = gEnigmaBerries[battler2].holdEffect
		holdEffectParam = gEnigmaBerries[battler2].holdEffectParam
	}
	else
	{
		holdEffect = GetHoldEffect(gBattleMons[battler2].item)
		holdEffectParam = GetHoldEffectParam(gBattleMons[battler2].item)
	}

	if(!(gBattleTypeFlags & 2) == 0 && FlagGet(FLAG_BADGE03_GET) && getBattlerSide(battler2) == B_SIDE_PLAYER)
		speedBattler2 = (speedBattler2 * 110) / 100;

	if(holdEffect == HOLD_EFFECT_MACHO_BRACE)
		speedBattler2 /= 2;

	if(gBattleMons[battler2].status1 & STATUS1_PARALYSIS != 0)
		speedBattler2 /= 4;

	if(holdEffect == HOLD_EFFECT_QUICK_CLAW && *gRandomTurnNumber < ((holdEffectParam * 0xFFFF) / 100))
		speedBattler2 = UINT_MAX;

	if(ignoreChosenMoves)
	{
		moveBattler1 = 0;
		moveBattler2 = 0;
	}
	else
	{	
		if(gChosenActionByBattler[battler1] == B_ACTION_USE_MOVE)
		{
			if(gProtectStructs[battler1].noValidMoves)
				moveBattler1 = MOVE_STRUGGLE;
			else
				moveBattler1 = gBattleMons[battler1].moves[*(gBattleStruct->chosenMovePositions + battler1)];
		}
		else
			moveBattler1 = MOVE_NONE;

		if(gChosenActionByBattler[battler2] == B_ACTION_USE_MOVE)
		{
			if(gProtectStructs[battler2].noValidMoves)
				moveBattler2 = MOVE_STRUGGLE;
			else
				moveBattler2 = gBattleMons[battler2].moves[*(gBattleStruct->chosenMovePositions + battler2)];
		}
		else
			moveBattler2 = MOVE_NONE;
	}

	if(gBattleMoves[moveBattler1].priority == 0 || gBattleMoves[moveBattler2].priority != 0)
	{
		if (gBattleMoves[moveBattler1].priority == gBattleMoves[moveBattler2].priority)
        {
            if(speedBattler1 == speedBattler2 && Random() & 1)
			   strikesFirst = 2;
            elseif(speedBattler1 < speedBattler2)
               strikesFirst = 1;
		}
        elseif(gBattleMoves[moveBattler1].priority < gBattleMoves[moveBattler2].priority)
            strikesFirst = 1;
	}
	else
    {
        if(speedBattler1 == speedBattler2 && Random() & 1)
            strikesFirst = 2;
        elseif(speedBattler1 < speedBattler2)
            strikesFirst = 1;
	}
	
	return strikesFirst;
}