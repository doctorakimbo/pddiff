...
case ENDTURN_INGRAIN:
	if((gStatuses3[gActiveBattler] & STATUS3_ROOTED) && gBattleMons[gActiveBattler].hp != gBattleMons[gActiveBattler].maxHP || gBattleMons[gActiveBattler].hp != 0)
	{
		gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 16;
		
		if(gBattleMoveDamage == 0)
			gBattleMoveDamage = 1;
		
		gBattleMoveDamage = -gBattleMoveDamage;
		BattleScriptExecute(BattleScript_IngrainTurnHeal);
		effect++;
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_ABILITIES:
	if(AbilityBattleEffects(ABILITYEFFECT_ENDTURN, gActiveBattler, 0, 0, 0))
		effect++;
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_ITEMS1:
	if(ItemBattleEffects(1, gActiveBattler, 0))
		effect++;
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_ITEMS2:
	if(ItemBattleEffects(1, gActiveBattler, 1))
		effect++;
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_LEECH_SEED:
	if((gStatuses3[gActiveBattler] & STATUS3_LEECHSEED) && gBattleMons[gStatuses3[gActiveBattler] & STATUS3_LEECHSEED_BATTLER].hp != 0 && gBattleMons[gActiveBattler].hp != 0)
	{
		gBattlerTarget = gStatuses3[gActiveBattler] & STATUS3_LEECHSEED_BATTLER;
		gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 8;
		
		if(gBattleMoveDamage == 0)
			gBattleMoveDamage = 1;
		
		gBattleScripting.animArg1 = gStatuses3[gActiveBattler] & STATUS3_LEECHSEED_BATTLER;
		gBattleScripting.animArg2 = gActiveBattler;
		BattleScriptExecute(BattleScript_LeechSeedTurnDrain);
		effect++;
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_POISON:
	if((gBattleMons[gActiveBattler].status1 & STATUS1_POISON) && gBattleMons[gActiveBattler].hp != 0)
	{
		gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 8;
		
		if(gBattleMoveDamage == 0)
			gBattleMoveDamage = 1;

		BattleScriptExecute(BattleScript_PoisonTurnDmg);
		effect++;
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_BAD_POISON:
	if((gBattleMons[gActiveBattler].status1 & STATUS1_TOXIC_POISON) && gBattleMons[gActiveBattler].hp != 0)
	{
		gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 16;
		
		if(gBattleMoveDamage == 0)
			gBattleMoveDamage = 1;
		
		if(gBattleMons[gActiveBattler].status1 & 0xF00 != 0xF00)
			gBattleMons[gActiveBattler].status1 += 0x100;
		
		gBattleMoveDamage *= (gBattleMons[gActiveBattler].status1 & 0xF00) >> 8;
		BattleScriptExecute(BattleScript_PoisonTurnDmg);
		effect++;
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_BURN:
	if((gBattleMons[gActiveBattler].status1 & STATUS1_BURN) && gBattleMons[gActiveBattler].hp != 0)
	{
		gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 8;
		
		if(gBattleMoveDamage == 0)
			gBattleMoveDamage = 1;
		
		BattleScriptExecute(BattleScript_BurnTurnDmg);
		effect++;
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_NIGHTMARE:
	if((gBattleMons[gActiveBattler].status2 & STATUS2_NIGHTMARE) && gBattleMons[gActiveBattler].hp != 0)
	{
		if((gBattleMons[gActiveBattler].status1 & STATUS1_SLEEP))
		{
			gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 4;
			
			if(gBattleMoveDamage == 0)
				gBattleMoveDamage = 1;
			
			BattleScriptExecute(BattleScript_NightmareTurnDmg);
			effect++;
		}
		else
		{
			gBattleMons[gActiveBattler].status2 &= ~STATUS2_NIGHTMARE;
		}
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_CURSE:
	if((gBattleMons[gActiveBattler].status2 & STATUS2_CURSED) && gBattleMons[gActiveBattler].hp != 0)
	{
		gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 4;
		
		if(gBattleMoveDamage == 0)
			gBattleMoveDamage = 1;
		
		BattleScriptExecute(BattleScript_CurseTurnDmg);
		effect++;
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
case ENDTURN_WRAP:
	if((gBattleMons[gActiveBattler].status2 & STATUS2_WRAPPED) && gBattleMons[gActiveBattler].hp != 0)
	{
		gBattleMons[gActiveBattler].status2 -= 0x2000;
		
		if(gBattleMons[gActiveBattler].status2 & STATUS2_WRAPPED)
		{
			gBattleScripting.animArg1 = *(gBattleStruct->wrappedMove[gActiveBattler][0]);
			gBattleScripting.animArg2 = *(gBattleStruct->wrappedMove[gActiveBattler][1]);
			gBattleTextBuff1[0] = B_BUFF_PLACEHOLDER_BEGIN;
			gBattleTextBuff1[1] = B_BUFF_MOVE;
			gBattleTextBuff1[2] = *(gBattleStruct->wrappedMove[gActiveBattler][0]);
			gBattleTextBuff1[3] = *(gBattleStruct->wrappedMove[gActiveBattler][1]);
			gBattleTextBuff1[4] = EOS;
			gBattleScriptCurrInstr = BattleScript_WrapTurnDmg;
			gBattleMoveDamage = gBattleMons[gActiveBattler].maxHP / 16;
			
			if(gBattleMoveDamage == 0)
				gBattleMoveDamage = 1;
		}
		else
		{
			gBattleTextBuff1[0] = B_BUFF_PLACEHOLDER_BEGIN;
			gBattleTextBuff1[1] = B_BUFF_MOVE;
			gBattleTextBuff1[2] = *(gBattleStruct->wrappedMove[gActiveBattler][0]);
			gBattleTextBuff1[3] = *(gBattleStruct->wrappedMove[gActiveBattler][1]);
			gBattleTextBuff1[4] = EOS;
			gBattleScriptCurrInstr = BattleScript_WrapEnds;
		}
		
		BattleScriptExecute(gBattleScriptCurrInstr)
		effect++;
	}
	
	gBattleStruct->turnEffectsTracker++;
	break;
...