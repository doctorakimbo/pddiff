InheritIVs(egg, daycare)
{
	for(i = 0; i < NUM_STATS; i++)
		availableIVs[i] = i;

	if(GetHoldEffect(GetMonData(&daycare->mons[0].mon, MON_DATA_HELD_ITEM, NULL)) == HOLD_EFFECT_DESTINY_KNOT || GetHoldEffect(GetMonData(&daycare->mons[1].mon, MON_DATA_HELD_ITEM, NULL)) == HOLD_EFFECT_DESTINY_KNOT)
		uninheritedIVs = 1;
	else
		uninheritedIVs = 3;
	
	for(i = 0; i < uninheritedIVs; i++)
	{
		whichStat = Random() % NUM_STATS;
		
		if(GetStatFromPowerItem(&daycare->mons[0].mon) == whichStat || GetStatFromPowerItem(&daycare->mons[1].mon) == whichStat || availableIVs[whichStat] == 0xFF)
		{
			i--; // don't increment i, completely ignore this stat
			continue;
		}
		
		availableIVs[whichStat] = 0xFF;
	}
	
	for(i = 0; i <= NUM_STATS; i++)
		whichParent[i] = Random() % 2;
	
	powerStat = GetStatFromPowerItem(&daycare->mons[0].mon);
	
	if(powerStat <= 5)
		whichParent[powerStat] = 0;
	
	powerStat = GetStatFromPowerItem(&daycare->mons[0].mon);
	
	if(powerStat <= 5)
		whichParent[powerStat] = 0;
	
	for(i = 0; i < NUM_STATS; i++)
	{
		selectedIV = availableIVs[i];
		
		if(selectedIV > 5)
			continue;

		iv = GetBoxMonData(&daycare->mons[whichParent[i]].mon, MON_DATA_HP_IV + selectedIV);
		
		switch(selectedIV)
		{
		case 0:
			SetMonData(egg, MON_DATA_HP_IV, &iv);
			break;
		case 1:
			SetMonData(egg, MON_DATA_ATK_IV, &iv);
			break;
		case 2:
			SetMonData(egg, MON_DATA_DEF_IV, &iv);
			break;
		case 3:
			SetMonData(egg, MON_DATA_SPEED_IV, &iv);
			break;
		case 4:
			SetMonData(egg, MON_DATA_SPATK_IV, &iv);
			break;
		case 5:
			SetMonData(egg, MON_DATA_SPDEF_IV, &iv);
			break;
		}
	}
}







GetStatFromPowerItem(mon) @451B4_J
{
	heldItem = GetMonData(mon, MON_DATA_HELD_ITEM, NULL)
	
	if(heldItem != ITEM_NONE && GetHoldEffect(heldItem) == HOLD_EFFECT_EV_BOOST)
		return (GetHoldEffectParam(heldItem) - 1);
	else
		return 0xFF;
}