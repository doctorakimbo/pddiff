asm1() @11FC4B4
{
	for(r3 = 0; r3 < 4; r3++)
	{
		if(gBattleResources->0x14.2 == gBattleMons[gBattlerAttacker].0xC[r3])
		{
			gBattleResources->0x14.8 = gBattleMons[gBattlerAttacker].0x24[r3]
			return
		}
	}

	gBattleResources->0x14.8 = 0
}





asm2() @11FC4E8
{
	bkpt 0x0
}





asm3() @11FC4EE
{
	if(gBaseStats[gBattleMons[gBattlerTarget].0].1 < gBaseStats[gBattleMons[gBattlerTarget].0].4)
		gBattleResources->0x14.8 = 1
	else
		gBattleResources->0x14.8 = 0
}





asm4() @11FC51E
{
	gBattleResources->0x14.8 = data_0203D500_J[(gBattlerTarget & 2) >> 1].1
}





asm5() @11FC53A
{	
	if(gBaseStats[gBattleMons[gBattlerTarget].0].1 >= 0x5F || gBaseStats[gBattleMons[gBattlerTarget].0].4 >= 0x5F)
		gBattleResources->0x14.8 = 1
	elseif(gBaseStats[gBattleMons[gBattlerTarget].0].2 < 0x64 && gBaseStats[gBattleMons[gBattlerTarget].0].5 < 0x64)
		gBattleResources->0x14.8 = 1
	else
		gBattleResources->0x14.8 = 0
	}
}





asm6() @11FC57A
{
	if(gRecordedAbilities[gBattlerPartyIndexes[gBattlerTarget]] != 0)
	{
		if(IsMoveBlockedByAbility(gBaseStats[gBattleMons[gBattlerTarget].0].0x16, gBattleResources->0x14.2, gBattleMons[gBattlerTarget].0x21, gBattleMons[gBattlerTarget].0x22)
			gBattleResources->0x14.8 = 1
		elseif(IsMoveBlockedByAbility(gBaseStats[gBattleMons[gBattlerTarget].0].0x17, gBattleResources->0x14.2, gBattleMons[gBattlerTarget].0x21, gBattleMons[gBattlerTarget].0x22)
			gBattleResources->0x14.8 = 1
		else
			gBattleResources->0x14.8 = 0
	}
	else
		gBattleResources->0x14.8 = 0
}





asm7() @11FC5D6
{
	if(gTrickRoomTurns != 0)
		r4 = 1
	else
		r4 = 0
	
	r5 = 0
	s1 = 0
	
	for(r6 = 0; r6 < 6; r6++)
	{
		if(GetMonData(&gEnemyParty[r6], 0x39) != 0 && GetMonData(&gEnemyParty[r6], 0x2D) == 0)
		{
			s1 += GetMonData(&gEnemyParty[r6], 0x3D)
			r5++
		}
	}
	
	gBattleResources->0x14.8 = (((s1 / r5) - 0x64) >> 0x1F) ^ r4
}





asm8() @11FC63E
{
	for(r4 = 0; r4 < 6; r4++)
	{
		if((gBattleTypeFlags & 1 == 0 || r4 != 1) && r4 != 0)
		{
			r0 = gWasMonShown & (1 << r4)
			
			if(r0 == 0)
				continue;
		}
		
		r0 = GetMonData(&gPlayerParty[r4], 0x39)
		
		if(r0 != 0)
		{
			r0 = GetMonData(&gPlayerParty[r4], 0x2D)
			
			if(r0 == 0)
			{
				r0 = asm8pt5(gBattleResources->0x14.2, GetMonData(&gPlayerParty[r4], 0xB)) & 8
				
				if(r0 & 8 != 0)
					break;
			}
		}
	}
	
	gBattleResources->0x14.8 = r0
}





asm8pt5(arg0, arg1)
{
	r0 = AI_TypeCalc(arg0, arg1, gBaseStats[arg1].0x16)
	r6 = AI_TypeCalc(arg0, arg1, gBaseStats[arg1].0x17)
	
	if(r0 < r6)
		r0 = r6
	
	return r0
}





asm9() @11FC6EA
{
	for(s0 = 0; s0 < 4; s0++)
	{
		r2 = s0
		r1 = *((gBattlerPartyIndexes[gBattlerTarget] * 0xC) + data_0203B970_J + (r2 * 2))

		do
		{
			r2--
			
			if(r2 < 0 && gBattleMoves[r1].1 > 1)
			{
				gDynamicBasePower = 0
				gBattleStruct->0x13 = 0
				gBattleScripting.0xE = 1
				gMoveResultFlags = 0
				gCritMultiplier = 1
				gCurrentMove = r1
				AI_CalcDmg(gBattlerTarget, gBattlerAttacker)
				TypeCalc(gCurrentMove, gBattlerAttacker, gBattlerTarget)
				
				if(gBattleMoves[r1].0 == 0x1D)
					gBattleMoveDamage *= 4
				elseif(gBattleMoves[r1].0 == 0x2C)
					gBattleMoveDamage *= 2
				
				if(gBattleMoveDamage == 0)
					gBattleMoveDamage = 1
				
				if(gBattleMons[gBattlerAttacker].0x28 <= gBattleMoveDamage)
				{
					gBattleResources->0x14.8 = 1
					return
				}
			}
		} while(r1 != *((gBattlerPartyIndexes[gBattlerTarget] * 0xC) + data_0203B970_J + (r2 * 2)))
	}
	
	gBattleResources->0x14.8 = 0
}