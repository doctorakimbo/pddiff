atk0C_datahpupdate()
{
	if(*gBattleControllerExecFlags)
		return
	
	if(*(*gBattleStruct + 0x13) != 0 && !(*(*gBattleStruct + 0x13) & 0x40))
		r6 = *(*gBattleStruct + 0x13) & 0x3F
	else
		r6 = *((*gCurrentMove * 0xC) + gBattleMoves + 2)
	
	if(*gMoveResultFlags & 0x29)
	{
		*gActiveBattler = GetBattlerForBattleScript(*(*gBattleScriptCurrInstr + 1))
		
		if(*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) == 0)
			*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) = 0xFFFF
		
		goto lbl29
	}
	
	*gActiveBattler = GetBattlerForBattleScript(*(*gBattleScriptCurrInstr + 1))
	
	if((*((*gActiveBattler * 0x58) + gBattleMons + 0x50) & 0x1000000) && *((*gActiveBattler * 0x1C) + gDisableStructs + 0xA) != 0 && !(*gHitMarker & 0x100))
	{
		if(*((*gActiveBattler * 0x1C) + gDisableStructs + 0xA) >= *gBattleMoveDamage)
		{
			if(*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) == 0)
				*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) = *gBattleMoveDamage
			
			*((*gActiveBattler * 0x1C) + gDisableStructs + 0xA) -= *gBattleMoveDamage
			*data_02023D54 = *gBattleMoveDamage
		}
		else
		{
			if(*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) == 0)
				*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) = *((*gActiveBattler * 0x1C) + gDisableStructs + 0xA)
			
			*data_02023D54 = *((*gActiveBattler * 0x1C) + gDisableStructs + 0xA)
			*((*gActiveBattler * 0x1C) + gDisableStructs + 0xA) = 0
		}
		
		if(*((*gActiveBattler * 0x1C) + gDisableStructs + 0xA) != 0)
			goto lbl29
		
		*gBattleScriptCurrInstr += 2
		BattleScriptPushCursor()
		*gBattleScriptCurrInstr = script_1D9526
		return
	}
	
	*gHitMarker &= ~0x100
	
	if(*gBattleMoveDamage < 0)
	{
		*((*gActiveBattler + 0x58) + gBattleMons + 0x28) -= *gBattleMoveDamage
		
		if(*((*gActiveBattler * 0x58) + gBattleMons + 0x28) <= *((*gActiveBattler * 0x58) + gBattleMons + 0x2C))
			*((*gActiveBattler * 0x58) + gBattleMons + 0x28) = *((*gActiveBattler * 0x58) + gBattleMons + 0x2C)
		
		goto lbl27
	}
	
	if(*gHitMarker & 0x20)
	{
		*gHitMarker &= ~0x20
	}
	else
	{
		*((*gActiveBattler * 4) + data_02023D58) += *gBattleMoveDamage
		
		if(*(*gBattleScriptCurrInstr + 1) == 0)
			*(*gActiveBattler + data_02023DD8) = *gBattlerAttacker
		else
			*(*gActiveBattler + data_02023DD8) = *gBattlerTarget
	}
	
	if(*((*gActiveBattler * 0x58) + gBattleMons + 0x28) > *gBattleMoveDamage)
	{
		*((*gActiveBattler * 0x58) + gBattleMons + 0x28) -= *gBattleMoveDamage
		*data_02023D54 = *gBattleMoveDamage
	}
	else
	{
		*data_02023D54 = *((*gActiveBattler * 0x58) + gBattleMons + 0x28)
		*((*gActiveBattler * 0x58) + gBattleMons + 0x28) = 0
	}
	
	if(*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) == 0 && !(*gHitMarker & 0x100000))
		*((*gActiveBattler * 0x14) + gSpecialStatuses + 4) = *data_02023D54
	
	if(r6 <= 8)
	{
		if(!(*gHitMarker & 0x100000) && *gCurrentMove != 0xDC)
		{
			*((*gActiveBattler * 0x10) + gProtectStructs + 4) = *data_02023D54
			*((*gActiveBattler * 0x14) + gSpecialStatuses + 8) = *data_02023D54
			
			if(*(*gBattleScriptCurrInstr + 1) == 0)
			{
				*((*gActiveBattler * 0x10) + gProtectStructs + 0xC) = *gBattlerAttacker
				*(*gActiveBattler * 0x14 + gSpecialStatuses + 0x10) = *gBattlerAttacker
			}
			else
			{
				*((*gActiveBattler * 0x10) + gProtectStructs + 0xC) = *gBattlerTarget
				*(*gActiveBattler * 0x14 + gSpecialStatuses + 0x10) = *gBattlerTarget
			}
			
			goto lbl27
		}
		
		if(r6 < 8)
			goto lbl27
	}
	
	if(!(*gHitMarker & 0x100000))
	{
		*((*gActiveBattler * 0x10) + gProtectStructs + 8) = *data_02023D54
		*((*gActiveBattler * 0x14) + gSpecialStatuses + 0xC) = *data_02023D54
		
		if(*(*gBattleScriptCurrInstr + 1) == 0)
		{
			*((*gActiveBattler * 0x10) + gProtectStructs + 0xD) = *gBattlerAttacker
			*((*gActiveBattler * 0x14) + gSpecialStatuses + 0x11) = *gBattlerAttacker
		}
		else
		{
			*((*gActiveBattler * 0x10) + gProtectStructs + 0xD) = *gBattlerTarget
			*((*gActiveBattler * 0x14) + gSpecialStatuses + 0x11) = *gBattlerTarget
		}
	}

	lbl27:
	*gHitMarker &= ~0x100000
	BtlController_EmitSetMonData(0, 0x2A, 0, 2, (*gActiveBattler * 0x58) + gBattleMons.hp)
	MarkBattlerForControllerExec(*gActiveBattler)

	lbl29:
	*gBattleScriptCurrInstr += 2
}