AlternateTypeCalc()
{
	if(gCurrentMove == MOVE_STRUGGLE)
	{
		gBattleScriptCurrInstr++;
		return;
	}
	
	GET_MOVE_TYPE(gCurrentMove, rawMoveType);
	
	if(rawMoveType == TYPE_NORMAL)
	{
		while(gBattleMons[gBattlerAttacker].ability != table_168CA4_J[rawMoveType])
		{
			if(table_168CA4_J[rawMoveType] == 0xFF)
				break;
				
			rawMoveType++;
		}
		
		if(table_168CA4_J[rawMoveType] != 0xFF)
			moveType = rawMoveType;
		else
			moveType = TYPE_NORMAL;
	}
	else
	{
		if(gBattleMons[gBattlerAttacker].ability == ABILITY_NORMALIZE)
			rawMoveType = TYPE_NORMAL;
		else
			moveType = rawMoveType;
	}
	
	if(IS_BATTLER_OF_TYPE(gBattlerAttacker, moveType))
	{
		if(gBattleMons[gBattlerAttacker].ability == ABILITY_ADAPTABILITY)
			gBattleMoveDamage = gBattleMoveDamage * 2;
		else
			gBattleMoveDamage = gBattleMoveDamage + (gBattleMoveDamage / 2);
	}
	
	if(gBattleMons[gBattlerAttacker].ability != ABILITY_MOLD_BREAKER && gBattleMons[gBattlerAttacker].ability - 0xA3 >= 1 && gCurrentMove != 0x29F && gBattleMons[gBattlerTarget].ability == ABILITY_LEVITATE && moveType == TYPE_GROUND)
	{
		gMoveResultFlags |= (MOVE_RESULT_MISSED | MOVE_RESULT_DOESNT_AFFECT_FOE);
		gBattleCommunication[6] = TYPE_GROUND;
		gLastUsedAbility = gBattleMons[gBattlerTarget].ability;
		gLastLandedMoves[gBattlerTarget] = 0;
		gLastHitByType[gBattlerTarget] = 0;
		RecordAbilityBattle(gBattlerTarget, gLastUsedAbility);
	}
	else
	{
		i = 0;
		
		while(data_1410000_J[i].0 != TYPE_ENDTABLE)
		{
			if(data_1410000_J[i].0 == TYPE_FORESIGHT)
			{
				if(gBattleMons[gBattlerAttacker].ability == ABILITY_SCRAPPY || (gBattleMons[gBattlerTarget].status2 & STATUS2_FORESIGHT))
					break;
					
				i += 3;
				continue;
			}
			elseif(data_1410000_J[i].0 == moveType && IS_BATTLER_OF_TYPE(gBattlerTarget, data_1410000_J[i].1))
				ModulateDmgByType(data_1410000_J[i].2)
			
			i += 3;
			continue;
		}
		
		if((gMoveResultFlags & MOVE_RESULT_SUPER_EFFECTIVE) && gBattleMons[gBattlerAttacker].ability != ABILITY_KLUTZ && GetHoldEffect(gBattleMons[gBattlerAttacker].item) == ITEM_EFFECT_EXPERT_BELT)
			gBattleMoveDamage *= (12 / 10);
		
		if(gBattleMons[gBattlerAttacker].ability) == ABILITY_TINTED_LENS && (gMoveResultFlags & MOVE_RESULT_NOT_VERY_EFFECTIVE))
			gBattleMoveDamage *= 2;
		
		if(gBattleMons[gBattlerAttacker].ability != ABILITY_MOLD_BREAKER && gBattleMons[gBattlerAttacker].ability - 0xA3 >= 1)
		{
			if((gBattleMons[gBattlerTarget].ability == 0x6F || gBattleMons[gBattlerTarget].ability == 0x74) && (gMoveResultFlags & MOVE_RESULT_SUPER_EFFECTIVE))
				gBattleMoveDamage -= (gBattleMoveDamage / 4);
			
			if(gBattleMons[gBattlerTarget].ability == ABILITY_WONDER_GUARD && AttacksThisTurn(gBattlerAttacker, gCurrentMove) == 2 && !(gMoveResultFlags & MOVE_RESULT_SUPER_EFFECTIVE) && gBattleMoves[gCurrentMove].power)
			{
				gMoveResultFlags |= MOVE_RESULT_MISSED;
				gBattleCommunication[6] = 3;
				gLastUsedAbility = ABILITY_WONDER_GUARD;
				gLastLandedMoves[gBattlerTarget] = 0;
				gLastHitByType[gBattlerTarget] = 0;
				RecordAbilityBattle(gBattlerTarget, gLastUsedAbility);
			}
		}
	}
	
	if(gMoveResultFlags & MOVE_RESULT_DOESNT_AFFECT_FOE)
		gProtectStructs[gBattlerAttacker].targetNotAffected = 1;
	
	if(!(gMoveResultFlags & MOVE_RESULT_NO_EFFECT))
	{
		if(HasItemWithTypeEffect(gBattleMons[gBattlerAttacker], moveType) && ItemId_GetHoldEffectParam(gBattleMons[gBattlerAttacker].item)) >= 30)
		{
			ConsumeItem(gBattlerAttacker);
			gBattleScriptCurrInstr++;
			BattleScriptPushCursor();
			gBattleScriptCurrInstr = script_1F552_J;
			return;
		}
	}
	
	gBattleScriptCurrInstr++
}




table_168CA4_J:
(broken)




































SetTypeToBattlerType1()
{
	gBattleStruct->dynamicMoveType = gBattleMons[gBattlerAttacker].type1 + 0xC0;
	gBattleScriptCurrInstr++;
}