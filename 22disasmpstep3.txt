TypeCalc(arg0, arg1, arg2)
{
	s0 = 0
	
	if(arg0 == 0xA5)
		return 0
	
	if(gBattleMoves[arg0].0 == 0x87)
	{
		r2 = 0

		for(r4 = 0; r4 != 6; r4++)
		{
			r2 |= ((gBattleMons[arg1].0x14 & (1 << (r4 * 5))) >> (r4 * 4))
		}
		
		s2 = ((r2 * 0x10) / 0x3F) + 1
	}
	else
	{
		s2 = gBattleMoves[arg0].2
		
		if(gBattleMons[arg1].0x20 == 0x60)
			s2 = 0
		elseif(s2 == 0)
		{
			r4 = 0
		
			do
			{
				r4++
				r2 = AteAbilityConversionTable[r4]
				
				if(r2 == 0xFF)
					break
			} while(r2 != gBattleMons[arg1].0x20)
			
			if(r2 == 0xFF)
				s2 = 0
			else
				s2 = r4
		}
	}
	
	if(gBattleMons[arg1].0x21 == s2 || gBattleMons[arg1].0x22 == s2)
	{
		if(gBattleMons[arg1].0x20 == 0x5B)
			gBattleMoveDamage *= 2
		else
			gBattleMoveDamage += (gBattleMoveDamage / 2)
	}
	
	if(fn_251DA0_J(gBattleMons[arg2].0x20, arg0, gBattleMons[arg2].0x21, gBattleMons[arg2].0x22))
		s0 |= 9
	else
	{
		i = 0
		
		while(data_0820BF24_J[i][0] != 0xFF)
		{
			if(data_0820BF24_J[i][0] == 0xFE && (gBattleMons[arg2].0x50 & 0x2000000000) && gBattleMons[arg1].0x20 != 0x71)
				break
			elseif(data_0820BF24_J[i][0] == s2 && (data_0820BF24_J[i][1] == gBattleMons[arg2].0x21 || (data_0820BF24_J[i][1] != gBattleMons[arg2].0x22 && gBattleMons[arg2].0x21 == gBattleMons[arg2].0x22)))
				ModulateDmgByType2(data_0820BF24_J[i][2], arg0, s0)
			
			i += 3
		}
	}
	
	if(gBattleMons[arg2].0x20 == 0x19 && !(s0 & 3) && gBattleMoves[arg0].1 != 0)
		s0 |= 1
	
	if(!(s0 & 0x29))
		fn_2076B0_J(s0, arg1, arg2, s2)
	
	return s0
}




fn_2076B0_J(arg0, arg1, arg2, arg3)
{
	if(gBattleMons[arg2].0x20 != 0x67 && GetHoldEffect(gBattleMons[arg2].0x2E) == 0x4C && (arg0 & 2))
		gBattleMoveDamage *= (0xC / 0xA)

	if(gBattleMons[arg1].0x20 != 0x67 && !AbilityBattleEffects(0x10, arg1, 0x7F, 0, arg0) && GetHoldEffectParam(gBattleMons[arg1].0x2E) == 0 && HasItemWithTypeEffect(gBattleMons[arg1], arg3) && (arg3 == 0 || (arg0 & 2)))
		gBattleMoveDamage /= 2

	if(gBattleMons[arg2].0x20 == 0x6E && (arg0 & 4))
		gBattleMoveDamage *= 2

	if(gBattleMons[arg2].0x20 != 0x68 && gBattleMons[arg2].0x20 - 0xA3 > 1 && (gBattleMons[arg1].0x20 == 0x6F || gBattleMons[arg1].0x20 == 0x74))
		gBattleMoveDamage -= (gBattleMoveDamage / 4)
}




fn_251DA0_J(arg0, arg1, arg2, arg3)
{
	if(*((arg1 * 0xC) + gBattleMoves + 2) == 4 && arg0 == 0x1A)
		return 1
	
	if(*((arg1 * 0xC) + gBattleMoves + 2) == 0xD && (arg0 == 0xA || arg0 == 0x1F || arg0 == 0x4E))
		return 1

	if(*((arg1 * 0xC) + gBattleMoves + 2) == 0xB && (arg0 == 0xB || arg0 == 0x57 || arg0 == 0x72))
		return 1

	if(*((arg1 * 0xC) + gBattleMoves + 2) == 0xA && arg0 == 0x12)
		return 1

	if(*((arg1 * 0xC) + gBattleMoves + 2) == 0xC && arg0 == 0x9D)
		return 1

	if((arg0 == 0xD6 || arg0 == 0xDB) && gBattleMoves[arg1].0 == 0x67)
		return 1
	
	if(arg0 == 0xB9 && (gBattleMoves[arg1].9 & 2))
		return 1

	if(arg0 == 0x8E || (arg2 == 0xC || arg3 == 0xC) && (gBattleMoves[arg1].9 & 4))
		return 1
	
	if(arg0 == 0xA5 && (gBattleMoves[arg1].9 & 8))
		return 1
	
	if(arg0 == 0x2B && (gBattleMoves[arg1].9 & 1))
		return 1

	return 0
}