atk0C_datahpupdate()
{
	if(gBattleControllerExecFlags)
		return;
	
	if(gBattleStruct->dynamicMoveType != 0 && !(gBattleStruct->dynamicMoveType & 0x40))
		moveType = gBattleStruct->dynamicMoveType & 0x3F;
	else
		moveType = gBattleMoves[gCurrentMove].type;
	
	if(!(gMoveResultFlags & MOVE_RESULT_NO_EFFECT))
	{
		gActiveBattler = GetBattlerForBattleScript(gBattleScriptCurrInstr[1]);
		
		if((gBattleMons[gActiveBattler].status2 & STATUS2_SUBSTITUTE) && gDisableStructs[gActiveBattler].substituteHP && !(gHitMarker & HITMARKER_IGNORE_SUBSTITUTE)))
		{
			if(gDisableStructs[gActiveBattler].substituteHP >= gBattleMoveDamage)
			{
				if(gSpecialStatuses[gActiveBattler].dmg == 0)
					gSpecialStatuses[gActiveBattler].dmg = gBattleMoveDamage;
				
				gDisableStructs[gActiveBattler].substituteHP -= gBattleMoveDamage;
				gHpDealt = gBattleMoveDamage;
			}
			else
			{
				if(gSpecialStatuses[gActiveBattler].dmg == 0)
					gSpecialStatuses[gActiveBattler].dmg = gDisableStructs[gActiveBattler].substituteHP;
				
				gHpDealt = gDisableStructs[gActiveBattler].substituteHP;
				gDisableStructs[gActiveBattler].substituteHP = 0;
			}
			
			if(gDisableStructs[gActiveBattler].substituteHP == 0)
			{
				gBattleScriptCurrInstr += 2;
				BattleScriptPushCursor();
				gBattleScriptCurrInstr = BattleScript_SubstituteFade;
				return;
			}
		}
		else
		{
			gHitMarker &= ~(HITMARKER_IGNORE_SUBSTITUTE);
			
			if(gBattleMoveDamage < 0)
			{
				gBattleMons[gActiveBattler].hp -= gBattleMoveDamage;
				
				if(gBattleMons[gActiveBattler].hp > gBattleMons[gActiveBattler].maxHP)
					gBattleMons[gActiveBattler].hp = gBattleMons[gActiveBattler].maxHP;
			}
			else
			{
				if(gHitMarker & HITMARKER_x20)
					gHitMarker &= ~(HITMARKER_x20);
				else
				{
					gTakenDmg[gActiveBattler] += gBattleMoveDamage;
					
					if(gBattleScriptCurrInstr[1] == BS_TARGET)
						gTakenDmgByBattler[gActiveBattler] = gBattlerAttacker;
					else
						gTakenDmgByBattler[gActiveBattler] = gBattlerTarget;
				}
				
				if(gBattleMons[gActiveBattler].hp > gBattleMoveDamage)
				{
					gBattleMons[gActiveBattler].hp -= gBattleMoveDamage;
					gHpDealt = gBattleMoveDamage;
				}
				else
				{
					gHpDealt = gBattleMons[gActiveBattler].hp;
					gBattleMons[gActiveBattler].hp = 0;
				}
				
				if(!gSpecialStatuses[gActiveBattler].dmg && !(gHitMarker & HITMARKER_x100000))
					gSpecialStatuses[gActiveBattler].dmg = gHpDealt;
				
				if(IS_TYPE_PHYSICAL(moveType) && !(gHitMarker & HITMARKER_x100000) && gCurrentMove != MOVE_PAIN_SPLIT)
				{
					gProtectStructs[gActiveBattler].physicalDmg = gHpDealt;
					gSpecialStatuses[gActiveBattler].physicalDmg = gHpDealt;
					
					if(gBattleScriptCurrInstr[1] == BS_TARGET)
					{
						gProtectStructs[gActiveBattler].physicalBattlerId = gBattlerAttacker;
						gSpecialStatuses[gActiveBattler].physicalBattlerId = gBattlerAttacker;
					}
					else
					{
						gProtectStructs[gActiveBattler].physicalBattlerId = gBattlerTarget;
						gSpecialStatuses[gActiveBattler].physicalBattlerId = gBattlerTarget;
					}
				}
				elseif(!IS_TYPE_PHYSICAL(moveType) && !(gHitMarker & HITMARKER_x100000))
				{
					gProtectStructs[gActiveBattler].specialDmg = gHpDealt;
					gSpecialStatuses[gActiveBattler].specialDmg = gHpDealt;
					
					if(gBattleScriptCurrInstr[1] == BS_TARGET)
					{
						gProtectStructs[gActiveBattler].specialBattlerId = gBattlerAttacker;
						gSpecialStatuses[gActiveBattler].specialBattlerId = gBattlerAttacker;
					}
					else
					{
						gProtectStructs[gActiveBattler].specialBattlerId = gBattlerTarget;
						gSpecialStatuses[gActiveBattler].specialBattlerId = gBattlerTarget;
					}
				}
			}
			
			gHitMarker &= ~(HITMARKER_x100000);
			BtlController_EmitSetMonData(0, REQUEST_HP_BATTLE, 0, 2, &gBattleMons[gActiveBattler].hp);
			MarkBattlerForControllerExec(gActiveBattler);
		}
	}
	else
	{
		gActiveBattler = GetBattlerForBattleScript(gBattleScriptCurrInstr[1]);
		
		if(gSpecialStatuses[gActiveBattler].dmg == 0)
			gSpecialStatuses[gActiveBattler].dmg = 0xFFFF;
	}
	
	gBattleScriptCurrInstr += 2;
}