OpponentHandleChoosePokemon()
{
	if(gBattleStruct->AI_monToSwitchIntoId[GetBattlerPosition(gActiveBattler) / 2] == PARTY_SIZE)
	{
		chosenMonId = GetMostSuitableMonToSwitchInto();
		
		if(chosenMonId == PARTY_SIZE)
		{
			if(!(gBattleTypeFlags & BATTLE_TYPE_DOUBLE))
				battler2 = battler1 = GetBattlerAtPosition(B_POSITION_OPPONENT_LEFT);
			else
			{
				battler1 = GetBattlerAtPosition(B_POSITION_OPPONENT_LEFT);
				battler2 = GetBattlerAtPosition(B_POSITION_OPPONENT_RIGHT);
			}
			
			for(chosenMonId = 0; chosenMonId <= 5; chosenMonId++)
			{
				if(GetMonData(&gEnemyParty[chosenMonId], MON_DATA_HP) != 0 && chosenMonId != gBattlerPartyIndexes[battler1] && chosenMonId != gBattlerPartyIndexes[battler2])
					break;
			}
		}
	}
	else
	{
		chosenMonId = gBattleStruct->AI_monToSwitchIntoId[GetBattlerPosition(gActiveBattler) / 2]
		gBattleStruct->AI_monToSwitchIntoId[GetBattlerPosition(gActiveBattler) / 2] = PARTY_SIZE
	}
	
	gBattleStruct->monToSwitchIntoId[gActiveBattler] = chosenMonId;
	BtlController_EmitChosenMonReturnValue(1, chosenMonId, NULL);
	OpponentBufferExecCompleted();
}