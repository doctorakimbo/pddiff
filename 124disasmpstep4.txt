sub_806CAC8(input)
{
	sub_8069A54()
	playerDirection = GetPlayerFacingDirection();
	GetPlayerPosition(&position);
	oldValue = data_0203D2F9_J
	data_0203D2F9_J = 0
	
	if(oldValue != 0 && UseRegisteredKeyItemOnField() == TRUE)
	{
		data_03005078.pressedSelectButton = TRUE
		return TRUE;
	}
	
	r8 = sub_8058F48(position.x, position.y, 0xFF)
	metatileBehavior = MapGridGetMetatileBehaviorAt(position.x, position.y);
	sub_806C888(data_03005078)
	data_03005078.dpadDirection = input->dpadDirection
	
	if(CheckForTrainersWantingBattle() == TRUE || mapheader_run_first_tag2_script_list_match() == 1)
		return TRUE;
	
	if(input->tookStep)
	{
		IncrementGameStat(GAME_STAT_STEPS);
		sub_8146CA4()
		sub_815D8C8()
		sub_80CC918()
		sub_80CB054()
		sub_80CCFBC()
		
		if(TryStartStepBasedScript(&position, metatileBehavior, playerDirection) == TRUE)
		{
			data_03005078.tookStep = TRUE
			return TRUE;
		}
	}
	
	if(input->checkStandardWildEncounter)
	{
		if(input->dpadDirection == DIR_NONE || input->dpadDirection == playerDirection)
		{
			GetInFrontOfPlayerPosition(&position);
			metatileBehavior = MapGridGetMetatileBehaviorAt(position.x, position.y);
			
			if(sub_806D804(&position, metatileBehavior, playerDirection) == 1)
			{
				data_03005078.checkStandardWildEncounter = TRUE
				return TRUE;
			}
			
			GetPlayerPosition(&position);
			metatileBehavior = MapGridGetMetatileBehaviorAt(position.x, position.y);
		}
		
		if(input->checkStandardWildEncounter && sub_806D7F4(r8) == 1)
		{
			data_03005078.checkStandardWildEncounter = TRUE
			return TRUE;
		}
	}
	
	fn_183A90_J();
	
	if(input->input_field_0_4 && input->dpadDirection == playerDirection && sub_806D964(&position, metatileBehavior, playerDirection) == TRUE)
	{
		data_03005078.input_field_0_4 = TRUE
		return TRUE;
	}
	
	GetInFrontOfPlayerPosition(&position);
	metatileBehavior = MapGridGetMetatileBehaviorAt(position.x, position.y);
	
	if(input->input_field_0_4 && input->dpadDirection == playerDirection && sub_806D804(&position, metatileBehavior, playerDirection) == TRUE)
	{
		data_03005078.input_field_0_4 = TRUE
		return TRUE;
	}
		
	if(input->pressedAButton && TryStartInteractionScript(&position, metatileBehavior, playerDirection) == TRUE)
	{
		data_03005078.pressedAButton = TRUE
		return TRUE;
	}
	
	if(input->input_field_0_5 && input->dpadDirection == playerDirection && map_warp_consider_2_to_inside(&position, metatileBehavior, playerDirection) == TRUE)
	{
		data_03005078.input_field_0_5 = TRUE
		return TRUE;
	}
	
	if(input->pressedStartButton)
	{
		data_03005078.pressedStartButton = TRUE
		FlagSet(0x83E)
		PlaySE(SE_WIN_OPEN);
		ShowStartMenu();
		return TRUE;
	}
	
	if(data_03005078.dpadDirection == DIR_NONE && input->pressedSelectButton)
		fn_EE5000_J();
	
	return FALSE;
}






fn_183A90_J()
{
	if((gMain.newKeys & R_BUTTON) && FlagGet(0x82F))
	{
		data_0203C00D_J.0 ^= 1
		PlaySE(0x68 - (data_0203C00D_J.0 & 1))
	}
	
	if(!(gPlayerAvatar.flags & (PLAYER_AVATAR_FLAG_ON_FOOT | PLAYER_AVATAR_FLAG_ACRO_BIKE | PLAYER_AVATAR_FLAG_SURFING)))
	{
		if(gMain.newKeys & B_BUTTON)
		{
			data_0203C00D_J.0 ^= 2
			
			if(data_0203C00D_J.0 & 2)
				PlaySE(0x206)
			else
				PlaySE(0x207)
			
			data_0203C00D_J.1 = 0
		}
		else
		{
			if(data_0203C00D_J.0 & 2)
			{
				if(gMain.heldKeys & DPAD_ANY)
				{
					if(data_0203C00D_J.1 < 0x30)
						data_0203C00D_J.1++
					
					data_0203C00D_J.2 = (gMain.heldKeys & DPAD_ANY)
				}
				else
				{
					if(data_0203C00D_J.1 > 1)
						data_0203C00D_J.1 -= 2
					else
						data_0203C00D_J.1 = 0
				}
			}
		}
	}
}






fn_EE5000_J()
{
	data_0203D2E0_J.4 = 0
	data_0203D2E0_J.8 = 0
	data_0203D2E0_J.0xC = 0
	data_0203D2E0_J.0 = data_0203CB54_J
	CompactRegisteredItems();
	
	if(GetRegisteredItemList()[0] == ITEM_NONE)
	{
		data_0203D2F9_J = 1
		return;
	}
	
	SetGpuReg(REG_OFFSET_BG0CNT, data_04000008_J | BGCNT_256COLOR)

	for(r4 = 0; r4 <= 0xF; r4++)
	{
		if(data_030050D0_J[r4] == data_97B9D_J)
		{
			data_030050D0_J[r4].8 = 6
			SetGpuReg(REG_OFFSET_BG0VOFS, 0);
			break;
		}
	}
	
	CopyToBgTilemapBufferRect(0, data_EE5920_J, 0, 0xA, 0x1E, 0xA)
	r0 = data_EE57CC_J
	r1 = data_06008000_J
	svc(18)
	LoadPalette(data_EE5900_J, 0xD0, 0x20)
	LoadPalette(data_EE57AC_J, 0xE0, 0x20)
	data_03000F9C_J = 1
	data_0203D2FF_J = 1
	// oops! r1 is currently 1 instead of whatever was intended
	r1.5 = 1
	r1.0xD = 8
	fn_EE540C_J()
	fn_EE543E_J(data_EE5560_J, 0)
	fn_EE543E_J(data_EE5568_J, 1)
	fn_EE543E_J(data_EE5570_J, 2)
	fn_EE5510_J()
	registeredItems = GetRegisteredItemList();

	for(i = 0; registeredItems[i] != ITEM_NONE; i++) {};

	gRegisteredItemListSize = i - 1;
	fn_EE54D6_J()
	r4 = AddWindow(data_EE5578_J)
	PutWindowTilemap(r4)
	RemoveWindow(r4)
	r4 = AddWindow(data_EE5580_J)
	PutWindowTilemap(r4)
	RemoveWindow(r4)
	CopyBgTilemapBufferToVram(0)
	PlaySE(SE_SELECT);
	data_0203D2ED_J = 0x10
	data_0203D2FA_J = CreateTask(fn_EE51C0_J, 0)
}






GetRegisteredItemList() @99F4A_J
{
	return &gPokemonStoragePtr->registeredItems;
}





CompactRegisteredItems() @EE5528_J
{
	registeredItems = GetRegisteredItemList();

	for(i = 0; registeredItems[i] != ITEM_NONE; i++)
	{
		if(!CheckBagHasItem(registeredItems[i], 1))
		{
			CloseGapInRegisteredItemsList(&registeredItems[i]);
			i--; // don't increase the counter
		}
	}
}






fn_EE540C_J()
{
	registeredItems = GetRegisteredItemList();
	fn_EE5654_J(registeredItems[data_0203D2E0_J.0], data_06008800_J)
	r4 = AddWindow(data_EE5558_J)
	PutWindowTilemap(r4)
	RemoveWindow(r4)
}






fn_EE543E_J(arg0, arg1)
{
	r4 = AddWindow(arg0)
	r1 = data_02020430_J[r4].8
	r0 = data_EE56E0_J
	svc(17)
	registeredItems = GetRegisteredItemList();
	r0 = registeredItems[data_0203D2E1_J + arg1]
	
	if(r0 == 0)
		s4 = data_EE55AC_J
	else
		s4 = ItemId_GetName(r0)
	
	AddTextPrinterParameterized2(r4, 2, 4, 1, 0, 0, data_EE5588_J, -1)
	fn_EE561C_J(data_02020430_J[r4].8, 0x30, 0xD)
	memcpy(data_06009000_J[data_0203D2E1_J + (arg1 * 2)], data_02020430_J[r4].8, 0xC00)
	data_02020430_J[r4].4 = 2
	PutWindowTilemap(r4)
	RemoveWindow(r4)
}






fn_EE5510_J()
{
	fn_EE56BC_J(data_06009000_J[data_0203D2E2_J], 0x30, 0xD)
}






fn_EE54D6_J()
{
	if(data_0203D2E1_J == 0)
		memcpy(data_06009C00_J, data_EE5D38_J, 0xC0)
	else
		memcpy(data_06009C00_J, data_EE5C58_J, 0xC0)
	
	if(data_0203D2E1_J.4 <= gRegisteredItemListSize)
		memcpy(data_06009CC0_J, data_EE5B78_J, 0xC0)
	else
		memcpy(data_06009CC0_J, data_EE5D38_J, 0xC0)
}






fn_EE5654_J(arg0, arg1)
{
	r0 = *((arg0 * 8) + *data_981FC_J)
	r1 = (arg0 * 8) + arg1
	svc(18)
	LoadCompressedPalette(*((arg0 * 8) + *data_981FC_J + 4), 0xF0, 0x20)
	fn_EE561C_J(arg1, 9, 0xF)

	for(r0 = 0x23E; r0 != 0; r0 -= 2)
	{
		r1 = *(arg1 + r0)
		
		if((r1 >> 8) == 0xF0)
			r1 = (r1 & 0xFF) | 0xDB00
		
		if((r1 & 0xFF) == 0xF0)
			r1 = (r1 & 0xFF00) + 0xDB
		
		*(arg1 + r0) = r1
	}
}






fn_EE561C_J(arg0, arg1, arg2)
{
	r0 = (0x20 * arg1) + arg0
	r1 = (0x40 * arg1) + arg0

	for(r5 = arg1 * 0x20; r5 != 0; r5--)
	{
		r0 -= 1
		r1 -= 2
		*r1 = ((*r0 & 0xF) + (arg2 * 0x10)) | (((*r0 / 0x10) + (arg2 * 0x10)) * 0x100)
	}
}






fn_EE56BC_J(arg0, arg1, arg2)
{
	for(r1 = (arg1 * 0x40) - 2; r1 > 0; r1 -= 2)
	{
		*(arg0 + r1) = (*(arg0 + r1) & 0xF0F) | ((arg2 * 0x10) | ((arg2 * 0x10) * 0x100))
	}
}






CloseGapInRegisteredItemsList(startElement) @99F54_J
{
	for(elementPtr = startElement; *elementPtr != ITEM_NONE; elementPtr += SIZEOF(Item))
		*elementPtr = *(elementPtr + SIZEOF(Item));
}






fn_EE51C0_J()
{
	if(data_0203D2ED_J != 0)
		data_0203D2ED_J--
	
	if(data_0203D2EE_J != 0)
	{
		SetGpuReg(REG_OFFSET_BG0CNT, 0x4000008_J ^ BGCNT_256COLOR)
		data_03000F9C_J = 0
		DestroyTask(data_0203D2FA_J)
		data_0203CB54_J = data_0203D2E0_J.0
	}
	else
	{
		if(gMain.newKeys & (B_BUTTON | SELECT_BUTTON))
		{
			if(data_0203D2EC_J == 1)
			{
				PlaySE(SE_SELECT);
				goto lbl18
			}
			else
			{
				PlaySE(SE_SELECT);

				lbl4:
				data_0203D2FF_J = 0
				FillBgTilemapBufferRect_Palette0(0, 0, 0, 0, 0x1E, 0x14)
				CopyBgTilemapBufferToVram(0)
				data_0203D2EE_J = 1
			}
		}
		elseif(gMain.newKeys & A_BUTTON)
		{
			PlaySE(SE_SELECT);
			
			if(data_0203D2EC_J == 1)
				goto lbl18
			else
			{
				data_0203D2F9_J = 1
				goto lbl4
			}
		}
		elseif((gMain.newKeys & DPAD_UP))
		{
			if(data_0203D2E0_J.0 != 0)
			{
				data_0203D2E0_J.0--
				
				if(data_0203D2E0_J.2 != 0)
					data_0203D2E0_J.2--
				else
					data_0203D2E0_J.1--
				
				if(data_0203D2EC_J != 0)
				{
					registeredItems = GetRegisteredItemList();
					r3 = registeredItems[data_0203D2E0_J.0]
					r4 = registeredItems[data_0203D2E0_J.0 + 1]
					registeredItems[data_0203D2E0_J.0] = r4
					registeredItems[data_0203D2E0_J.0 + 1] = r3
				}
				
				PlaySE(SE_SELECT);
				fn_EE54D6_J()
				fn_EE540C_J()
				fn_EE543E_J(data_EE5560_J, 0)
				fn_EE543E_J(data_EE5568_J, 1)
				fn_EE543E_J(data_EE5570_J, 2)
				fn_EE5510_J()
			}
		}
		elseif(gMain.newKeys & DPAD_DOWN)
		{	
			if(data_0203D2E0_J.0 < (gRegisteredItemListSize - 1))
			{
				data_0203D2E0_J.0++
				
				if(data_0203D2E0_J.2 != 2)
					data_0203D2E0_J.2++
				else
					data_0203D2E0_J.1++
				
				if(data_0203D2EC_J != 0)
				{
					registeredItems = GetRegisteredItemList();
					r3 = registeredItems[data_0203D2E0_J.0]
					r4 = registeredItems[data_0203D2E0_J.0 - 1]
					registeredItems[data_0203D2E0_J.0] = r4
					registeredItems[data_0203D2E0_J.0 - 1] = r3
				}
				
				PlaySE(SE_SELECT);
				fn_EE54D6_J()
				fn_EE540C_J()
				fn_EE543E_J(data_EE5560_J, 0)
				fn_EE543E_J(data_EE5568_J, 1)
				fn_EE543E_J(data_EE5570_J, 2)
				fn_EE5510_J()
			}
		}
		elseif(gMain.newKeys & START_BUTTON)
		{
			PlaySE(SE_SELECT);

			lbl18:
			data_0203D2EC_J ^= 1
			
			if(data_0203D2EC_J == 1)
				LoadPalette(data_EE558C_J, 0xE0, 0x20)
			else
				LoadPalette(data_EE57AC_J, 0xE0, 0x20)
			
			
		}
	}
}