AnimTask_BlizzardUnknown(taskId)
{
	SetGpuReg(REG_OFFSET_BLDCNT, BLDCNT_TGT1_BG1 | BLDCNT_EFFECT_BLEND | BLDCNT_TGT2_ALL)
	SetGpuReg(REG_OFFSET_BLDALPHA, 0x1000)
	fn_BC1F8(1, BG_ANIM_PRIORITY, 1)
	fn_BC1F8(1, BG_ANIM_SCREEN_SIZE, 0)
	
	if(fn_73788() == 0)
		fn_BC1F8(1, BG_ANIM_CHAR_BASE_BLOCK, 1)
	
	gBattle_BG1_X = 0
	gBattle_BG1_Y = 0
	SetGpuReg(REG_OFFSET_BG1HOFS, 0)
	SetGpuReg(REG_OFFSET_BG1VOFS, 0)
	fn_752A0(&s0)
	fn_7543C(*(&s2 + 1), data_1231C10)
	fn_753B4(*(&s2 + 1), data_12317A0, *(&s2 + 2))
	LoadCompressedPalette(data_1231BF0, s2 * 0x10, 0x20)
	
	if(fn_73788() != 0)
		fn_730C0(s2, s1, 0, 0)
	
	if(gBattleAnimArgs[0] != 0 && GetBattlerSide(data_02037F1A) != B_SIDE_PLAYER)
		gTasks[taskId].data[0] = 1
	else
		gTasks[taskId].data[0] = 0
	
	gTasks[taskId].func = fn_B490C
}







Callback_PsychoCutUnknown(arg0)
{
	arg0.pos1.x = fn_74480(data_02037F1A, 2)
	
	if(data_02037F1A & 1)
		arg0.pos1.y = 40
	else
		arg0.pos1.y = 80
	
	arg0.data[6] = 0
	arg0.data[7] = 4
	arg0.callback = fn_E43F0
	SetGpuReg(REG_OFFSET_BLDALPHA, 0x400)
}







AnimTask_Move204Unknown(taskId)
{
	SetGpuReg(REG_OFFSET_BLDALPHA, 0)
	SetGpuReg(REG_OFFSET_BLDCNT, 0)
	DestroyAnimVisualTask(taskId)
}







Callback_SuckerPunchUnknown(arg0)
{
	StartSpriteAfflineAnim(arg0, 1)
	arg0.pos1.x = fn_74480(data_02037F1A, 2)
	arg0.pos1.y = fn_74480(data_02037F1A, 3)
	arg0.data[6] = fn_749D4(0)
	
	if(GetBattlerSide(data_02037F1A) == B_SIDE_OPPONENT)
		arg0.data[7] = -0x10
	else
		arg0.data[7] = 0x10
	
	arg0.data[0] = 1
	arg0.callback = fn_AE83C
}







AnimTask_PetalBlizzardUnknown(arg0)
{
	r5 = 0
	SetGpuReg(REG_OFFSET_BLDCNT, BLDCNT_TGT1_BG1 | BLDCNT_EFFECT_BLEND | BLDCNT_TGT2_ALL)
	SetGpuReg(REG_OFFSET_BLDALPHA, 0x1000)
	SetAnimBgAttribute(1, BG_ANIM_PRIORITY, 1)
	SetAnimBgAttribute(1, BG_ANIM_SCREEN_SIZE, 0)
	
	if(fn_73788() == 0)
		SetAnimBgAttribute(1, BG_ANIM_CHAR_BASE_BLOCK, 1)
	
	gBattle_BG1_X = 0
	gBattle_BG1_Y = 0
	SetGpuReg(REG_OFFSET_BG1HOFS, 0)
	SetGpuReg(REG_OFFSET_BG1VOFS, 0)
	fn_752A0(&s0)
	fn_7543C(*(&s2 + 1), data_1233010)
	fn_753B4(*(&s2 + 1), data_1232A50, *(&s2 + 2))
	LoadCompressedPalette(data_1232FF0, s2 * 0x10, 0x20)
	
	if(fn_73788() != 0)
		fn_730C0(s2, s1, 0, 0)
	
	if(gBattleAnimArgs != 0)
	{
		r4 = data_02037F1A // should probably be r0
		
		if(GetBattlerSide(gBattleAnimArgs) == B_SIDE_PLAYER)
			r5 = 1
	}
	
	gTasks[arg0].data[0] = r5
	gTasks[arg0].func = fn_B490C
}







Callback_Move251Unknown(arg0)
{
	if(gBattleAnimArgs[0] == 0)
	{
		arg0.pos1.x = fn_16926C_J(gBattleAnimAttacker, 2)
		arg0.pos1.y = fn_16926C_J(gBattleAnimAttacker, 3)
	}
	
	arg0.data[0] = gBattleAnimArgs[2]
	arg0.callback = fn_B37A4
}







fn_16926C_J(battler, case)
{
	switch(case)
	{
	case 0:
	case 2:
		return data_169204_J[gBattleTypeFlags & BATTLE_TYPE_DOUBLE][GetBattlerPosition(battler)].0
	case 1:
		return data_169204_J[gBattleTypeFlags & BATTLE_TYPE_DOUBLE][GetBattlerPosition(battler)].1
	case 3:
		if(GetBattlerPosition(battler) != 0)
		{
			if((*gBattleSpritesDataPtr).battlerData[battler].transformSpecies == SPECIES_NONE)
				species = GetMonData(&gEnemyParty[gBattlerPartyIndexes[battler]], MON_DATA_SPECIES)
			else
				species = (*gBattleSpritesDataPtr).battlerData[battler].transformSpecies
		}
		else
		{
			if((*gBattleSpritesDataPtr).battlerData[battler].transformSpecies == SPECIES_NONE)
				species = GetMonData(&gPlayerParty[gBattlerPartyIndexes[battler]], MON_DATA_SPECIES)
			else
				species = (*gBattleSpritesDataPtr).battlerData[battler].transformSpecies
		}
		
		if(case != 3)
			return fn_168B70_J(battler, species, 0)
		else
			return fn_168B70_J(battler, species, 1)
	case 4:
		gamecrash()
	}
	
	return r0
}







fn_168B70_J(battler, species, arg2)
{
	if(GetBattlerSide(battler) != 0)
		r5 = fn_74590(battler, species)
	else
		r5 = fn_74590(battler, species) - fn_7474C(battler, species)
	
	r4 = data_169204_J[gBattleTypeFlags & BATTLE_TYPE_DOUBLE][GetBattlerPosition(battler)].1 + r5
	
	if(arg2 != 0)
	{
		if(GetBattlerSide(battler) == 0)
			r4 += 8
		
		if(r4 > 0x68)
			r4 = 0x68
	}
	
	return r4
}







data_169204_J:
48 48 00 00 B0 20 00 00 30 20 00 00 70 48 00 00
20 48 00 00 C8 20 00 00 5A 50 00 00 98 18 00 00