AnimTask_BlizzardUnknown(taskId)
{
	SetGpuReg(REG_OFFSET_BLDCNT, BLDCNT_TGT1_BG1 | BLDCNT_EFFECT_BLEND | BLDCNT_TGT2_ALL)
	SetGpuReg(REG_OFFSET_BLDALPHA, 0x1000)
	fn_BC1F8(1, BG_ANIM_PRIORITY, 1)
	fn_BC1F8(1, BG_ANIM_SCREEN_SIZE, 0)
	
	if(fn_73788() == 0)
		fn_BC1F8(1, BG_ANIM_CHAR_BASE_BLOCK, 1)
	
	gBattle_BG1_X = 0
	gBattle_BG1_Y = 0
	SetGpuReg(REG_OFFSET_BG1HOFS, 0)
	SetGpuReg(REG_OFFSET_BG1VOFS, 0)
	fn_752A0(&s0)
	fn_7543C(*(&s2 + 1), data_1231C10)
	fn_753B4(*(&s2 + 1), data_12317A0, *(&s2 + 2))
	LoadCompressedPalette(data_1231BF0, s2 * 0x10, 0x20)
	
	if(fn_73788() != 0)
		fn_730C0(s2, s1, 0, 0)
	
	if(gBattleAnimArgs[0] != 0 && GetBattlerSide(data_02037F1A) != B_SIDE_PLAYER)
		gTasks[taskId].data[0] = 1
	else
		gTasks[taskId].data[0] = 0
	
	gTasks[taskId].func = fn_B490C
}







Callback_PsychoCutUnknown(arg0)
{
	arg0.pos1.x = fn_74480(data_02037F1A, 2)
	
	if(data_02037F1A & 1)
		arg0.pos1.y = 40
	else
		arg0.pos1.y = 80
	
	arg0.data[6] = 0
	arg0.data[7] = 4
	arg0.callback = fn_E43F0
	SetGpuReg(REG_OFFSET_BLDALPHA, 0x400)
}







AnimTask_Move204Unknown(taskId)
{
	SetGpuReg(REG_OFFSET_BLDALPHA, 0)
	SetGpuReg(REG_OFFSET_BLDCNT, 0)
	DestroyAnimVisualTask(taskId)
}







Callback_SuckerPunchUnknown(arg0)
{
	StartSpriteAfflineAnim(arg0, 1)
	arg0.pos1.x = fn_74480(data_02037F1A, 2)
	arg0.pos1.y = fn_74480(data_02037F1A, 3)
	arg0.data[6] = fn_749D4(0)
	
	if(GetBattlerSide(data_02037F1A) == B_SIDE_OPPONENT)
		arg0.data[7] = -0x10
	else
		arg0.data[7] = 0x10
	
	arg0.data[0] = 1
	arg0.callback = fn_AE83C
}







AnimTask_PetalBlizzardUnknown(taskId)
{
	r5 = 0
	SetGpuReg(REG_OFFSET_BLDCNT, BLDCNT_TGT1_BG1 | BLDCNT_EFFECT_BLEND | BLDCNT_TGT2_ALL)
	SetGpuReg(REG_OFFSET_BLDALPHA, 0x1000)
	SetAnimBgAttribute(1, BG_ANIM_PRIORITY, 1)
	SetAnimBgAttribute(1, BG_ANIM_SCREEN_SIZE, 0)
	
	if(fn_73788() == 0)
		SetAnimBgAttribute(1, BG_ANIM_CHAR_BASE_BLOCK, 1)
	
	gBattle_BG1_X = 0
	gBattle_BG1_Y = 0
	SetGpuReg(REG_OFFSET_BG1HOFS, 0)
	SetGpuReg(REG_OFFSET_BG1VOFS, 0)
	fn_752A0(&s0)
	fn_7543C(*(&s2 + 1), data_1233010)
	fn_753B4(*(&s2 + 1), data_1232A50, *(&s2 + 2))
	LoadCompressedPalette(data_1232FF0, s2 * 0x10, 0x20)
	
	if(fn_73788() != 0)
		fn_730C0(s2, s1, 0, 0)
	
	if(gBattleAnimArgs != 0)
	{
		r4 = data_02037F1A // should probably be r0
		
		if(GetBattlerSide(gBattleAnimArgs) == B_SIDE_PLAYER)
			r5 = 1
	}
	
	gTasks[taskId].data[0] = r5
	gTasks[taskId].func = fn_B490C
}







Callback_Move251Unknown(arg0)
{
	if(gBattleAnimArgs[0] == 0)
	{
		arg0.pos1.x = fn_16926C_J(gBattleAnimAttacker, 2)
		arg0.pos1.y = fn_16926C_J(gBattleAnimAttacker, 3)
	}
	
	arg0.data[0] = gBattleAnimArgs[2]
	arg0.callback = fn_B37A4
}







fn_16926C_J(battler, case)
{
	switch(case)
	{
	case 0:
	case 2:
		return data_169204_J[gBattleTypeFlags & BATTLE_TYPE_DOUBLE][GetBattlerPosition(battler)].0
	case 1:
		return data_169204_J[gBattleTypeFlags & BATTLE_TYPE_DOUBLE][GetBattlerPosition(battler)].1
	case 3:
		if(GetBattlerPosition(battler) != 0)
		{
			if((*gBattleSpritesDataPtr).battlerData[battler].transformSpecies == SPECIES_NONE)
				species = GetMonData(&gEnemyParty[gBattlerPartyIndexes[battler]], MON_DATA_SPECIES)
			else
				species = (*gBattleSpritesDataPtr).battlerData[battler].transformSpecies
		}
		else
		{
			if((*gBattleSpritesDataPtr).battlerData[battler].transformSpecies == SPECIES_NONE)
				species = GetMonData(&gPlayerParty[gBattlerPartyIndexes[battler]], MON_DATA_SPECIES)
			else
				species = (*gBattleSpritesDataPtr).battlerData[battler].transformSpecies
		}
		
		if(case != 3)
			return fn_168B70_J(battler, species, 0)
		else
			return fn_168B70_J(battler, species, 1)
	case 4:
		gamecrash()
	}
	
	return r0
}







fn_168B70_J(battler, species, arg2)
{
	if(GetBattlerSide(battler) != 0)
		r5 = fn_74590(battler, species)
	else
		r5 = fn_74590(battler, species) - fn_7474C(battler, species)
	
	r4 = data_169204_J[gBattleTypeFlags & BATTLE_TYPE_DOUBLE][GetBattlerPosition(battler)].1 + r5
	
	if(arg2 != 0)
	{
		if(GetBattlerSide(battler) == 0)
			r4 += 8
		
		if(r4 > 0x68)
			r4 = 0x68
	}
	
	return r4
}







data_169204_J:
48 48 00 00 B0 20 00 00 30 20 00 00 70 48 00 00
20 48 00 00 C8 20 00 00 5A 50 00 00 98 18 00 00







AnimTask_Move268Unknown(taskId)
{
	x = fn_74480(gBattleAnimTarget, 2) - 0x20
	y = fn_74480(gBattleAnimTarget, 3) - 0x24
	
	if(fn_73788() != 0)
		x -= 6
	
	SetGpuReg(REG_OFFSET_BLDCNT, 0x3F40)
	SetGpuReg(REG_OFFSET_BLDALPHA, 0x1000)
	newSprite = CreateSprite(gUnknownMove268SpriteTemplate, x, y, 4)
	
	if(GetSpriteTileStartByTag(0x28BD) == -1)
		gSprites[newSprite].invisible = TRUE
	
	SetSubspriteTables(&gSprites[newSprite], data_3BF554)
	gTasks[taskId].data[0xF] = newSprite
	gTasks[taskId].taskFunc = fn_183630
}







fn_183630(taskId)
{
	r2 = gTasks[taskId].data[1]
	gTasks[taskId].data[1]++
	
	if(gTasks[taskId].data[1] == 0xA)
	{
		gTasks[taskId].0 = fn_18367C
		gTasks[taskId].data[1] = 0
	}
	else
		SetGpuReg(REG_OFFSET_BLDALPHA, CONCAT_BYTES(0x10 - r2, 0x10 - r2))
}







fn_18367C(taskId)
{
	gTasks[taskId].data[1]++
	
	if(gTasks[taskId].data[1] > 0xD)
	{
		gTasks[taskId].data[2]++
		
		if(gTasks[taskId].data[2] == 3)
		{
			r3 = IndexOfSpritePaletteTag(0x28BD)
			temp = gPlttBufferFaded[0x10D][r3]
			gPlttBufferFaded[0x10D][r3] = gPlttBufferFaded[0x10E][r3]
			gPlttBufferFaded[0x10E][r3] = gPlttBufferFaded[0x10F][r3]
			gPlttBufferFaded[0x10F][r3] = temp
			gTasks[taskId].data[2] = 0
			gTasks[taskId].data[3]++
			
			if(gTasks[taskId].data[3] == 3)
			{
				gTasks[taskId].data[3] = 0
				gTasks[taskId].data[1] = 0
				gTasks[taskId].data[4]++
				
				if(gTasks[taskId].data[4] == 2)
				{
					gTasks[taskId].data[1] = 9
					gTasks[taskId].0 = fn_785D8
				}
			}
		}
	}
}







AnimTask_Move2A0Unknown(taskId)
{
	switch(gTasks[taskId].data[0])
	{
	case 0:
		if(GetBattlerSide(gBattleAnimAttacker) == 0)
			gTasks[taskId].data[1] = 1
		else
			gTasks[taskId].data[1] = -1
		
		if(gBattleAnimArgs[0] == 0)
		{
			gTasks[taskId].data[3] = fn_74480(gBattleAnimAttacker, 2)
			gTasks[taskId].data[5] = fn_74480(gBattleAnimAttacker, 3)
			gTasks[taskId].data[4] = 0x78 + (gTasks[taskId].data[1] * 0x80)
		}
		elseif(gBattleAnimArgs[0] == 4)
		{
			gTasks[taskId].data[3] = 0x78 - (gTasks[taskId].data[1] * 0x80)
			gTasks[taskId].data[5] = fn_74480(gBattleAnimTarget, 3)
			gTasks[taskId].data[4] = fn_74480(gBattleAnimTarget, 2) - (gTasks[taskId].data[1] * 0x20)
		}
		else
		{
			if(gBattleAnimArgs[0] & 1)
			{
				gTasks[taskId].data[3] = 0xFFF0
				gTasks[taskId].data[4] = 0x100
			}
			else
			{
				gTasks[taskId].data[3] = 0x100
				gTasks[taskId].data[4] = 0xFFF0
			}
			
			if(gTasks[taskId].data[1] == 1)
				gTasks[taskId].data[5] = 0x50 - (gBattleAnimArgs[0] * 0xA)
			else
			{
				gTasks[taskId].data[5] = 0x28 + (gBattleAnimArgs[0] * 0xA)
				swap(gTasks[taskId].data[3], gTasks[taskId].data[4])
			}
		}
		
		if(gTasks[taskId].data[3] < gTasks[taskId].data[4])
		{
			gTasks[taskId].data[1] = 1
			gTasks[taskId].data[6] = 0
		}
		else
		{
			gTasks[taskId].data[1] = -1
			gTasks[taskId].data[6] = 3
		}
		
		gTasks[taskId].data[0]++
		
		break;
	case 1:
		gTasks[taskId].data[2]++
		
		// supposed to be if, but it's wrong?
		while(gTasks[taskId].data[2] > 0x10000) {}
		gTasks[taskId].data[2] = 0
		
		if(fn_1838B0(&gTasks[taskId], taskId) != 0)
			gTasks[taskId].data[0]++
		
		break;
	case 2:
		if(gTasks[taskId].data[7] == 0)
			DestroyAnimVisualTask(taskId)
			
		break;
	}
}







fn_1838B0(taskPtr, taskId)
{
	r2 = CreateSprite(data_12F1738, taskPtr.data[3], taskPtr.data[5], 0x23)
	
	if(r2 != 0x40)
	{
		gSprites[r2].data[6] = taskId
		gSprites[r2].data[7] = 7
		taskPtr.data[7]++
	}
	
	taskPtr.data[6] += taskPtr.data[1]
	
	if(taskPtr.data[6] > 0x10000)
		taskPtr.data[6] = 3
	
	if(taskPtr.data[6] > 3)
		taskPtr.data[6] = 0
	
	taskPtr.data[3] += (taskPtr.data[1] * 0x10)
	
	if(taskPtr.data[1] == 1 && taskPtr.data[3] >= taskPtr.data[4])
		return 1
	
	if(taskPtr.data[1] == -1 && taskPtr.data[3] <= taskPtr.data[4])
		return 1
		
	return 0
}







AnimTask_GetAttackerAndTarget(taskId)
{
	gBattleAnimArgs[6] = gBattleAnimAttacker;
	gBattleAnimArgs[7] = gBattleAnimTarget;
	DestroyAnimVisualTask(taskId);
}







AnimTask_IsDoubleBattle(taskId)
{
	gBattleAnimArgs[5] = gBattleTypeFlags & BATTLE_TYPE_DOUBLE;
	DestroyAnimVisualTask(taskId);
}