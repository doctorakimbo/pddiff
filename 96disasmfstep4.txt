InheritIVs(egg, daycare)
{
	for(i = 0; i < NUM_STATS; i++)
		availableIVs[i] = i;

	for(i = 0; i < ARRAY_COUNT(selectedIVs); i++)
	{
		selectedIVs[i] = availableIVs[Random() % (NUM_STATS - i)];
		RemoveIVIndexFromList(&availableIVs, i);
	}
	
	for(i = 0; i < ARRAY_COUNT(selectedIVs); i++)
		whichParent[i] = Random() % 2;

	for(i = 0; i < ARRAY_COUNT(selectedIVs); i++)
	{
		switch(selectedIVs[i])
		{
		case 0:
			iv = GetBoxMonData(&daycare->mons[whichParent[i]].mon, MON_DATA_HP_IV);
			SetMonData(egg, MON_DATA_HP_IV, &iv);
			break;
		case 1:
			iv = GetBoxMonData(&daycare->mons[whichParent[i]].mon, MON_DATA_ATK_IV);
			SetMonData(egg, MON_DATA_ATK_IV, &iv);
			break;
		case 2:
			iv = GetBoxMonData(&daycare->mons[whichParent[i]].mon, MON_DATA_DEF_IV);
			SetMonData(egg, MON_DATA_DEF_IV, &iv);
			break;
		case 3:
			iv = GetBoxMonData(&daycare->mons[whichParent[i]].mon, MON_DATA_SPEED_IV);
			SetMonData(egg, MON_DATA_SPEED_IV, &iv);
			break;
		case 4:
			iv = GetBoxMonData(&daycare->mons[whichParent[i]].mon, MON_DATA_SPATK_IV);
			SetMonData(egg, MON_DATA_SPATK_IV, &iv);
			break;
		case 5:
			iv = GetBoxMonData(&daycare->mons[whichParent[i]].mon, MON_DATA_SPDEF_IV);
			SetMonData(egg, MON_DATA_SPDEF_IV, &iv);
			break;
		}
	}
}