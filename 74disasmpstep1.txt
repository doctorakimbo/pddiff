	for(r5 = 0; r5 <= 5; r5++)
	{
		if(GetMonData((r5 * 0x64) + gEnemyParty, 0x39) == 0)
			continue;
		if(GetMonData((r5 * 0x64) + gEnemyParty, 0x41) == 0)
			continue;
		if(GetMonData((r5 * 0x64) + gEnemyParty, 0x41) == 0x19C)
			continue;
		if(r5 == *((*gActiveBattler * 2) + gBattlerPartyIndexes))
			continue;
		if(r5 == *((*gActiveBattler * 2) + gBattlerPartyIndexes))
			continue;
		if(r5 == *(*gActiveBattler + *gBattleStruct + 0x5C))
			continue;
		if(r5 == *(*gActiveBattler + *gBattleStruct + 0x5C))
			continue;
		
		r8++;
	}
	
	if(r8 == 0)
		return TRUE;
	if(fn_251E40_J())
		return TRUE;
	if(fn_391EC())
		return TRUE;
	if(fn_3937C())
		return TRUE;
	if(fn_39598())
		return TRUE;
	if(HasSuperEffectiveMoveAgainstOpponents(FALSE))
		return FALSE;
	if(fn_397E0())
		return FALSE;
	if(!CanUseNewAI())
		return FALSE;
	if(fn_39828(8, 2))
		return TRUE;
	if(fn_39828(4, 3))
		return TRUE;
		
	return FALSE;
}








fn_251E40_J()
{
	r4 = data_0203B964
	r5 = 1
	*(r4 + 1) = r5

	if(CanUseNewAI() == 0)
		return FALSE;
	if(fn_251E8C_J())
		return TRUE;
	if(fn_251FD0_J())
		return TRUE;
	if(fn_205F48_J())
		return TRUE;
	if(fn_205FDE_J())
		return TRUE;
	if(fn_252058_J())
		return TRUE;
	if(fn_2064C6_J())
		return TRUE;
		
	return FALSE;
}








fn_251E8C_J()
{
	r3 = gBattleMons
	r5 = gActiveBattler
	r4 = *r5
	r0 = 0x58
	r2 = r4
	r2 *= r0
	r0 = r2 + r3
	r6 = r0
	r0 += 0x20
	r0 = *r0
	
	if(r0 != 0x90)
	{
		r0 = gBattleStruct
		r0 = *r0
		r0 += 0xC8
		r1 = r4 * 2
		r0 = *(r0 + r1)
		if(r0 != 0) goto lbl2

		r1 = 0x1C
		r1 *= r4
		r0 = gDisableStructs
		r1 += r0
		r0 = *(r1 + 6)
		if(r0 != 0) goto lbl2

		return FALSE;

		lbl2:
		r1 = gBattleMoves
		r2 = 0xC
		r2 *= r0
		r1 += r2
		r1 = *(r1 + 1)
		
		if(r1 != 0)
		{
			r1 = gBattleMons
			r2 = 0x58
			r2 *= r4
			r1 += r2
			r1 += 0xC
			
			for(r7 = 0; r7 != 8; r7 += 2)
			{
				r2 = *(r1 + r7)
				
				if(r0 == r2)
				{
					r7 /= 2
					r1 += 0x18
					r2 = *(r1 + r7)
					
					if(r2 != 0)
					{
						r7 = r0
						r0 = 0
						r1 = 0x58
						r1 *= r0
						r0 = gBattleMons
						r1 = *r0
						r2 = *(r0 + 0x28)
						if(r2 == 0) goto lbl5

						r0 += 0x20
						r2 = *r0
						r0 = r7
						fn_1E7DC_J()
						r1 = 0xC
						r1 &= r0
						
						if(r1 == 0)
						{
							lbl5:
							r0 = 2
							r1 = 0x58
							r1 *= r0
							r0 = gBattleMons
							r0 += r1
							r1 = *r0
							r2 = *(r0 + 0x28)
							
							if(r2 == 0)
								return FALSE;

							r0 += 0x20
							r2 = *r0
							r0 = r7
							fn_1E7DC_J()
							r1 = 0xC
							r1 &= r0
							
							if(r0 == 0)
								return FALSE;
						}
					}
					
					break;
				}
			}
		}
		
		r0 = Random()
		r1 = 0xF
		r0 &= r1
		
		if(r0 == 0)
			return FALSE;
	}
	else
	{
		r0 = *(r6 + 0x28)
		r1 = *(r6 + 0x2C)
		r1 /= 2
		
		if(r0 > r1)
			return FALSE;

		r0 = Random()
		r1 = 1
		r0 &= r1
		
		if(r0 == 0)
			return FALSE;
	}
	
	fn_2060C0_J()
	r1 = gActiveBattler
	r1 = *r1
	fn_205C80_J()
	r6 = r0
	
	if(r6 == 6)
	{
		fn_20621C_J()
		r6 = r0
		
		if(r6 == 6)
		{
			r1 = gBattleMons
			r0 = *r1
			r1 += 0x58
			r1 += 0x58
			r1 = *r1
			{r0, r6} = GetBestMatchupScore(r0, r1, 1)
			
			if(r0 >= 0xF)
				return FALSE;
		}
	}
	
	r0 = GetBattlerPosition(*r5)
	r0 /= 2
	r1 = gBattleStruct
	r1 = *r1
	r0 += r1
	r0 += 0x92
	*r0 = r6
	BtlController_EmitTwoReturnValues(1, 2, 0)
	return TRUE;
}








fn_251FD0_J()
{
	r3 = gBattleMons
	r5 = gActiveBattler
	r4 = *r5
	r0 = 0x58
	r2 = r4
	r2 *= r0
	r0 = r2 + r3
	r6 = r0
	r0 += 0x50
	r2 = *r0
	r3 = 0x10000000
	r2 &= r3
	
	if(r2 == 0)
	{
		r2 = gStatuses3
		r0 = r4 * 4
		r2 = *(r2 + r0)
		r0 = 0x1800
		r2 &= r0
		
		if(r2 == 0)
			return FALSE;
	}
	
	r0 = Random()
	r1 = 3
	r0 &= r1
	
	if(r0 == 0)
		return FALSE;

	fn_2060C0_J()
	r1 = gActiveBattler
	r1 = *r1
	fn_205C80_J()
	r6 = 0
	
	if(r6 == 6)
	{
		fn_20621C_J()
		r6 = r0
	}
	
	r0 = GetBattlerPosition(*r5)
	r0 /= 2
	r1 = gBattleStruct
	r1 = *r1
	r0 += r1
	r0 += 0x92
	*r0 = r6
	BtlController_EmitTwoReturnValues(1, 2, 0)
	return TRUE;
}








fn_205F48_J()
{
	r0 = gBattleWeather
	r0 = *(r0 + 2)
	r1 = 0xFE
	r0 &= r1
	
	if(r0 == 0)
		return FALSE;

	fn_2060C0_J()
	r1 = r0
	r0 = gActiveBattler
	r0 = *r0
	r2 = 1
	fn_205E14_J()
	
	if(r0 == 1)
		return FALSE;

	r0 = gActiveBattler
	r0 = *r0
	r1 = 0x58
	r0 *= r1
	r1 = gBattleMons
	r0 += r1
	r1 = *(r0 + 2)
	r2 = *(r0 + 8)
	
	if(r1 < r2)
		r1 = r2
	
	if(r1 >= 0x8C)
		return FALSE;

	{r0, r1} = GetBestTrickRoomAttacker()
	
	if(r0 < 0x8C)
		return FALSE;

	r4 = r1
	r0 = Random()
	r1 = 7
	r0 &= r1
	
	if(r0 == 0)
		return FALSE;

	fn_2060C0_J()
	r0 *= 2
	r1 = gLastMoves
	r1 = *(r1 + r0)
	r0 = r4
	fn_206418_J()
	
	if(r0 == 1)
	{
		r0 = Random()
		r1 = 7
		r0 &= r1
		
		if(r0 != 0)
			return FALSE;
	}
	
	r0 = gActiveBattler
	r0 = GetBattlerPosition(*r0)
	r0 /= 2
	r1 = gBattleStruct
	r1 = *r1
	r1 += 0x92
	*(r1 + r0) = r4
	BtlController_EmitTwoReturnValues(1, 2, 0)
	return TRUE;
}








fn_205FDE_J()
{
	r0 = GetAvailableWeatherSetter()
	
	if(r0 != 6)
	{
		r4 = r0
		r0 = Random()
		r1 = 7
		r0 &= r1
		
		if(r0 != 0)
		{
			r0 = gActiveBattler
			r0 = *r0
			r1 = 0
			r2 = 0
			fn_205E14_J()
			
			if(r0 == 1)
				return FALSE;

			r0 = gActiveBattler
			r0 = *r0
			r1 = 1
			r2 = 0
			fn_205E14_J()
			
			if(r0 == 1)
				return FALSE;
		}
		
		r0 = gBattleWeather
		r0 = *r1
		r1 = 0xFF
		r0 &= r1
		
		if(r0 == 0)
		{
			r0 = Random()
			r1 = 3
			r0 &= r1
			
			if(r0 == 0)
				return FALSE;
		}
	}
	else
	{
		r0 = gActiveBattler
		r0 = *r0
		r1 = 0x58
		r0 *= r1
		r1 = gBattleMons
		r0 += r1
		r0 += 0x20
		r0 = *r0
		
		if(r0 == 2)
			r0 = 3
		elseif(r0 == 0x2D)
			r0 = 0xC
		elseif(r0 == 0x46)
			r0 = 0x30
		elseif(r0 == 0x75)
			r0 = 0xC0
		else
			return FALSE;
		
		r1 = gBattleWeather
		r1 = *r1
		r1 &= r0
		
		if(r1 != 0)
			return FALSE;

		r1 = gBattleMons
		r0 = *r1
		r1 += 0x58
		r1 += 0x58
		{r0, r4} = GetBestMatchupScore(r0, *r1, 1)
	}
	
	if(Random() % 6 == 0)
		return FALSE;

	r0 = gActiveBattler
	r0 = GetBattlerPosition(*r0)
	r0 /= 2
	r1 = gBattleStruct
	r1 = *r1
	r1 += 0x92
	*(r1 + r0) = r4
	BtlController_EmitTwoReturnValues(1, 2, 0)
	return TRUE;
}








fn_252058_J()
{
	r5 = 0
	r6 = 0
	s0 = 0
	r0 = gActiveBattler
	r0 = *r0
	s3 = r0
	r1 = 0x58
	r0 *= r1
	r7 = gBattleMons
	r7 += r0
	r1 = *(r7 + 6)
	r1 -= 5
	r0 = 0x64
	r0 *= r1
	r1 = 0x2A
	r0 = r0 / *(r7 + r1)
	r1 = 0x122
	if(r0 >= 0xr1)
	r0 = *(r7 + 0x28)
	r1 = *(r7 + 0x2C)
	r1 /= 2
	
	if(r0 <= r1)
		return FALSE;

	for(r4 = 0; r4 != 4; r4 += 2)
	{
		r0 = gBattleMons
		r1 = 0x58
		r1 *= r4
		r0 += r1
		r1 = *(r0 + 0x28)
		
		if(r1 == 0)
			continue;

		r5++
		r0 = s3
		r1 = r4
		fn_205EE8_J()
		
		if(r0 == 0)
		{
			r1 = s3
			r0 = r4
			r2 = 0
			fn_205E14_J()
			
			if(r0 != 1)
			{
				r1 = s3
				r0 = r4
				r2 = 1
				
				if(r0 == 0)
					continue;

				s1 = r1
				r0 = s3
				r1 = r4
				r2 = 0
				fn_205E14_J()
				
				if(r0 == 1)
					continue;

				r1 = s1
			}
		}
		else
		{
			r0 = s3
			r1 = r4
			r2 = 0
			fn_205E14_J()
			
			if(r0 == 1)
				continue;

			r1 = s3
			r0 = r4
			r2 = 0
			fn_205E14_J()
			
			if(r0 != 1)
			{
				r0 = s3
				r1 = r4
				r2 = 1
				fn_205E14_J()
				
				if(r0 == 1)
					continue;

				r1 = s3
				r0 = r4
				r2 = 1
				fn_205E14_J()
				
				if(r0 != 1)
					continue;
			}
		}
		
		r2 = &s0
		r2 += r4
		*r2 = r1
		r6++
	}

	r0 = Random()
	r1 = r5
	r1++
	r1 = r0 % r1
	r1++
	
	if(r1 > r6)
		return FALSE;
	
	r3 = &s0
	r4 = 0
	r0 = *(r3 + r4)
	
	if(r0 == 0)
	{
		r4 += 2
		r0 = *(r3 + r4)
		
		if(r0 == 0)
			return FALSE;
	}
	
	r4 = r0
	r7 = 0

	for(r7 = 0; r7 < 6; r7++)
	{
		r7 = GetFirstAllowableSwitchin(r7, 1)
		
		if(r7 == 6)
			break;

		r0 = 0x64
		r0 *= r7
		r1 = gEnemyParty
		r0 += r1
		r5 = r0
		r6 = GetMonData(r0, 0xB)
		r2 = GetMonAbility(r5)
		r1 = r6
		r0 = r4
		fn_1E7DC_J()
		r1 = 8
		r0 &= r1
		if(r0 != 0) goto lbl12
	}
	
	for(r7 = 0; r7 < 6; r7++)
	{
		r7 = GetFirstAllowableSwitchin(r7, 1)
		
		if(r7 == 6)
			return FALSE;

		r0 = 0x64
		r0 *= r7
		r1 = gEnemyParty
		r0 += r1
		r5 = r0
		r6 = GetMonData(r0, 0xB)
		s0 = GetMonData(r5, 0x39)
		r0 = GetMonData(r5, 0x3A)
		r1 = s0
		r2 = r1 / 4
		
		if(r1 > r2)
		{
			if(r0 != r1) goto lbl10

			r0 = GetMonData(r5, 0xC)
			r0 = GetHoldEffectParam(r0)
			
			if(r0 != 0x43)
			{
				lbl10:
				r0 = GetMonAbility(r5)
				r2 = r0
				r1 = r6
				r0 = r4
				fn_1E7DC_J()
				r1 = 4
				r0 &= r1
				if(r0 != 0) goto lbl12
			}
		}
	}
	
	return FALSE;

	lbl12:
	r1 = Random() % 0x10
	r0 = data_0203B960_J
	r0 = *r0
	
	if(r1 <= r0)
		return FALSE;

	r0 = gActiveBattler
	r0 = GetBattlerPosition(*r0)
	r0 /= 2
	r1 = gBattleStruct
	r1 = *r1
	r1 += 0x92
	*(r1 + r0) = r7
	BtlController_EmitTwoReturnValues(1, 2, 0)
	return TRUE;
}








fn_2064C6_J()
{
	r5 = 0
	r6 = 0
	s0 = 0
	r0 = gActiveBattler
	r0 = *r0
	s3 = r0
	r1 = 0x58
	r0 *= r1
	r7 = gBattleMons
	r7 += r0
	r1 = *(r7 + 6)
	r1 -= 5
	r0 = 0x64
	r0 *= r1
	r1 = 0x2A
	r0 = r0 / *(r7 + r1)
	r1 = 0x122
	
	if(r0 < r1)
	{
		r0 = *(r7 + 0x28)
		r1 = *(r7 + 0x2C)
		r1 /= 2
		
		if(r0 > r1)
			return FALSE;
	}

	for(r4 = 0; r4 != 4; r4 += 2)
	{
		r0 = s3
		fn_2065CC_J()
		
		if(r0 == 1)
			continue;

		r0 = r4
		fn_2065CC_J()
		
		if(r0 == 0)
		{
			r1 = s3
			r0 = r4
			r2 = 1
			fn_205E14_J()
			
			if(r0 == 1)
				continue;

			s0 = r0
			r0 = s3
			r1 = r4
			r2 = 1
			fn_205E14_J()
			
			if(r0 == 1)
				continue;

			r0 = s0
			
			if(r1 > r0)
				continue;
		}
		else
		{
			r0 = s3
			r1 = r4
			r2 = 1
			fn_205E14_J()
			
			if(r0 == 1)
				continue;
		}
		
		r6++
	}

	r0 = Random()
	r1 = r5
	r1++
	r1 = r0 % r1
	r1++
	
	if(r1 > r6)
		return FALSE;
	
	fn_2060C0_J()
	r1 = r0
	r0 = gActiveBattler
	r0 = *r0
	fn_205CF6_J()
	r7 = r0
	
	if(r7 == 6)
		return FALSE;

	r0 = 0x64
	r0 *= r7
	r1 = gEnemyParty
	r0 += r1
	r4 = r0
	r0 = GetMonData(r0, 0x3A)
	r5 = r0 / 4
	r0 = GetMonData(r4, 0x39)
	
	if(r0 <= r5)
		return FALSE;

	r1 = Random() % 0x10
	r0 = data_0203B960_J
	r0 = *r0
	
	if(r1 <= r0)
		return FALSE;

	r0 = gActiveBattler
	r0 = GetBattlerPosition(*r0)
	r0 /= 2
	r1 = gBattleStruct
	r1 = *r1
	r1 += 0x92
	*(r1 + r0) = r7
	BtlController_EmitTwoReturnValues(1, 2, 0)
	return TRUE;
}








fn_2060C0_J()
{
	r4 = 0
	r0 = gBattleMons
	r1 = *(r0 + 0x28)
	
	if(r1 != 0)
	{
		r0 = 1
		r4 |= r0
	}
	
	r0 = gBattleMons
	r1 = 0x58
	r2 = 2
	r1 *= r2
	r0 += r1
	r1 = *(r0 + 0x28)
	
	if(r1 != 0)
	{
		r0 = 2
		r4 |= r0
	}
	
	if(r4 == 3)
	{
		r0 = Random()
		r1 = 1
		r0 &= r1
	}
	elseif(r4 == 1)
		r4--
	
	return r4
}








fn_205C80_J()
{
	r4 = r0
	s0 = r1
	r0 = 1
	r0 &= r1
	r5 = GetSideParty(r0)
	r0 += 0x58
	r1 = s0
	r0 *= r1
	r1 = gBattleMons
	r1 += r0
	r6 = r1
	r0 = data_0203D480_J
	r2 = 0x58
	fn_1E5E78()
	
	for(r7 = 0; r7 < 6; r7++)
	{
		r7 = GetFirstAllowableSwitchin(r7, 1)
		
		if(r7 == 6)
			break;

		r1 = 0x64
		r1 *= r7
		r1 += r5
		r0 = s0
		r2 = 0x58
		r0 *= r2
		r2 = gBattleMons
		r0 += r2
		fn_205B0C_J()
		r0 = r4
		r1 = s0
		r2 = 1
		fn_205E14_J()
		
		if(r0 == 0)
			break;
	}
	
	r0 = 0x58
	r1 = s0
	r0 *= r1
	r1 = gBattleMons
	r0 += r1
	r0 = data_0203D480_J
	r2 = 0x58
	fn_1E5E78()
	return r7
}








fn_20621C_J()
{
	r7 = r0

	for(r7 = r0; r7 < 6; r7++)
	{
		r7 = GetFirstAllowableSwitchin(r7, 1)
		
		if(r7 == 6)
			break;

		r0 = 0x64
		r0 *= r7
		r1 = gEnemyParty
		r0 += r1
		r5 = r0
		r4 = GetMonData(r0, 0x3D)
		r3 = data_21118C_J()
		r0 = gBattleMons
		r1 = *r0
		
		if(r1 != 0)
		{
			r2 = 0x1C
			r1 *= r2
			r1 += r3
			r1 = *(r1 + 3)
			r1 += 0x20
			
			if(r4 > r1)
				continue;
		}
		
		r0 += 0x58
		r0 += 0x58
		r1 = *r0
		
		if(r1 != 0)
		{
			r0 = 0x1C
			r1 *= r0
			r1 += r3
			r1 = *(r1 + 3)
			r1 += 0x20
			
			if(r4 > r1)
				continue;
		}
		
		r4 = GetMonData(r5, 0x39)
		r0 = GetMonData(r5, 0x3A)
		r0 /= 2
		
		if(r4 <= r0)
			break;
	}
	
	return r7
}








fn_205E14_J()
{
	r7 = 0
	s2 = 0
	r6 = r2
	r2 = gBattlerAttacker
	*r2 = r0
	*(r2 + 1) = r1

	for(r7 = 0; r7 != 4; r7++)
	{
		r0 = 0x58
		r2 = gBattlerAttacker
		r2 = *r2
		r0 *= r2
		r1 = gBattleMons
		r0 += r1
		r1 = *(r0 + 0x2C)
		s3 = r1
		r0 += 0xC
		r1 = r7 * 2
		r0 = *(r0 + r1)
		s0 = r0
		r1 = 0xC
		r1 *= r0
		r0 = gBattleMoves
		r0 += r1
		s1 = r0
		r0 = *(r0 + 1)
		
		if(r0 <= 1)
			continue;

		r0 = gDynamicBasePower
		r1 = 0
		*r0 = r1
		r0 = gBattleStruct
		r0 = *r0
		*(r0 + 0x13) = r1
		r0 = gBattleScripting
		r2 = 1
		*(r0 + 0xE) = r2
		r0 = gMoveResultFlags
		*r0 = r1
		r0 = gCritMultiplier
		*r0 = r2
		r1 = gCurrentMove
		r0 = s0
		*r1 = r0
		r4 = gBattlerAttacker
		r0 = *r4
		r1 = *(r4 + 1)
		fn_1DE9C_J()
		r0 = gBattlerAttacker
		r1 = *r0
		r2 = *(r0 + 1)
		r0 = gCurrentMove
		r0 = *r0
		fn_1E604_J()
		r4 = gBattleMoveDamage
		r0 = *r4
		r1 = s1
		r1 = *r1
		
		if(r1 == 0x29)
			r0 *= 4
		elseif(r1 == 0x2C)
			r0 *= 2
		
		r0 = *r4
		r1 = s2
		
		if(r0 > r1)
			s2 = r0
		
		if(r0 == 0)
		{
			r0 = 1
			*r4 = r0
		}
		
		r2 = gBattleMons
		r1 = gBattlerAttacker
		r1 = *(r1 + 1)
		r0 = 0x58
		r0 *= r1
		r0 += r2
		r1 = *(r0 + 0x28)
		
		if(r6 == 1)
		{
			r1 = *(r0 + 0x2C)
			r1 /= 2
		}
		
		r0 = *r4
		
		if(r1 <= r0)
			return {s0, 1}
	}
	
	r0 = 0x64
	r1 = s2
	r0 *= r1
	r1 = s3
	return {0, r0 / r1}
}








fn_206418_J()
{
	r4 = 0x64
	r7 = r1
	r0 *= r4
	r4 = gPlayerParty
	r0 += r4
	r5 = r0
	r6 = GetMonData(r0, 0xB)
	r2 = GetMonAbility(r5)
	r1 = r6
	r0 = r7
	fn_1E7DC_J()
	r1 = 2
	r0 &= r1
	r0 /= 2
	return r0
}








fn_205EE8_J()
{
	r4 = r0
	r5 = r1
	r4 = GetSpeedStat(r4)
	r0 = GetSpeedStat(r5)
	
	if(r0 < r4)
		return 1;
	else
		return 0;
}








fn_2065CC_J()
{
	r1 = 0x58
	r0 *= r1
	r1 = gBattleMons
	r0 += r1
	r0 += 0xC
	
	for(r5 = 0; r5 < 8; r5 += 2)
	{
		r1 = *(r0 + r5)
		r2 = 0xC
		r1 *= r2
		r2 = gBattleMoves
		r2 += r1
		r1 = *r2

		if(r1 == 0x20)
			return TRUE;
		if(r1 == 0x84)
			return TRUE;
		if(r1 == 0x9D)
			return TRUE;
	}

	return FALSE:
}








fn_205CF6_J()
{
	r4 = r0
	s0 = r1
	r0 = 1
	r0 &= r4
	GetSideParty()
	r5 = r0
	r0 = 0x58
	r0 *= r4
	r1 = gBattleMons
	r1 += r0
	r6 = r1
	r0 = data_0203D480_J
	r2 = 0x58
	fn_1E5E78()

	for(r7 = 0; r7 < 6; r7++)
	{
		r7 = GetFirstAllowableSwitchin(r7, 1)
		
		if(r7 == 6)
			break;

		r1 = 0x64
		r1 *= r7
		r1 += r5
		r0 = 0x58
		r0 *= r4
		r2 = gBattleMons
		r0 += r2
		fn_205B0C_J()
		r0 = r4
		r1 = s0
		r2 = 1
		fn_205E14_J()
		
		if(r0 == 1)
			continue;

		r0 = r4
		fn_2065CC_J()
		
		if(r0 == 0)
			continue;

		r0 = r4
		r1 = s0
		fn_206600_J()
		
		if(r0 == 0)
			continue;

		r1 = r4
		r0 = s0
		r2 = 1
		fn_205E14_J()
		
		if(r0 == 0)
			break;
	}
	
	r0 = 0x58
	r0 *= r4
	r1 = gBattleMons
	r0 += r1
	r1 = data_0203D480_J
	r2 = 0x58
	fn_1E5E78()
	return r7
}








fn_205B0C_J()
	r4 = r0
	r5 = r1
	r1 = 0
	r2 = 0x58
	fn_1E5ED8()
	r7 = GetMonData(r5, 0xB)
	*r4 = GetMonData(r5, 0xB)
	*(r4 + 2) = GetMonData(r5, 0x3B)
	*(r4 + 4)  = GetMonData(r5, 0x3C)
	*(r4 + 6) = GetMonData(r5, 0x3D)
	*(r4 + 8)  = GetMonData(r5, 0x3E)
	*(r4 + 0xA) = GetMonData(r5, 0x3F)
	*(r4 + 0xC) = GetMonData(r5, 0xD)
	*(r4 + 0xE) = GetMonData(r5, 0xE)
	*(r4 + 0x10) = GetMonData(r5, 0xF)
	*(r4 + 0x12) = GetMonData(r5, 0x10)
	r6 = GetMonData(r5, 0x2C)
	r0 = GetMonData(r5, 0x2B)
	r6 *= 0x20
	r6 |= r0
	r0 = GetMonData(r5, 0x2A)
	r6 *= 0x20
	r6 |= r0
	r0 = GetMonData(r5, 0x29)
	r6 *= 0x20
	r6 |= r0
	r0 = GetMonData(r5, 0x28)
	r6 *= 0x20
	r6 |= r0
	r0 = GetMonData(r5, 0x27)
	r6 *= 0x20
	r6 |= r0
	*(r4 + 0x14) = r0
	r0 = 0x6060606
	*(r4 + 0x18) = r0
	*(r4 + 0x1C) = r0
	r4 += 0x20
	*r4 = GetMonAbility(r5)
	r1 = 0x1C
	r1 *= r7
	r0 = data_21118C_J
	r0 += r1
	r1 = *(r0 + 6)
	*(r4 + 1) = r1
	r1 = *(r0 + 7)
	*(r4 + 2) = r1
	*(r4 + 4) = GetMonData(r5, 0x11)
	*(r4 + 5) = GetMonData(r5, 0x12)
	*(r4 + 6) = GetMonData(r5, 0x13)
	*(r4 + 7) = GetMonData(r5, 0x14)
	*(r4 + 8) = GetMonData(r5, 0x39)
	*(r4 + 0xA) = GetMonData(r5, 0x38)
	*(r4 + 0xB) = GetMonData(r5, 0x20)
	*(r4 + 0xC) = GetMonData(r5, 0x3A)
	*(r4 + 0xD) = GetMonData(r5, 0xC)
	r0 = 0xFF
	*(r4 + 0x10) = r0
	*(r4 + 0x1C) = r0
	r4 += 0x20
	*(r4 + 8) = GetMonData(r5, 0)
	*(r4 + 0x14) = GetMonData(r5, 1)
	return
}








fn_206600_J()
{
	r4 = r0
	r5 = r1
	r6 = gBattleMons
	r0 = 0x58
	r4 *= r0
	r5 *= r0
	r4 += r6
	r5 += r6
	r5 += 0x20
	r7 = r4
	r7 += 0x24
	r4 += 0xC
	r0 = *(r5 + 0x2C)
	r1 = 0xFF
	r0 &= r1
	
	if(r0 != 0)
		return FALSE;

	for(r6 = 0; r6 < 8; r6 += 2)
	{
		r0 = *(r4 + r6)
		r1 = r6 / 2
		r1 = *(r7 + r1)
		
		if(r1 == 0)
			continue;

		r1 = 0xC
		r0 *= r1
		r1 = gBattleMoves
		r1 = *(r1 + r0)
		
		if(r0 == 0x21 || r0 == 0x42)
		{
			r0 = *r5
			
			if(r0 == 0x11)
				continue;

			if(r0 == 0x5A)
				continue;

			if(r0 == 0x62)
				continue;

			r0 = *(r5 + 1)
			if(r0 == 8)
				continue;

			if(r0 == 3)
				continue;

			r0 = *(r5 + 2)
			
			if(r0 == 8)
				continue;

			if(r0 != 3)
				return TRUE;
		}
		else
		{
			if(r0 != 0xA7)
				continue;

			r0 = *r5
			
			if(r0 == 0x29)
				continue;

			r0 = *(r5 + 1)
			
			if(r0 == 0xA)
				continue;

			r0 = *(r5 + 2)
			
			if(r0 != 0xA)
				return TRUE;
		}
	}

	return FALSE;
}