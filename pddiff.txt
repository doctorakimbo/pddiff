ignore the following (pe):
00 30 A2 08
F0 30 A2 08
00 00 E4 08
00 7A EB 08
90 89 EB 08
00 00 00 09
00 00 01 09
04 00 01 09
00 00 03 09
A0 0B 06 09
00 50 06 09
00 00 0B 09
00 D0 3F 09
00 F0 3F 09

(stench actual desc: 71D9FE)
("the pkmn" -> "it"; if "it" would be at the beginning, skip it)
abilities:
+ 0x4C = Tangled Feet
+ 0x4E = Motor Drive
+ 0x4F = Rivalry
+ 0x50 = Steadfast
+ 0x51 = Snow Cloak
+ 0x52 = Gluttony
+ 0x53 = Anger Point
+ 0x54 = Unburden
+ 0x55 = Heatproof
+ 0x56 = Simple
+ 0x57 = Dry Skin
+ 0x58 = Download
+ 0x59 = Iron Fist
+ 0x5A = Poison Heal
+ 0x5B = Adaptability
+ 0x5C = Skill Link
+ 0x5D = Hydration
+ 0x5E = Solar Power
+ 0x5F = Quick Feet
+ 0x60 = Normalize
+ 0x61 = Sniper
+ 0x62 = Magic Guard
+ 0x63 = No Guard
+ 0x64 = Stall
+ 0x65 = Technician
+ 0x66 = Leaf Guard
+ 0x67 = Klutz
+ 0x68 = Mold Breaker
+ 0x69 = Super Luck
+ 0x6A = Aftermath
+ 0x6B = Anticipation
+ 0x6C = Forewarn
+ 0x6D = Unaware
+ 0x6E = Tinted Lens
= 0x6F = Solid Rock/Filter
+ 0x70 = Slow Start
+ 0x71 = Scrappy
+ 0x72 = Storm Drain
+ 0x73 = Ice Body
= 0x74 = Filter/Solid Rock
+ 0x75 = Snow Warning
+ 0x76 = Honey Gather
+ 0x77 = Frisk
+ 0x78 = Reckless
+ 0x7A = Flower Gift
+ 0x7D = Sheer Force
+ 0x7E = Contrary
+ 0x7F = Unnerve
+ 0x81 = Defeatist
+ 0x82 = Cursed Body
+ 0x83 = Healer
+ 0x84 = Friend Guard
+ 0x85 = Weak Armor
+ 0x88 = Multiscale
+ 0x89 = Toxic Boost
+ 0x8A = Flare Boost
= 0x8B = (ai wants to use sunny day if it has this)
+ 0x8C = Telepathy
+ 0x8D = Moody
+ 0x8E = Overcoat
+ 0x8F = Poison Touch
+ 0x90 = Regenerator
+ 0x91 = Big Pecks
+ 0x92 = Sand Rush
= 0x93 = (lowers moves with typeFlags2 & 4 to 60% accuracy)
+ 0x94 = Analytic
+ 0x96 = Imposter
+ 0x97 = Infiltrator
+ 0x98 = Mummy
+ 0x99 = Moxie
+ 0x9A = Justified
+ 0x9B = Rattled
+ 0x9C = Magic Bounce
+ 0x9D = Sap Sipper
+ 0x9E = Prankster
+ 0x9F = Sand Force
+ 0xA0 = Iron Barbs
+ 0xA2 = Victory Star
= 0xA3 = Turboblaze/Teravolt
= 0xA4 = Teravolt/Turboblaze
+ 0xA5 = Aroma Veil
+ 0xA6 = Aura Break
+ 0xA8 = Tough Claws
+ 0xAA = Strong Jaw
+ 0xAC = Grass Pelt
+ 0xAD = Sweet Veil
+ 0xAE = Aerilate
+ 0xAF = Dark Aura
+ 0xB0 = Gooey
+ 0xB2 = Gale Wings
+ 0xB3 = Fur Coat
+ 0xB4 = Fairy Aura
+ 0xB5 = Pixilate
+ 0xB6 = Flower Veil
+ 0xB7 = Refrigerate
+ 0xB8 = Protean
+ 0xB9 = Bulletproof
+ 0xBA = Cheek Pouch
+ 0xBC = Mega Launcher
+ 0xC0 = Stamina
+ 0xC3 = Water Compaction
+ 0xCA = Slush Rush
+ 0xCB = Long Reach
+ 0xCE = Galvanize
= 0xD6 = Dazzling/Queenly Majesty
= 0xDB = Queenly Majesty/Dazzling
+ 0xDD = Tangling Hair

(old kid: 16F8C4, old item: 0x125, route 4, fix wildmons route15)
item effects:
+ typebooster IDs: (if effectparam = 0, type-resist berries; if effectparam >= 30, Gems; otherwise typeboosters as normal)
+ 0x18 = Macho Brace if effectparam is 0, otherwise Power item (effectparam = stat ID)
+ 0x1D = "Polkadot Bow"
+ 0x2B = Leftovers if effectparam is 0xFF, otherwise Black Sludge (effectparam = type that heals)
+ 0x43 = Focus Sash
+ 0x44 = Choice Specs
+ 0x45 = Choice Band
+ 0x46 = Choice Scarf
+ 0x47 = Wide Lens
+ 0x48 = Muscle Band (effectparam = % boost)
+ 0x49 = Wise Glasses (effectparam = % boost)
+ 0x4A = Lagging Tail
+ 0x4B = weather rocks (effectparam = weather ID)
+ 0x4C = Expert Belt
+ 0x4D = Safety Wear
+ 0x4E = Grip Claw
+ 0x4F = Binding Band
+ 0x50 = Light Clay
+ 0x51 = Big Root
+ 0x52 = Assault Vest
+ 0x53 = Eviolite
+ 0x54 = Life Orb (effectparam = 1/X HP lost)
= 0x55 = (ai doesn't want to steal this), (ai wants to trick this to the opponent)
= 0x56 = (ai doesn't want to steal this), (ai wants to trick this to the opponent)
+ 0x57 = Destiny Knot

item IDs:
= 0x72 = (key item, increases the chances of something personality-value related to 1/256 instead of 1/65536)
+ 0x1AE = Honey

move IDs:
(Mirror Move, (unimplemented Fiery Dance), Assist, Switcheroo, (unimplemented Guardian Leaf), Nova Inferno, Chatter, (unimplemented Strength Sap), and the move just after the end of defined moves can't be called by Metronome; Chatter can't be copied by Mimic)
(Removed: Clamp, Barrage, Psywave, Conversion, Triple Kick, Spider Web, Conversion 2, Aeroblast, Sacred Fire, Arm Thrust, Tail Glow, Luster Purge, Mist Ball, Needle Arm, Doom Desire, Psycho Boost)
= 0x80 = (attacking move), (has Mach Volt animation)
= 0x8C = (non-attacking move), (animation is sweating while flashing rapidly, then Tackle)
= 0x95 = (attacking move), (has Psywave animation)
! 0xA0 = Fiery Dance (not implemented)
= 0xA7 = (attacking move with chance to lower user's speed), (animation is white light covering the screen, then Take Down)
= 0xA9 = (attacking move), (animation is Sky Uppercut on Megahorn's background)
= 0xB0 = (non-attacking move), (has Will-O-Wisp animation)
= 0xB1 = (attacking move), (can't be called by metronome), (has Pound animation, presumably placeholder)
= 0xDD = (attacking move that calculates damage as if any Sp. Atk boosts were added to Attack, then has a 20% chance to raise Atk and Sp. Atk), (can't be called by metronome), (has Pound animation, presumably placeholder)
= 0x124 = (attacking move), (animation is Giga Drain on Feint Attack's background)
= 0x126 = (attacking move), (has Rapid Spin animation)
= 0x127 = (attacking move with chance to raise sp. atk), (animation is shedding something, then Wing Attack)
= 0x128 = (attacking move), (animation is Razor Wind chargeup on Sky Attack's background)
= 0x12E = (attacking move with chance to poison, but if used by a poison-type, it badly poisons instead), (has Poison Tail animation)
= 0x161 = (attacking move that does double damage to poisoned targets (but NOT toxiced targets)), (has Sludge Bomb animation)
= 0x162 = (attacking move), (animation is Blizzard with gray rocks)
+ 0x163 = Grand Boulder
+ 0x164 = Soul Break
+ 0x165 = Stardust
+ 0x166 = Raze Earth
+ 0x167 = Possess
+ 0x168 = Devastate
+ 0x169 = Metal Blast
+ 0x16A = Hammer Arm
+ 0x16B = Close Combat
+ 0x16C = Flare Blitz
+ 0x16D = Force Palm
+ 0x16E = Aura Sphere
+ 0x16F = Rock Polish
+ 0x170 = Poison Jab
+ 0x171 = Dark Pulse
+ 0x172 = Night Slash
+ 0x173 = Aqua Tail
+ 0x174 = Seed Bomb
+ 0x175 = Air Slash
+ 0x176 = X-Scissor
+ 0x177 = Bug Buzz
+ 0x178 = Dragon Pulse
+ 0x179 = Dragon Rush
+ 0x17A = Power Gem
+ 0x17B = Drain Punch
+ 0x17C = Vacuum Wave
+ 0x17D = Focus Blast
+ 0x17E = Energy Ball
+ 0x17F = Brave Bird
+ 0x180 = Earth Power
+ 0x181 = Switcheroo
+ 0x182 = Giga Impact
+ 0x183 = Nasty Plot
+ 0x184 = Bullet Punch
+ 0x185 = Avalanche
+ 0x186 = Ice Shard
+ 0x187 = Shadow Claw
+ 0x188 = Shadow Sneak
+ 0x189 = Mud Bomb
+ 0x18A = Psycho Cut
+ 0x18B = Zen Headbutt
+ 0x18C = Mirror Shot
+ 0x18D = Flash Cannon
+ 0x18E = Rock Climb
+ 0x18F = Draco Meteor
+ 0x190 = Discharge
+ 0x191 = Leaf Storm
+ 0x192 = Power Whip
+ 0x193 = Rock Wrecker
+ 0x194 = Gunk Shot
+ 0x195 = Iron Head
+ 0x196 = Magnet Bomb
+ 0x197 = Stone Edge
+ 0x198 = Grass Knot
+ 0x199 = Charge Beam
+ 0x19A = Wood Hammer
+ 0x19B = Aqua Jet
+ 0x19C = Attack Order
+ 0x19D = Defend Order
+ 0x19E = Heal Order
+ 0x19F = Double Hit
= 0x1A0 = (attacking move), (animation jabs lots of unknown sprites inward and has same background as Psycho Cut)
= 0x1A1 = (attacking move), (has Superpower animation)
+ 0x1A2 = Magma Rush
= 0x1A3 = (attacking move with chance to confuse or raise user's accuracy), (animation is a pulse move on Cosmic Power's background)
+ 0x1A4 = Ominous Wind
+ 0x1A5 = Cross Poison
+ 0x1A6 = Thunder Fang
+ 0x1A7 = Ice Fang
+ 0x1A8 = Fire Fang
+ 0x1A9 = Crash Impact
+ 0x1AA = Spin Tail
+ 0x1AB = Double Spin
+ 0x1AC = Tone-Deaf
+ 0x1AD = Dizzy Whirl (animation is broken)
+ 0x1AE = Deep Yawn
+ 0x1AF = Raging Flame
+ 0x1B0 = Magma Ring
+ 0x1B1 = Wave Splash
+ 0x1B2 = Deluge
+ 0x1B3 = Aqua Bolt
+ 0x1B4 = Giga Spark
+ 0x1B5 = Shine Bomb
+ 0x1B6 = Megashock
+ 0x1B7 = Mach Volt
+ 0x1B8 = Energize
+ 0x1B9 = Wild Growth
! 0x1BA = Guardian Leaf (not implemented)
+ 0x1BB = Poison Leaf
+ 0x1BC = Rapid Growth
+ 0x1BD = Dazzle Powder
+ 0x1BE = Starfreeze
+ 0x1BF = Icicle Punch
+ 0x1C0 = Frostbite
+ 0x1C1 = Icy Kiss
+ 0x1C2 = Magnum Punch
+ 0x1C3 = Double Shot
+ 0x1C4 = Toxin Spray
+ 0x1C5 = Smogscreen
+ 0x1C6 = Burrow
+ 0x1C7 = Sonic Sand
+ 0x1C8 = Sandblast
+ 0x1C9 = Glide
+ 0x1CA = Typhoon
+ 0x1CB = Psygatling
+ 0x1CC = Psycho Punch
+ 0x1CD = Psyburn
+ 0x1CE = Latent Power
+ 0x1CF = Hypnopulse
+ 0x1D0 = Gravity Wave
+ 0x1D1 = Bug Noise
+ 0x1D2 = Angry Swarm
+ 0x1D3 = Rock Tumble
+ 0x1D4 = Diamond Blast
+ 0x1D5 = Paleobreath
+ 0x1D6 = Shadow Clamp
+ 0x1D7 = Cursed Wrath
+ 0x1D8 = Life Drain
+ 0x1D9 = Dragon Beat
+ 0x1DA = Vengeance
+ 0x1DB = Dark Resolve
+ 0x1DC = Dark Cutter
+ 0x1DD = Dark Roar
+ 0x1DE = Dark Hand
+ 0x1DF = Corner
+ 0x1E0 = Metal Pincer
+ 0x1E1 = Geo Impact
+ 0x1E2 = Magnet Force
+ 0x1E3 = Roost
+ 0x1E4 = Defog
+ 0x1E5 = Lava Plume
+ 0x1E6 = Nova Inferno
+ 0x1E7 = Raid
+ 0x1E8 = Acid Spray
+ 0x1E9 = Electroweb
+ 0x1EA = Shell Smash
+ 0x1EB = Gastro Acid
= 0x1EC = (non-attacking move), (has Toxic animation)
+ 0x1ED = Leaf Tornado
= 0x1EE = (attacking move), (animation is Bite followed by Crunch)
+ 0x1EF = Bulldoze
+ 0x1F0 = Dual Chop
+ 0x1F1 = Quiver Dance
+ 0x1F2 = Hone Claws
+ 0x1F3 = Icicle Crash
+ 0x1F4 = Coil
+ 0x1F5 = Drill Run
+ 0x1F6 = Heart Stamp
+ 0x1F7 = Steamroller
+ 0x1F8 = Work Up
+ 0x1F9 = Sludge Wave
+ 0x1FA = Struggle Bug
+ 0x1FB = Inferno
+ 0x1FC = Wild Charge
+ 0x1FD = Sharpshoot
+ 0x1FE = Scald
+ 0x1FF = Moonblast
+ 0x200 = Dazzling Gleam
+ 0x201 = Fairy Wind
+ 0x202 = Disarming Voice
+ 0x203 = Baby-Doll Eyes
+ 0x204 = Play Rough
= 0x205 = (attacking move), (animation is the Waterfall charge-up followed by a lunge then something water-related)
+ 0x206 = Tailwind
+ 0x207 = Chatter
+ 0x208 = Trick Room
= 0x209 = (attacking move), (animation does something then hits twice, using Feint Attack's background)
+ 0x20A = Head Smash
= 0x20B = (attacking move), (animation seems to be Mist used on the opponent)
= 0x20C = (attacking move), (animation is similar to Silver Wind with ice)
= 0x20D = (attacking move), (animation plays Swagger sound then hits with something)
+ 0x20E = Hex
+ 0x20F = Flame Charge
+ 0x210 = Snarl
= 0x211 = (attacking move), (has Flamethrower animation)
+ 0x212 = Eerie Impulse
+ 0x213 = Power-Up Punch
+ 0x214 = Confide
+ 0x215 = Play Nice
= 0x216 = (attacking move), (animation has Screech sound and Snarl's background)
- 0x217 = Petal Blizzard
= 0x218 = (attacking move), (has ice-related animation)
= 0x219 = (non-attacking move), (animation is Toxic on a new background)
- 0x21A = Nuzzle
= 0x21B = (attacking move with chance to freeze), (has ice-related animation)
= 0x21C = (attacking move with chance to flinch), (has Rock Blast animation, except the rock is shot out instead of thrown)
= 0x21D = (attacking move with chance to lower evasion), (has ice-related animation with Hail sound)
= 0x21E = (attacking move with chance to flinch), (animation is Take Down on Focus Blast's background with an additional sprite)
= 0x21F = (attacking move with chance to raise speed), (animation is Glide on Mach Punch's background with a different sound)
= 0x220 = (attacking move with chance to lower defense), (animation involves dropping a lot of objects and has Psycho Cut's background)
= 0x221 = (attacking move with chance to flinch), (animation involves user disappearing, then foe being repeatedly jabbed)
= 0x222 = (attacking move with chance to confuse), (animation involves foe being hit by some objects, then a jab, then the curse effect)
= 0x223 = (attacking move with chance to lower sp. def), (has ice-related animation)
= 0x224 = (attacking move)
= 0x225 = (attacking move with chance to raise sp. atk)
= 0x226 = (attacking move)
= 0x227 = (non-attacking move, turns target into pure Rock-type)
= 0x228 = (attacking move)
+ 0x229 = Soak
+ 0x22A = Simple Beam
+ 0x22B = Worry Seed
= 0x22C = (attacking move)
= 0x22D = Wring Out/Crush Grip
= 0x22E = (attacking move with chance to lower defense)
= 0x22F = (attacking move that lowers user's attack and harshly lowers user's defense afterwards)
= 0x230 = (attacking move)
= 0x231 = (attacking move with chance to lower speed)
= 0x232 = (attacking move with chance to burn or flinch)
= 0x233 = (attacking move)
= 0x234 = (attacking move)
= 0x235 = (attacking move)
= 0x236 = (attacking move with chance to lower speed or raise user's speed)
= 0x237 = (attacking move with chance to lower defense)
= 0x238 = (attacking move with chance to lower defense)
= 0x239 = (attacking move with chance to lower speed)
= 0x23A = (attacking move with [effectF7], but it doesn't actually execute that effect), (can't be called by metronome)
= 0x23B = (attacking move with chance to lower evasion)
= 0x23C = (non-attacking move)
= 0x23D = (non-attacking move)
= 0x23E = (non-attacking move)
= 0x23F = (non-attacking move)
= 0x240 = (non-attacking move), ([effectE5] forces this move on the target)
= 0x241 = (attacking move)
= 0x242 = (attacking move)
= 0x243 = (attacking move)
= 0x244 = (attacking move with chance to sleep)
= 0x245 = (attacking move with chance to raise all stats)
= 0x246 = (attacking move with tri attack effect)
= 0x247 = (attacking move with chance to lower defense)
= 0x248 = (attacking move)
= 0x249 = (attacking move with chance to raise sp. atk)
= 0x24A = (attacking move with chance to paralyze)
= 0x24B = (attacking move with chance to sharply raise target's sp. atk)
= 0x24C = (attacking move with chance to lower sp. def)
= 0x24D = (attacking move with chance to paralyze)
= 0x24E = (attacking move)
= 0x24F = (attacking move)
= 0x250 = (attacking move with chance to lower speed)
= 0x251 = (attacking move)
= 0x252 = (attacking move)
= 0x253 = (attacking move with chance to lower sp. def), (can't be called by metronome)
= 0x254 = (attacking move with chance to lower sp. atk), (can't be called by metronome)
= 0x255 = (attacking move with chance to lower attack), (can't be called by metronome)
= 0x256 = (attacking move with chance to lower defense), (can't be called by metronome)
= 0x257 = (attacking move), (special message in atk97_tryinfatuating)
= 0x258 = (attacking move with Brine effect)
= 0x259 = (non-attacking move)
= 0x25A = (non-attacking move)
= 0x25B = (non-attacking move)
= 0x25C = (non-attacking move)
= 0x25D = (attacking move)
= 0x25E = (attacking move with chance to harshly lower speed or confuse), (can't be called by metronome)
= 0x25F = (attacking move with chance to harshly lower sp. def or confuse), (can't be called by metronome)
= 0x260 = (attacking move with chance to lower defense or confuse), (can't be called by metronome)
= 0x261 = (attacking move), (can't be called by metronome)
= 0x262 = (attacking move), (can't be called by metronome)
= 0x263 = (attacking move)
+ 0x264 = Wake-Up Slap
= 0x265 = (attacking move that does double damage if it cures infatuation)
= 0x266 = (attacking move that does double damage if it cures burn)
= 0x267 = (attacking move that does double damage if it cures freeze)
= 0x268 = (non-attacking move)
= 0x269 = (attacking move with chance to burn)
= 0x26A = (attacking move)
= 0x26B = (non-attacking move)
= 0x26C = (non-attacking move), (can't be called by metronome)
= 0x26D = (non-attacking move), (can't be called by metronome)
+ 0x26E = Stored Power
= 0x26F = (attacking move)
= 0x270 = (attacking move)
= 0x271 = (attacking move)
= 0x272 = (attacking move with Brine effect, but doubles when the user has less than half HP, not the target)
= 0x273 = (non-attacking move)
= 0x274 = (non-attacking move)
= 0x275 = (non-attacking move, -1 sp. def)
= 0x276 = (non-attacking move, +1 sp. atk)
= 0x277 = (non-attacking move, turns target into pure Bug-type)
= 0x278 = (attacking move)
= 0x279 = (non-attacking move, turns target into pure Ghost-type)
= 0x27A = (attacking move with Brine effect)
= 0x27B = (attacking move with Foul Play effect, but uses the target's Sp. Atk)
= 0x27C = Crush Grip/Wring Out
+ 0x27D = Captivate
= 0x27E = (non-attacking move that sleep effect, but sleeps the target even if it already has a status)
+ 0x27F = Cotton Guard
= 0x280 = (attacking move)
= 0x281 = (attacking move)
= 0x282 = (non-attacking move)
= 0x283 = (attacking move that does double damage if it cures poison)
= 0x284 = (attacking move)
= 0x285 = (attacking move)
= 0x286 = (attacking move)
= 0x287 = (non-attacking move)
+ 0x288 = Draining Kiss
= 0x289 = (attacking move with Overheat effect, but harshly lowers user's attack instead of sp. atk)
= 0x28A = (attacking move that harshly lowers user's sp. atk afterwards)
= 0x28B = (attacking move)
+ 0x28C = Infestation
= 0x28D = (attacking move)
+ 0x28E = Magma Storm
= 0x28F = (non-attacking move)
= 0x290 = (non-attacking move)
= 0x291 = (non-attacking move with Power Trick effect, but swaps the user's Sp. Atk and Sp. Def instead)
= 0x292 = (attacking move)
= 0x293 = (attacking move)
= 0x294 = (attacking move), (can't be called by metronome)
= 0x295 = (attacking move)
= 0x296 = (attacking move with chance to lower attack)
= 0x297 = (attacking move with chance to harshly lower accuracy)
= 0x298 = (attacking move with chance to paralyze)
= 0x299 = (attacking move)
= 0x29A = (attacking move with chance to lower accuracy or flinch)
= 0x29B = (attacking move)
= 0x29C = (attacking move with chance to flinch)
= 0x29D = (attacking move with chance to paralyze)
= 0x29E = (attacking move with chance to severely lower accuracy)
= 0x29F = (attacking move), (ground -> flying neutral, ice/poison -> water SE, bypasses Levitate)
= 0x2A0 = (attacking move)
= 0x2A1 = (attacking move)
= 0x2A2 = (attacking move)
= 0x2A3 = (attacking move with Venom Drench effect)
! 0x2A4 = Strength Sap (not implemented)
= 0x2A5 = (non-attacking move), (can't be called by metronome)
= 0x2A6 = (non-attacking move with Attract effect, but also poisons)
= 0x2A7 = (attacking move with Counter effect, but does half of Counter's damage and prints string 0x218 if failed), (special-cased in focus punch setup to print string 0x217), (can't be called by metronome)

move effects:
= 0x1E = freeze
= 0x32 = confuse and lower evasion
= 0x33 = if target moved first, damage with chance to raise speed; otherwise, damage with chance to raise sp. atk
= 0x34 = Payback that always doubles power vs Steel-types
= 0x35 = (ground -> flying neutral, ice/poison -> water SE, unknown hardcoded parameterized additional effects)
= 0x36 = (ground -> flying neutral, ice/poison -> water SE, unknown hardcoded parameterized additional effects), (Poison Leaf uses this)
= 0x37 = Power Split
= 0x38 = Guard Split
= 0x3A = Power Swap
= 0x3B = Guard Swap
= 0x3C = Reflect Type
= 0x3D = Synchronoise
= 0x3E = Foul Play/[move27B]
= 0x3F = Heal Pulse
= 0x40 = poison or paralysis, chooses one at random
= 0x58 = moves that double damage on status are all grouped here ((does double damage to poisoned targets (but NOT toxiced targets)), Hex, and Smelling Salts/equivalents), but hardcoded based on move ID
= 0x5D = Venom Drench/[move2A3]
= 0x60 = hardcoded parameterized additional effects, ai uses this for all "chance to give user a status problem" moves
= 0x61 = hardcoded parameterized additional effects, ai uses this for sleep chance moves
= 0x68 = Bestow
= 0x6E = Incinerate
= 0x82 = Punishment
= 0x83 = Stored Power/(+6 speed = 110 power, +5/+4 speed = 100 power, +3/+2 speed = 90 power, else displayed base power)
= 0x85 = Tailwind
= 0x86 = Trick Room
= 0x8A = burn user and target
= 0x8B = poison user and target
= 0x8C = hardcoded parameterized additional effects, ai uses this for all "chance to raise a stat" moves
= 0x8D = Chip Away
= 0xA3 = 50% recoil
= 0xAB = double damage on target with speed boosts, does no damage to target with speed drops
= 0xD1 = Work Up/Growth/Energize
= 0xD6 = Hammer Arm
= 0xD7 = Close Combat
= 0xD8 = Diamond Blast/Giga Spark
= 0xD9 = (unknown hardcoded parameterized additional effects), (Magnet Force uses this)
= 0xDA = hardcoded parameterized additional effects, ai uses this for all "chance to raise target's stat" moves
= 0xDB = (calculates damage as if any Defense boosts were added to Sp. Atk, then has a 20% chance to raise Def and Sp. Atk)/[moveDD]
= 0xDC = Typhoon
= 0xDD = V-Create
= 0xDE = chance to lower all stats
= 0xDF = Dizzy Whirl
= 0xE0 = hits 3 times
= 0xE1 = Frost Breath
= 0xE2 = Blizzard/Starfreeze
= 0xE3 = Brine/(double damage if user at less than half HP)
= 0xE4 = Soak + equivalents
= 0xE5 = overwrites a random one of the target's moves with [move240]
= 0xE6 = removes Reflect/Light Screen from the user's side, but does double damage when it does
= 0xE7 = does damage based on the user's Defense stat instead of its Attack stat
= 0xE8 = does double damage if used immediately after Hone Claws
= 0xE9 = Revelation Dance
= 0xEA = Surf
= 0xEB = Bulldoze/Sandblast
= 0xEC = Discharge/Lava Plume/Sludge Wave
= 0xED = Sucker Punch
= 0xEE = Hurricane
= 0xEF = lowers Sp. Atk and Sp. Def
= 0xF0 = +2 Attack +2 Defense -1 Speed to user
= 0xF1 = Quiver Dance
= 0xF2 = Coil
= 0xF3 = Shell Smash
= 0xF4 = boosts Attack, Speed, and evasion
= 0xF5 = boosts Speed and evasion
= 0xF6 = Hone Claws
= 0xF7 = Ground-type; if used on Protect, does half damage and harshly lowers user's Sp. Atk
= 0xF8 = Payback
= 0xF9 = Psycho Shift
= 0xFA = Power Trick/[move291]
= 0xFB = Acrobatics
= 0xFC = Metal Burst
+ 0xFD = (currently unused)
= 0xFE = changes the user's ability to Mega Launcher, then does damage
= 0xFF = just uses Explosion instead

itemdata:
all prices divided by 10
shards: items pocket -> key items pocket (PDONLY)
cheri-belue: mystery byte 02 = 01-23
liechi-enigma: mystery byte 02 = 36-3D
pomeg-tamato: type = other -> out of battle
pomeg-tamato: battle usage = 0 -> 1
pomeg-tamato: extra byte = 1A, 1B, 1C, 1E, 1F, 1D
sitrus: effparam = 30 -> 0xFE
typeboosters: effparam = 10 -> 20
leftovers: effparam = 10 -> 0xFF
sea incense: effparam = 5 -> 20
lax incense: effparam = 5 -> 10
changed fieldscriptptrs: pomeg-tamato

pokeball types:
+ 0x01 = Ultra Ball -> Master Ball
+ 0x02 = Great Ball -> Ultra Ball
+ 0x03 = Poke Ball -> Great Ball
+ 0x04 = Safari Ball -> Poke Ball
+ 0x05 = Net Ball -> Safari Ball
+ 0x06 = Dive Ball -> Net Ball
+ 0x07 = Nest Ball -> Dive Ball
+ 0x08 = Repeat Ball -> Nest Ball
+ 0x09 = Timer Ball -> Repeat Ball
+ 0x0A = Luxury Ball -> Timer Ball
+ 0x0B = Premier Ball -> Luxury Ball
+ 0x0C = Premier Ball
+ 0x0D = Quick Ball
+ 0x0E = Dusk Ball
+ 0x0F = Park Ball
+ 0x10 = Heal Ball
+ 0x11 = Cherish Ball
+ 0x12 = Moon Ball
+ 0x13 = Friend Ball
+ 0x14 = Heavy Ball
+ 0x15 = Level Ball
+ 0x16 = Love Ball
+ 0x17 = Lure Ball
+ 0x18 = Fast Ball

metatiles:
0x08: (cave battle background)
0x1A: (pond battle background)
0x1B: (pond battle background)
0x1F: (Strength boulders can be moved onto this tile, after which the boulder disappears; also some unknown functionality which is shared with ice tiles)
0xB0: (moving west off the tile results in northwest, moving east results in southeast)
0xB1: (moving west off the tile results in northwest)
0xB2: (moving east off the tile results in southeast)
0xB3: (moving west off the tile results in southwest, moving east results in northeast)
0xB4: (moving east off the tile results in northeast)
0xB5: (moving west off the tile results in southwest)
0xD1: (grass battle background)
0xE0: (IsSandOrDeepSand (? unsure) returns TRUE; cave battle background)
0xE1: (underwater battle background)
0xE2: (IsSandOrDeepSand (? unsure) returns TRUE; underwater battle background)
0xE3: (runs script_68277E_J (msgbox 8B 70 46 0A 1A FE 8B 70 44 00 02 50 4B 02 AB FF) when examined)
0xE4: (runs script_682787_J (msgbox 87 5B 8B 5F B0 AB FE 15 06 1A 00 8B 70 00 46 50 06 28 AB FF) when examined)

battle strings (ADD 9 TO ALL):
! 0x3B = "[PKMN] [STATUSCUREMESSAGE]" <DON'T ADD 9>
! 0xC2 = "[PKMN]'s [ABILITY] [CHANGED] its [STAT]!" <DON'T ADD 9> <REFACTOR LATER>
! 0xC8 = (special message for move ID 0x257?) <DON'T ADD 9> <probably refactor later to not remove the old C8, "prevents romance">
! 0xD5 = "drastically " <DON'T ADD 9>
! 0xD6 = "severely " <DON'T ADD 9> (what happens to the old D5 and D6?)
! 0xE9 = "The sunlight is strong. (?????????????)"
! 0xEB = "[PKMN]'s [ABILITY] made it hail! (placeholder)" <DON'T ADD 9>
= 0x180 = "[PKMN]'s [ABILITY] nullified the effects of weather!" <ADD THIS AFTER IMPORTING ABILITYBATTLEEFFECTS>
= 0x181 = "[PKMN]'s [ITEM] let it move first!"
! 0x183 = "The [ITEM] weakened [MOVE]'s power!"
! 0x184 = "[PKMN] is not affected by [MOVE] thanks to its [ITEM]!"
! 0x185 = "[PKMN] breaks the mold!"
! 0x186 = "[PKMN] is exerting its pressure!"
! 0x187 = "[PKMN] can't get it going because of its [ABILITY]!"
! 0x188 = "[PKMN] finally got its act together!"
! 0x189 = "[PKMN]'s [ABILITY] alerted it to [MOVE]!"
! 0x18A = "[PKMN]'s [ABILITY] made it shudder!"
! 0x18B = "[ATTACKER] frisked [DEFENDER] and found its [ITEM]!"
! 0x18C = "[Your/The opposing] team was protected by [PKMN]'s [ABILITY]! (placeholder)"
! 0x18D = "[PKMN]'s [ABILITY] makes [your/the opposing] team too nervous to eat Berries! (placeholder)"
! 0x18E = "[PKMN] twisted the dimensions!"
! 0x18F = "The twisted dimensions returned to normal!"
! 0x190 = "The Tailwind blew from behind [your/the opposing] team!"
! 0x191 = "[Your/The opposing] team's Tailwind petered out!"
! 0x192 = "[PKMN]'s [ABILITY] maxed its Attack! (placeholder)"
! 0x193 = "[DEFENDER]'s [ABILITY] disabled [ATTACKER]'s [MOVE]! (placeholder)"
! 0x194 = "[PKMN]'s Ability became Mummy!"
! 0x195 = "[DEFENDER]'s [ABILITY] hurt [ATTACKER]! (placeholder)"
! 0x196 = "[DEFENDER]'s [ABILITY] lowered [ATTACKER]'s [STAT]! (placeholder)"
! 0x197 = "The [ITEM] strengthened [MOVE]'s power!"
+ 0x198 = "The effects of the [ITEM] prevent status moves from being used!"
+ 0x199 = "[PKMN]'s [ABILITY] raised its [STAT]! (placeholder)" <REFACTOR LATER>
+ 0x19B = "[PKMN]'s [ABILITY] bounced [MOVE] back! (placeholder)"
! 0x19C = "[PKMN]'s [ABILITY] blocks the use of [MOVE]! (placeholder)"
! 0x19D = "[PKMN] restored HP using its [ABILITY]! (placeholder)"
! 0x19E = "[PKMN] is hurt by its [ITEM]!"
+ 0x1FF = "[PKMN] decided to explode! (placeholder)"
+ 0x200 = "[PKMN] shared its power with the target!"
+ 0x201 = "[PKMN] shared its guard with the target!"
! 0x202 = "[PKMN] switched all changes to its Attack and Sp. Atk with its target!"
! 0x203 = "[PKMN] switched all changes to its Defense and Sp. Def with its target!"
! 0x204 = "[ATTACKER]'s type became the same as [TARGET]'s type!"
+ 0x205 = "[DEFENDER] received [ITEM] from [ATTACKER]!"
+ 0x206 = "[PKMN]'s [ITEM] was burned up!"
+ 0x207 = "[PKMN]'s Ability was suppressed!"
+ 0x208 = "[PKMN] acquired [ABILITY]!"
+ 0x209 = "[PKMN] transformed into the [TYPE] type!"
+ 0x20A = "[PKMN] was given (move240)! (placeholder)"
+ 0x20B = "Its sharpened claws strengthened the attack! (placeholder)"
+ 0x20C = "[PKMN] is already frozen! (placeholder)"
+ 0x20D = "[PKMN]'s [ABILITY] prevents freezing! (placeholder)"
! 0x20E = "[DEFENDER] has been afflicted with an infestation by [ATTACKER]!"
! 0x20F = "[PKMN] became trapped by swirling magma!"
+ 0x210 = "[PKMN] switched its Attack and Defense!"
+ 0x211 = "[PKMN] switched its Sp. Atk and Sp. Def!"
+ 0x212 = "[PKMN]'s stat changes were removed!"
+ 0x214 = "[PKMN]'s [ABILITY] prevents its item from being removed!" (?????????????)
+ 0x215 = "[PKMN] couldn't fully protect itself and got hurt! (placeholder)"
+ 0x216 = "[PKMN]'s Ability became Mega Launcher! (placeholder)"
+ 0x217 = "(move2A7) will be used! (placeholder)"
+ 0x218 = "(move2A7) failed! (placeholder)"
+ 0x21C = "[PKMN]'s stats won't go any higher!" (?????????????)
+ 0x221 = "[PKMN] switched items with its target!"
+ 0x222 = "[PKMN] acquired [ABILITY]!"
+ 0x247 = "[Your/The opposing] team's Reflect wore off!" <EN ONLY>
+ 0x248 = "[Your/The opposing] team's Light Screen wore off!" <EN ONLY>

grafics:
= 3BF58C (3860F0 old, 783890 new)
= 3CD5E8 (395324 old, 90C190 new)
= 3CE5FC (396334 old, 396D18 new)
= 3CE738 (3964D0 old, 396394 new)
= 3CE758 (3964F0 old, 3963B4 new)
= 3EF524 (3B60AC old, 8E1C70 new)
= 3EF59C (3B6124 old, 8E1CF0 new)
= 3EF61C (3B61A4 old, 8DC3D0 new)
= 3F089C (3B7424 old, 8DD390 new)
= 3F0AFC (3B7684 old, 77C4F0 new)
= 405DC4 (3CBF9C old, E2A880 new)
= 40644C (3CC624 old, E2B180 new)
= 406654 (3CC82C old, E2BB10 new)
= 4071D0 (3CD3A8 old, E2C570 new)
= 407B9C (3CDD74 old, 96A430 new)
= 408D98 (3CEF70 old, 96B5E0 new)
= 40CB8C (3D3EA8 old, 8F8780 new)
= 40D228 (3D4544 old, 8E99B0 new)
= 40E158 (3D5474 old, 8F8C70 new)
= 40E904 (3D5C20 old, 8F7F60 new)
= 40F240 (3D655C old, 8F9260 new)
= 40F944 (3D6C60 old, 8F7640 new)
= 410198 (3D74B4 old, 204D10 new)
= 4105B4 (3D78D0 old, 427E80 new)
= 410E30 (3D867C old, 428700 new)
= 4129C0 (3DA20C old, 7FC460 new)
= 440274 (404928 old, E98420 new)
= 4403AC (404A60 old, E98420 new)
= 443620 (407FB8 old, E016A0 new)
= 452C94 (411AFC old, 411C1C new)
= 45A1C6 (419956 old, 41994C new)
= 45A20C (41999C old, 419910 new)
= 45A242 (4199D2 old, 419958 new)
= 45A278 (419A08 old, 4199A0 new)
= 460F14 (423228 old, 8DBCC0 new)
= 46163C (423950 old, 68AE40 new)
= 461D14 (424028 old, 8DEF50 new)
= 4623EC (424700 old, 8DD7B0 new)
= 46386C (426D84 old, 426D80 new)
= 463B20 (427460 old, 4267BC new)
= 463B88 (427C40 old, 427C80 new)
= 463C80 (427D38 old, 427C80 new)
= 466620 (42F9A8 old, 922730 new)
= D0051C (C0051C old, EB8990 new)
= E82700 (D826B0 old, 924320 new)
= E85068 (D85074 old, 251A80 new)
= E9A460 (42631C old, 4F3040 new)
= E9B598 (427680 old, 427654 new)
= E9B750 (4279DC old, 427950 new)
= E9B950 (427870 old, 427828 new)
= E9BBCC (427B0C old, 427AF4 new)
= E9C3D8 (3964B0 old, 396374 new)
= E9C3F8 (396470 old, 396334 new)
= E9C418 (396490 old, 396354 new)
= E9C438 (396510 old, 396470 new)
= E9CAEC (396BD0 old, 39CE04 new)
= EAB6C4 (3835A4 old, D97800 new)
= EAB8C4 (383604 old, F00000 new)
= EAD390 (385018 old, 8E0B00 new)
= EAD5E8 (385228 old, F03730 new)
= EAD608 (385248 old, 8E38A0 new)
= EADEE4 (385B24 old, F03460 new)
= EAE094 (385CD8 old, F03020 new)
= EAE0B4 (385CF8 old, F01A00 new)
= EAE374 (385FDC old, F03050 new)

stray text:
= 3FDB92 (3C3D0A old, 3C3C3F new)
= 3FDBEF (3C3D2B old, 3C3D09 new)
= 3FDC58 (3C3D6B old, 3C3D3A new)
= 3FDC95 (3C3D90 old, 3C3D5E new)
= 3FDCD2 (3C3DB6 old, 3C3D86 new)
= 3FDD23 (3C3DDD old, 3C3DAC new)
= 3FDD64 (3C3E05 old, 3C3DCC new)
= 3FDDEB (3C3E5C old, 3C3E1D new)
= 415F66 (3DD606 old, 5447D9 new)
= 417457 (3DE537 old, 3C3EB6 new)
= 417494 (3DE55B old, 3DE537 new)
= 419CA2 (3E0279 old, 3E06E3 new)
= 41A2E1 (3E06E3 old, 68AE00 new)
= 41A312 (3E070A old, 3E0709 new)
! repoint ptrs at 09D1E0 and 09D248 ("Bill's PC"/"Someone's PC") to the same text (jE00590, e1E00590) (PDONLY)

+ expand rom to 2x
+ expand 1C68F4 (move animations) from 356 entries to 680 (1030000) 
+ expand 1C6EA8 (misc animations) from 23 entries to 24 (24th entry is 1C9989 - whirlwind animation) (104FF00)
+ expand 1D65A8 (move scripts) from 214 entries to 256 (1065000)
= expand 245EE0 (species names) from 10 per to 12 per (1060BA0?)
= expand 247094 (move names) from 355 entries/12 per to 680 entries/16 per (1000000)
	! also set 2481BE (gMoveNames[MOVE_FRENZY_PLANT]) to [BROKEN] 1E0C640
	! also set 24802B (gMoveNames[MOVE_BLAST_BURN]) to [BROKEN] 1E0C548
	! also set 248038 (gMoveNames[MOVE_HYDRO_CANNON]) to [BROKEN] 1E0C550
= expand 24F1A0 (type names) from 18 entries/7 per to 19 entries/9 per (j411E1C, e1411E1C)
+ expand 24FB08 (ability descriptions) from 78 entries to 232 (13FD000)
= expand 24FC40 (ability names) from 78 entries/12 per to 232 entries/16 per (13FF000)
+ expand 25011C (battle script commands) from 248 entries to 256 (EB7A00)
! expand 2507E8 (uncopiable moves) from 4 entries (mimic) / 19 entries (metronome) to 5 entries (mimic) / 44 entries (metronome) (j20CA40, eUNKNOWN)
+ expand 250848 (pickup table) from 16 entries to 10 subtables of varying size (1528150)
+ expand 250C04 (move data) from 355 entries to 680 (1010000)
+ expand 2539D4 (cry ids) to encompass all ids (865DE0)
+ expand 25EF0C (egg moves) from 0x8E8 bytes to 0xFC4 bytes (8B6630)
+ expand 26056C (ball sprites) from 12 entries to 26 (A23000)
+ expand 2605CC (ball sprite palettes) from 12 entries to 26 (A230F0)
+ expand 2606F4 (ball sprite templates (?duplicate)) from 12 entries to 26 (A23380)
! expand 399388 (battle anim sprites???) to [BROKEN] (11ECA80)
! expand 399C90 (battle anim palettes???) to [BROKEN] (11EDD80)
+ expand 39FDB0 (field object graphics info pointers) from 174 entries to 256 (j4EFDA0, e14EFDA0)
! expand 3A65BC (movement action functions) from 170 entries to 226 (j221550, eUNKNOWN)
	! add bonus m.a.f. table at (j2218D8, eUNKNOWN)
+ expand 3ACC08 (battle anim sprites) from 289 entries to 462 (1200300)
	+ also set 3AD048 (gBattleAnimPicTable[136]) to 1200740
	+ also set 3AD350 (gBattleAnimPicTable[233]) to 1200A48
	+ also set 3AD470 (gBattleAnimPicTable[269]) to 1200B68
+ expand 3AD510 (battle anim palettes) from 289 entries to 462 (1201600)
	+ also set 3AD950 (gBattleAnimPaletteTable[136]) to 1201A40
	+ also set 3ADC58 (gBattleAnimPaletteTable[233]) to 1201D48
	+ also set 3ADD78 (gBattleAnimPaletteTable[269]) to 1201E68
+ expand 3ADE18 (battle anim backgrounds) from 27 entries to 100 (11FF000)
+ expand 3D2A10 (box wallpapers) from 48 entries to 63 (938980)
+ expand 3D353C (PC menu options) from 38 entries to 128 (jE2A570, e1E2A570)
+ expand 3D3740 (raw mon icon palette data) from 3 entries to 6 (ONLY FIRST PTR) (EE4E00)
+ expand 3D4038 (mon icon palettes) from 6 entries to 16 (jE40000, e1E40000)
+ expand 3D4294 (item icons/palettes) from 375 entries to 435 (10B8000)
+ expand 3DB028 (item data) from 375 entries to 435 (10B0000)
+ expand 3EEBF8 (heal locations) from 20 entries to 22 (FE42E0)
	+ also set 3EEBF0 (sHealLocations[-1]) to FE42D8
+ expand 3EEC98 (heal location map indexes) from 20 entries to 22 (FE4400)
+ expand 3EECE8 (gSpecialVar_LastTalked values to be set on respawn per heal location) from 20 entries to 22 (FE4480)
+ repoint 3F55A4 (ai script commands) to 11FB800
! expand 3FE538 (damaging weather continue messages) from 2 entries to 3 (3FE53A, don't do this until DoFieldEndTurnEffects changes done)
! expand 3FE53C (damaging weather end messages) from 2 entries to 3 (1D8B18, don't do this until DoFieldEndTurnEffects changes done)
! reduce 3FE540 (rain messages) from 3 entries to 2 (3FE542, don't do this until DoFieldEndTurnEffects changes done)
+ expand 3FE5A0 (partial trapping messages) from 6 entries to 8 (1053700)
+ expand 3FE664 (partial trapping moves) from 6 entries to 8 (1303552)
+ expand 3FEA70 (japanese grammar) from 118 entries to 183 (1040000)
+ expand 40BF48 (unknown pokeball struct) from 12 entries to 26 (A23600)
+ expand 40BFA8 (unknown pokeball struct) from 12 entries to 26 (A236D0)
+ expand 40C068 (unknown pokeball struct) from 12 entries to 48 (A24210)
+ expand 40C074 (ball animation tasks) from 12 entries to 28 (A23A50)
+ expand 40C0A4 (ball sprite templates (? duplicate)) from 12 entries to 26 (A237E0)
	+ also set 40C104 (gUnknown_840C0A4[ITEM_POKE_BALL]) to A23840
+ expand 40C1C4 (color that mon sprite flashes on release from each ball) from 12 entries to 48 (A24240)
! expand 456C50 (unknown quest-log-related list of flags) from 17 entries to 19 (j6B0CCC, eUNKNOWN)
+ expand 4886E8 (move descriptions) from from 355 entries to 680 (1020000)

= 006884: ptr 217818 (gUnusedJapaneseFireRedLeafGreenMaleFontGlyphs - emerald name) -> 207500 (gFont2JapaneseGlyphs)
= 0069F0: ptr 227B30 (gUnusedJapaneseFireRedLeafGreenFemaleFontGlyphs - emerald name) -> 207500 (gFont2JapaneseGlyphs)
		  (wait until playthrough - is this the equivalent of removing gender colors?)
= 008CF8, 008D2C, 1361B4: 0A -> 0C (pkmnnamelength)
= 00960C: 36 -> 33 (some sort of link-related graphics function?, see 1disasm)
= 00D311: 68 -> 47
  00D320: 4C 2B 02 02 -> XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j252400, see 02disasm))
		  Implements: need more info
		  Required knowledge: j0203B900, j0203C00D, j0203D500
+ 011357: 20 08 40 88 21 8A 46 00 28 -> 31 09 06 09 0E 8A 46 02 E0 (unclear, but gives more variance to personality values)
= 0113E0, 0113F2, 011466, 011478, 011526, 011538, 0115BA, 0115CC, 034D26, 040FE2, 0435A6, 049720, 053AB0, 053B16, 06BCAA, 06BCF2, 093E20, 09F4FE, 0A08E6, 0BD814, 0CB0F6, 0CBE8C, 0CDEE0, 0CE572, 0CE7B0, 0E64F4, 0F32FC, 1035AC, 103652, 1036F2, 10378A, 103826, 1038B8, 104DF6, 10647E, 113EE8, 119420, 11AC48, 11AFDE, 11B01C, 1218EC, 136248: 0B -> 10 (pkmnnamelength)
= 011688: 0E 49 -> 10 47
  0116C8: 4C 2B 02 02 -> XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2FD90, see 03disasm))
		  Implements: pkmnnamelength, something else - need more info
		  Required knowledge: j020385E2, unknown data table at j1400000
= 0124EB: 80 -> 60 (store weather as fullword)
= 014CD8: GetWhoStrikesFirst (+GetSpeedStat, GetPriority, GetAbilityValues) (see 04disasm/04disasm2)
		  Implements: Unburden (effect), Quick Feet, Stall, Klutz (speed items), Slow Start (Speed reduction), Sand Rush, Prankster, Gale Wings [gen 6], Slush Rush, Choice Scarf (speed boost), Lagging Tail, Tailwind (effect), Trick Room (effect), 1/4 -> 1/2 paralysis speed cut, removal of badge 3 bonus
		  Relies on: weather refactor, returns 0 sometimes instead of 1 or 2
		  Glitch: Stall and Trick Room are in wrong order, Stall goes first in Trick Room (probably doesn't matter in P/D itself)
= 015910: HandleEndTurn_FinishBattle (see 05disasm)
		  Implements: EVs recalculated per battle (?)
		  Requires in future: extra fn j207370
= 015CA0: HandleAction_UseMove (+CheckSwitchToSpreadMoveScript, BattleScript_EffectSpreadMove) (see 06disasm)
		  Implements: Storm Drain (redirection), Mold Breaker+ (vs redirection)
		  Relies on: gChosenActionByBattler changed to something else
		  Note: test deeply - incomprehensible code
= 01609C: BattleScript_EffectSurf (see movescripts.txt)
		  Implements: Surf targets all mons but user
		  Relies on: moveend refactor
! 016460: 0C 29 1B D8 0B 4A 0C 49 -> 00 00 00 00 0B 4A 97 46
  016494: 74 3D 02 02 -> E0 31 A2 08 (jumps (mov) to fn at A231E0, then back; see 07disasm)
		  Implements: new pokeballs (throw action)
		  Relies on: pokeball ID changes
		  Glitch?: Cherish Ball uses SafariBallThrow (not relevant since it should be unobtainable)
		  GLITCH!: ultra ball stops working, this is definitely an off-by-one error; probably requires something else first
+ 017594: TrySetCantSelectMoveBattleScript (see 08disasm)
		  Implements: Klutz (move restriction items), Choice Specs (locking), Choice Scarf (locking), Assault Vest (move prevention)
		  Relies on: Choice Band effect ID change
+ 0177C8: C8 8D AF 28 0E D1 06 4A F9 00 C8 1B 80 00 80 18 C0 79 00 90 0F E0 -> 08 1C 20 30 00 78 67 28 0C D1 00 20 10 E0 00 00 00 00 00 00 00 00
  0177E8: B4 3E 02 02 -> 00 00 00 00
  01783C, 01785C, 017878, 01790A, 01792A: 20 06 04 0E -> 00 00 00 00
  0178BA: 20 06 04 0E 2F 48 40 44 C0 7C 00 07 00 28 10 D0 10 20 18 40 00 28 0C D0 2F 4A 29 88 48 00 40 18 80 00 80 18 40 78 00 28 03 D1 30 68 04 43 20 06 04 0E -> 00 00 00 00 00 9A 52 2A 05 D0 2D 48 40 44 C0 7C 00 07 00 28 0D D0 10 20 18 40 00 28 09 D0 2D 4A 29 88 0C 20 48 43 80 18 40 78 00 28 01 D1 30 68 04 43
  01791C: 07 -> 05
  017924: 03 -> 01
  017930: 1D 2A 0D D1 01 98 01 88 00 29 09 D0 15 48 81 42 06 D0 2A 88 91 42 03 D0 30 68 04 43 20 06 04 0E -> 44 2A 0D D3 46 2A 0B D8 01 98 01 88 00 29 07 D0 14 48 81 42 04 D0 2A 88 91 42 01 D0 30 68 04 43
		  Implements: Klutz (choice item locking), Choice Specs (locking), Choice Scarf (locking)
		  Relies on: Choice Band effect ID change
= 017BE0: D4 80 01 08 44 81 01 08 9C 81 01 08 -> 8A 80 01 08 50 81 01 08 E6 81 01 08
  01801C: 48 46 00 28 00 D0 06 E1 62 46 11 68 C8 78 01 30 C8 70 FC E0 -> A0 E7 10 9A 01 12 40 00 3E 10 98 01 12 40 00 3E 00 00 00 00
  018050: Large part of DoFieldEndTurnEffects (+battlescripts) (see 09disasm)
		  Implements: Tailwind (upkeep), Trick Room (upkeep), permahail
		  Relies on: weather refactor; BattleScript_SandStormHailEnds/BattleScript_DamagingWeatherContinues work with sun; params are changed (6 = rain -> tailwind, 7 = sand -> trick room, 8 = sun -> all weather, 9 = hail -> nop)
		  Glitch?: check if tailwind works on both sides, code's weird
+ 018308: FA 83 01 08 78 84 01 08 C0 84 01 08 40 85 01 08 88 85 01 08 EC 85 01 08 34 86 01 08 -> E2 83 01 08 3A 84 01 08 76 84 01 08 94 85 01 08 D4 85 01 08 1E 86 01 08 58 86 01 08
  018344: E2 83 01 08 -> C6 83 01 08
  01834C: Large part of DoBattlerEndTurnEffects (+unknown battlescript) (see 10disasm)
		  Implements: Heatproof (burn damage), Poison Heal, Magic Guard (end-of-turn status damage), Klutz (the item effects here), Binding Band, Big Root (ingrain), 1/8 -> 1/16 burn damage, 1/16 -> 1/8 wrap damage
		  GLITCH!: Poison Heal still doesn't work, some other change probably needed
+ 0194E0: 16 49 17 4F 38 78 58 26 70 43 0D 1C 4C 35 40 19 00 68 20 21 08 40 00 28 42 D0 2B F0 E5 FC 00 04 00 0C 05 21 CB F1 BE F8 00 04 04 0C 00 2C 23 D0 0C 4A 0D 48 01 88 48 00 40 18 80 00 80 18 00 78 7D 28 00 D1 0F E2 09 49 09 48 08 60 09 4A 10 68 80 21 89 00 08 43 10 60 1E E0 00 00 -> 16 4D 17 4F 38 78 58 26 70 43 40 19 C0 6C 20 21 08 40 00 28 44 D0 2B F0 E7 FC 04 21 CB F1 C2 F8 00 28 29 D0 0F 4A 10 48 01 88 0C 20 48 43 80 18 00 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 7D 28 00 D1 0E E2 08 49 09 48 08 60 09 4A 10 68 80 21 89 00 08 43 10 60 1D E0
  019558: 38 78 02 1C 72 43 52 19 10 68 21 21 49 42 08 40 10 60 FD F7 EB FF 06 49 06 48 08 60 06 48 44 71 -> 3A 78 72 43 52 19 D0 6C 21 21 49 42 08 40 D0 64 FD F7 EC FF 06 49 07 48 08 60 07 49 00 20 48 71
		  Implements: 20% -> 25% thaw chance
+ 019814: Part of AtkCanceller_UnableToUseMove (see 11disasm)
		  Implements: 50% -> 33% confusion hit chance
= 019DAC: CastformDataTypeChange (+added mysteryfunc, +GetAbilityUserOnSameSide) (see 12disasm)
          Implements: part of weather refactor
		  Glitch?: Might cause castform/terubim to "change" when sand starts/ends; might have done it wrong, check if rain=ice and hail=water accidentally
= 01A088: Most of AbilityBattleEffects (see 13disasm)
		  Implements: Stench flinch chance, Lightning Rod boost/immunity, Pressure message, Motor Drive, Anger Point, Unburden (activation), Dry Skin (rain/water healing/immunity), Download, Hydration, Magic Guard (vs contact damage abilities), Klutz (the item effects here), Mold Breaker (message), Mold Breaker+ (vs move-subset immunities/absorbing immunities), Aftermath, Anticipation, Forewarn, Slow Start (upkeep), Storm Drain (boost/immunity), Ice Body, Snow Warning, Frisk, Unnerve (message), Cursed Body, Healer, Weak Armor, Moody, Overcoat (vs powder), Poison Touch, Imposter, Infiltrator (getting affected by hit-reaction abilities when hitting through Substitute), Mummy, Justified, Rattled, Sap Sipper, Iron Barbs, Aroma Veil, Sweet Veil, Gooey, Flower Veil (vs Gooey/Tangling Hair), Bulletproof, Stamina, Water Compaction, Dazzling, Queenly Majesty, Tangling Hair, weather rocks (on abilities), Safety Goggles (vs powder), grass-type powder immunity, dark-type prankster immunity, user affected by hit-reaction abilities when its sound moves hit through Substitute
		  Relies on: weather refactor, cloud nine/intimidate id change????, gSpecialStatuses[battler].intimidatedMon?
		  Requires in future: GetAbilityUserOnSameSide, GetWeatherTurns, CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Note: Check Weak Armor vs Psyshock, might be wrong
= 01BC68: ItemBattleEffects (+ CheckUnnerve, IsAffectedBySheerForce, GetPinchThreshholdFromParam, GetMoveWithNoPP, GetPartyIndex, CheckAndRunCheekPouch) (see 14disasm)
		  Implements: Magic Guard (Life Orb), Klutz (berries, Amulet Coin, Leftovers, White Herb, Mental Herb, Shell Bell, the item effects here), Sheer Force (Life Orb/Shell Bell glitch), Unnerve (Gen3 berries), modern Sitrus Berry, Black Sludge, Life Orb, status cure items/white herb consumed immediately
		  Required knowledge: j0203B950
		  Requires in future: GetPinchThreshhold (j207450), PushScriptInstr (j207470)
		  Glitch?: white herb/amulet coin might not work unless unnerve IS active
! 01D402: 97 -> FC (PDONLY, makes mew not disobey)
+ 01D760: atk00_attackcanceler (see 15disasm)
		  Implements: Magic Bounce, Protean, Mold Breaker+ (vs Magic Bounce)
		  Glitch: If the Magic Bounce user has Magic Coat, Magic Bounce activating against a Pressure user will deduct 1 PP from Magic Coat
= 01DC7C: AccuracyCalcHelper (see 16disasm)
		  Implements: No Guard, the following not missing: Toxic from poison-types, Stomp on Minimize, Hurricane in rain, Blizzard in hail, Struggle, Bide (?), Mimic, Pain Split, Lock-On, Foresight, Role Play, Yawn, Imprison (?), Magic Coat (?), Snatch (?), Power Split, Guard Split, Heal Pulse, Bestow
		  Relies on: weather refactor
= 01DDC4 -> 01DE30 (repoint): atk01_accuracycheck (see 17disasm)
		  Implements: Keen Eye ignoring evasion, Tangled Feet, Snow Cloak, Klutz (acc/evasion items), Mold Breaker+ (vs acc/evasion), Unaware (acc/evasion), (ability93), Victory Star, Wide Lens, Hurricane acc- in sun, removes some first-battle code
		  Relies on: weather refactor, GetAbilityUserOnSameSide
		  Required knowledge: j0203B950
		  Glitch?: (ability93) might not work unless Victory Star is active on the other side
		  Note: Check Hustle accuracy vs Psyshock, might be wrong
= 01E1D8: Shift entirety of atk02_attackstring down one line to make call to extra func j207790 first (see 18disasm)
		  Implements: Possibly tracks number of times each of player's moves are used?
		  Required knowledge: j0203B970
+ 01E408: atk04_critcalc (see 19disasm) (ALSO 250530: 10 00 08 00 04 00 03 00 02 00 -> 18 00 08 00 02 00 01 00 01 00)
		  Implements: Klutz (crit boost items), Mold Breaker+ (vs Shell Armor), Super Luck, Frost Breath, modern crit stages; removes Poison Tail/Blaze Kick crit+ (now unused)
= 01E59C: atk05_damagecalc (see 20disasm)
		  Implements: Sniper, 2x -> 1.5x crit damage; removes gBattleScripting.dmgMultiplier, Charge boost, Helping Hand boost (moved to CalculateBaseDamage)
		  Relies on: above being moved to CalculateBaseDamage
= 01E848: atk06_typecalc (see 21disasm) (ALSO 25DEEE: 00 00 -> 1D 09)
		  Implements: Adaptability, Normalize (type change), Klutz (the item effects here), Mold Breaker+ (vs Levitate, Wonder Guard, Filter/Solid Rock), Tinted Lens, Solid Rock, Filter, Scrappy, Aerilate (type change), Pixilate (type change), Refrigerate (type change), Galvanize (type change), Expert Belt, Gems, ice immunity to sheer cold
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), BattleScript_UseGem (e1FD42, j1F552), gChosenActionByBattler changed to something else
		  Requires in future: HasItemWithTypeEffect, AteAbilityConversionTable (j168CB4)
		  Note: check wonder guard vs canceled se (elec on water/ground, fire on rock/grass)
= 01EDF4: TypeCalc (see 22disasm)
		  Implements: Lightning Rod (immunity), Motor Drive (immunity), Dry Skin (immunity), Adaptability, Normalize (type change), Klutz (the item effects here), Mold Breaker+ (vs Filter/Solid Rock), Tinted Lens, Solid Rock, Filter, Scrappy, Storm Drain (immunity), Unnerve (type-resist berries), Overcoat (vs powder), Sap Sipper (immunity), Aroma Veil, Aerilate (type change), Pixilate (type change), Refrigerate (type change), Bulletproof, Galvanize (type change), Dazzling, Queenly Majesty, Expert Belt, type-resist berries, grass-type powder immunity
		  Requires in future: RunTypeEffectivenessBasedAbilities (j2076B0), IsMoveBlockedByAbility (j251DA0), AteAbilityConversionTable (j168CB4)
		  Glitch?: Solid Rock might be 3/4 to ALL damage
= 01EFCC: AI_TypeCalc (see 23disasm)
		  Implements: Lightning Rod (immunity), Motor Drive (immunity), Dry Skin (immunity), Storm Drain (immunity), Overcoat (vs powder), Sap Sipper (immunity), Aroma Veil, Bulletproof, Dazzling, Queenly Majesty, grass-type powder immunity
		  Requires in future: IsMoveBlockedByAbility (j251DA0)
		  Notes: Of the three, only atk06_typecalc contains the Mold Breaker functionality (besides vs Solid Rock)/Sheer Cold immunity/(bcs 0x1E items), only TypeCalc contains the Hidden Power calc/non-Levitate ability immunities/type-resist berries, and AI_TypeCalc doesn't have anything but the immunity abilities (no Mold Breaker even); not sure what this implies
= 01F104: atk07_adjustnormaldamage (+HasItemWithTypeEffect, GetWeatherTurns) (see 24disasm)
		  Implements: modern Sturdy, Klutz (Focus Band, the item effects here), Mold Breaker+ (vs Sturdy), Unnerve (type-resist berries), Infiltrator (foe can endure when hit through Substitute), Focus Sash, type-resist berries, foe can endure when hit by sound moves through Substitute
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), BattleScript_ConsumeDamageReductionBerry (e1FD33, j1F543)
		  Requires in future: ClearFocusBand (j168C88), SetFocusBand (j168C9C), AteAbilityConversionTable (j168CB4)
		  Glitch: Pointer to AteAbilityConversionTable (j168CB4) instead points to j168CA4
= 01F2B4 -> 01F394 (repoint): atk08_adjustnormaldamage2 (see 25disasm)
		  Implements: modern Sturdy, Klutz (enduring (Focus) items), Mold Breaker+ (vs Sturdy), Infiltrator (foe can endure when hit through Substitute), Focus Sash, foe can endure when hit by sound moves through Substitute
		  Relies on: atk07_adjustnormaldamage
		  Note: Actually just calls atk07_adjustnormaldamage with gCurrentMove set to 0
= 01F5A8: atk0B_healthbarupdate (see 26disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute
		  Relies on: atk0C_datahpupdate changes (to make room)
		  Note: Removes 10000 hard damage limit, might break something?
= 01F684 -> 01F6A0 (repoint): atk0C_datahpupdate (see 27disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute, (j0203B950?)
		  Required knowledge: j0203B950
		  Glitch?: special moves might not be set properly (moveType >= 8 when moveType is now a P/S signifier)
= 01FBA0: atk0F_resultmessage (+ConsumeItem, BattleScript_ConsumeDamageReductionBerry, script_1F552_J) (see 28disasm)
		  Implements: Focus Sash (consumption on use)
		  Relies on: gChosenActionByBattler changed to something else
= 01FF20: Parts of SetMoveEffect (see 29disasm)
		  Implements: Leaf Guard (vs secondary effects), Mold Breaker (vs Shield Dust), Infiltrator (secondary effects working through Substitute), Sweet Veil (vs secondary effects), Flower Veil (vs secondary-effect status), secondary effects of sound moves working through Substitute
		  Relies on: changes at 0206A2
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Note: check moves like Superpower when user has sub, appears to be removed
= 020376: 60 -> 30 (part of weather refactor - sun)
+ 0203E4: (see 29disasm)
		  Implements: electric-type immunity to paralysis secondary effects
+ 020596: 0B 4A 0B 49 0B 78 58 21 4B 43 4C 32 9B 18 03 21 01 40 02 31 18 68 08 43 18 60 16 E0 -> 03 21 A8 F1 FC FB 83 1C 15 E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
		  Implements: max sleep turns 5 -> 4
= 0206A2: 4B 46 19 78 58 20 41 43 40 46 50 30 09 18 0A 4A F3 78 98 00 80 18 09 68 00 68 01 40 00 29 01 D0 00 F0 13 FD D8 -> 00 00 4B 46 19 78 58 20 48 43 41 46 0B 18 0A 49 F2 78 90 00 40 18 19 6D 00 68 01 40 00 29 01 D0 00 F0 13 FD D0
		  Implements: extension of changes at 01FF20
! 0207A4: ptr 0A 11 02 08 -> 8C 0F 02 08
		  Implements: 50% recoil effect
		  Relies on: changes at 020F78
! 02082C: (see 29disasm)
		  Implements: Mold Breaker+ (vs Inner Focus)
		  Note: decompilation mistake on my end? mold breaker mons would be unable to flinch foe (check once below is fixed)
		  GLITCH!: Flinching stopped working completely, some other change probably needed
+ 0208B8: (see 29disasm)
		  Implements: nothing?
! 020A20: (see 29disasm)
		  Implements: Grip Claw, Klutz (Grip Claw), wrapping moves duration 3-6 -> 5-6, battle messages for Infestation and Magma Storm
		  Note: check if wrap still works (check once below is fixed)
		  GLITCH!: Wrap stopped working completely, some other change probably needed
! 020AEC: (see 29disasm)
		  Implements: Modern Struggle
		  Relies on: changes at 020F78
		  GLITCH!: Struggle has 100% HP recoil, some other change probably needed
= 020B70, 020BF8, 1D968D: ptr D1 6B 1D 08 -> XX XX XX 08 (j0229DE)
= 020BB4, 020C3C: ptr 62 6C 1D 08 -> XX XX XX 08 (j0229EF)
		  Implements: need more info
		  Requires in future: script_229DE_J, script_229EF_J
= 020F00: (see 29disasm)
		  Implements: Smelling Salts effect now removes all status
		  Relies on: double-damage-on-status effect implementation
! 020F78: (see 29disasm) (last part of SetMoveEffect)
		  Implements: Magic Guard (move recoil)
		  GLITCH!: Rock Head stopped working completely/Magic Guard doesn't work, some other change probably needed
+ 021124: atk15_seteffectwithchance (see 30disasm)
		  Implements: Sheer Force (secondary effect removal)
+ 0212AC: Large part of atk19_tryfaintmon (see 31disasm)
		  Implements: Moxie
= 021640: atk1C_jumpifstatus (see 32disasm)
		  Implements: Makes room for expanded atk1D_jumpifstatus2
		  Requires in future: fn_20EFE_J
! 0216B8 -> 021684 (repoint): atk1D_jumpifstatus2 (+fn_20EFE_J) (see 33disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute
		  GLITCH!: doesn't do that, instead causes Substitute to not fail when Infiltrator mon has one already???
= 021730: atk1E_jumpifability (see 34disasm)
		  Implements: Leaf Guard, Flower Veil (vs status)
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
+ 021818: atk1F_jumpifsideaffecting (see 35disasm)
		  Implements: Infiltrator (vs Safeguard)
		  Note: incorrect message ("but it failed" vs "was protected by Safeguard"), fix later
+ 022FCE: 20 -> 80
  022FD0: 0D D0 -> 06 DA
  022FD4: 04 DC -> 0B DA
  022FE7: D0 -> DA
		  Implements: Correct stat animations for drastically/severely
= 02301C: atk48_playstatchangeanimation (+BattleScript_FlowerVeilProtects) (see 36disasm)
		  Implements: Mold Breaker+ (vs stat-reduction prevention abilities), Contrary, Big Pecks, Infiltrator (vs Mist), Flower Veil (vs stat reduction)
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Glitch: 0x68 (Mold Breaker) is instead 0x97, test mold breaker vs clear body
= 023366, 023BC0, 023BD6, 023BE0, 023BEC: 11 -> 13
  02337C: C4 33 02 08 A0 34 02 08 5C 35 02 08 80 35 02 08 98 35 02 08 C0 35 02 08 E4 35 02 08 8C 36 02 08 02 37 02 08 38 37 02 08 D8 37 02 08 CC 36 02 08 EC 36 02 08 1C 38 02 08 60 38 02 08 40 3A 02 08 28 3B 02 08 B4 3B 02 08 2D 4E 2E 4D 2B 78 58 27 -> CC 33 02 08 44 34 02 08 C0 34 02 08 DC 34 02 08 F8 34 02 08 14 35 02 08 34 35 02 08 E4 35 02 08 4C 36 02 08 02 37 02 08 38 37 02 08 D8 37 02 08 7A 36 02 08 96 36 02 08 AE 36 02 08 1C 38 02 08 60 38 02 08 40 3A 02 08 28 3B 02 08 B4 3B 02 08
  0233C4 -> 0233CC (repoint): Large part of atk49_moveend (see 37disasm)
  023B28: Another part of atk49_moveend (see 37disasm2)
		  Implements: Stench flinch chance, Klutz (choice item locking), Poison Touch, Choice Specs (locking), Choice Scarf (locking), non-hardcoded spread moves
		  Relies on: AbilityBattleEffects/ItemBattleEffects new cases, Choice Band effect ID change, gChosenActionByBattler changed to something else, CheckSwitchToSpreadMoveScript (j1588C, e16078), BattleScript_EffectSpreadMove (j158B0, e1609C), rest of moveend refactor
		  Notes: Inert call to ItemBattleEffects (arg 2)?
= 023E88: atk4B_returnatktoball (see 38disasm)
		  Implements: need more info
		  Required knowledge: j0203B960
		  Requires in future: extra fn j2058E0
! 023ED8: atk4C_getswitchedmondata (see 39disasm)
		  Implements: need more info
		  GLITCH!: always sends out the third pokemon?
+ 024EC0: 08 1C 21 30 00 78 02 28 5E D0 08 1C 22 30 00 78 02 28 59 D0 08 1C 20 30 00 78 1A 28 54 D0 -> 20 31 48 78 02 28 5F D0 88 78 02 28 5C D0 08 78 1A 28 59 D0 62 28 57 D0 00 00 00 00 00 00
		  Implements: Magic Guard (vs Spikes)
+ 025A0E: 05 -> 06 (+1 max digits for money)
= 025FE0: atk69_adjustsetdamage (see 40disasm)
		  Implements: modern Sturdy, Klutz (enduring (Focus) items), Mold Breaker+ (vs Sturdy), Focus Sash
		  Requires in future: ClearFocusBand (j168C88), SetFocusBand (j168C9C)
		  Notes: False Swipe appears to be removed, check; check that infiltrating set-damage moves hit through sub
= 02615C: atk6A_removeitem (see 41disasm)
		  Implements: Cheek Pouch
		  Relies on: CheckAndRunCheekPouch (j1C5FC, e1CDEC), BattleScript_CheekPouchHeals (j1C728)
		  Requires in future: PushScriptInstr (j207470)
		  Glitch?: .item is off by 20, items aren't removed???
= 027220: atk7A_jumpifnexttargetvalid (see 42disasm)
		  Implements: Telepathy
		  Relies on: GetAbilityUserOnSameSide
= 0274A8: atk7D_setrain (see 43disasm)
		  Implements: Damp Rock (manual rain), Klutz (Damp Rock manual rain)
		  Relies on: GetWeatherTurns, weather refactor
+ 0274FC: atk7E_setreflect (see 44disasm)
		  Implements: Light Clay (Reflect), Klutz (Light Clay on Reflect)
+ 027688: atk80_manipulatedamage (see 45disasm)
		  Implements: Magic Guard (blocks unknown effect), groundwork for Draining Kiss and modern High Jump Kick, others not known yet
		  Note: script_1D694E loaded but never used
= 027830: UproarWakeUpCheck (see 46disasm)
		  Implements: Makes room for expanded atk84_jumpifcantmakeasleep
= 0278CC -> 0278A8 (repoint): atk84_jumpifcantmakeasleep (see 47disasm)
		  Implements: Leaf Guard (sleep), Sweet Veil, Flower Veil (sleep)
		  Relies on: GetAbilityUserOnSameSide
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Glitch?: Leaf Guard doesn't prevent Rest
! 027AE4: atk87_stockpiletohpheal (see 48disasm)
		  Implements: Makes room for expanded atk88_negativedamage
! 027BC8 -> 027B78 (repoint): atk88_negativedamage (see 49disasm)
		  Implements: Magic Guard (vs Liquid Ooze), Big Root (draining moves), Klutz (Big Root on draining moves)
		  Note: something about the above two causes a crash, figure out later
= 027BFC: ChangeStatBuffs (+CheckLeafGuardAndFlowerVeil) (see 50disasm)
		  Implements: Simple, Mold Breaker+ (vs stat-reduction prevention abilities), Contrary, Big Pecks, Infiltrator (vs Mist), "drastically/severely"
		  Relies on: BattleScript_FlowerVeilProtects (j22A00, e23200)
		  Glitch?: Flower Veil msg called at wrong time
+ 028190: atk8C_confuseifrepeatingattackends (see 51disasm)
		  Implements: Makes room for expanded atk8D_setmultihitcounter
+ 0281D0 -> 0281C8 (repoint): atk8D_setmultihitcounter (see 52disasm)
		  Implements: Skill Link
+ 02883C: atk92_setlightscreen (see 53disasm)
		  Implements: Light Clay (Light Screen), Klutz (Light Clay on Light Screen)
= 028908: atk93_tryKO (see 54disasm)
		  Implements: Klutz (enduring (Focus) items vs OHKO moves), Mold Breaker+ (vs Sturdy for OHKO moves), Focus Sash (OHKO moves), Sheer Cold lower accuracy from non-Ice-types
		  Requires in future: ClearFocusBand (j168C88), SetFocusBand (j168C9C)
		  Glitch?: Subtracting 0x10 instead of 10 means Sheer Cold is 14% accuracy when used by non-Ice-types, should be 20% (check online, maybe wrong)
= 028C98: atk95_setsandstorm (see 55disasm)
		  Implements: Smooth Rock (manual sand), Klutz (Smooth Rock manual sand)
		  Relies on: GetWeatherTurns, weather refactor
= 028CF0: atk96_weatherdamage (see 56disasm)
		  Implements: Snow Cloak (hail immunity), Dry Skin (sun HP loss), Solar Power (HP loss), Magic Guard (vs weather damage), Ice Body (hail immunity), Overcoat (vs weather), Sand Rush (sand immunity), Sand Force (sand immunity), Slush Rush (hail immunity), Safety Goggles (vs weather), Klutz (Safety Goggles vs weather)
		  Relies on: weather refactor
		  Note: Test heavily, incomprehensible code
+ 028E90: atk97_tryinfatuating (see 57disasm)
		  Implements: refactors to include extra param (if set to 1, skip actually infatuating) - makes it usable as a JumpIfCantInfatuate()
		  Relies on: battlescripts change to accomodate above
+ 02975C: B1 -> FF (allows Metronome to select moves up to 0x1FF - Note: there are even more moves than that)
+ 0297E1: 01 -> 03 (allows Metronome to select from up to 0x3FF moves - but only up to 0x1FF can be selected, see above)
+ 029B40: 02 32 -> 04 22
  029B58: CB 7A -> 05 23 (Disable always lasts 4 turns)
+ 029C79: 32 -> 22
  029C90: 8B 7B -> 04 23 (Encore always lasts 3 turns)
= 02A240: 60 -> 30 (part of weather refactor - sun)
= 02A3C8 -> ?????? (repoint; j168F08): atkAA_setdestinybond (see 252disasm)
		  Implements: refactors to include extra param (goto the address if it fails); adds a counter for consecutive uses that works similar to, but independent from, the Protect one
		  Required knowledge: gDestinyBondUses (j0203B900)
		  Relies on: battlescripts change to accomodate above
		  Note: this is incorrect behavior, it should just always fail when used consecutively
+ 02A566: 8E 1C -> 04 26 (Spite always removes 4 PP)
= 02B2D4: atkBB_setsunny (see 58disasm)
		  Implements: Heat Rock (manual sun), Klutz (Heat Rock manual sun)
		  Relies on: GetWeatherTurns, weather refactor
= 02B5F2: 60 -> 30 (part of weather refactor - sun)
+ 02B678: atkC1_hiddenpowercalc (see 59disasm)
		  Implements: Hidden Power = 60 power, Hidden Power Fairy (!)
= 02B774: atkC2_selectfirstvalidtarget (see 60disasm)
		  Implements: Telepathy
		  Relies on: GetAbilityUserOnSameSide
= 02BC74: atkC8_sethail (see 61disasm)
		  Implements: Icy Rock (manual hail), Klutz (Icy Rock manual hail)
		  Relies on: GetWeatherTurns, weather refactor
+ 02BFC4: Part of atkD0_settaunt (see 62disasm)
		  Implements: Oblivious Taunt immunity, Taunt 2->3 turns
+ 02C670 -> EB8130 (repoint): atkD9_scaledamagebyhealthratio (see 253disasm)
		  Implements: refactors to include extra param for the mon whose hp it's scaled for (presumably for Wring Out, etc.); also appears to set the groundwork for this formula to work right with a base power of 0 (always 0 damage) for some reason
		  Relies on: battlescripts change to accomodate above
+ 02CCC0: atkE2_switchoutabilities (see 63disasm)
		  Implements: Regenerator
+ 02CD3C: atkE3_jumpifhasnohp (see 64disasm)
		  Implements: Makes room for expanded atkE2_switchoutabilities
+ 02CE48: atkE5_pickup (see 65disasm)
		  Implements: Honey Gather, modern pickup tables
+ 02CFD8: atkE8_settypebasedhalvers (+ uncalled mysteryfunc) (see 66disasm)
		  Implements: Makes room for mysteryfunc
= 02D0D0: 07 -> 03
  02D0EC: 18 -> 0C
  02D100: 60 -> 30
  02D114: 80 -> C0 (part of weather refactor)
= 02D500, 02D6A0, 02D71C: 68 3D 02 02 -> 00 FE 03 02 (see 67disasm)
		  Implements: Need more info
		  Relies on: changes at 016460
= 02D508: Part of atkEF_handleballthrow (+ add part at A23260_J) (see 67disasm)
		  Implements: Quick Ball (gen 6), Dusk Ball (gen 6), Park Ball, Heal Ball (catch rate), Cherish Ball, Moon Ball, Friend Ball, Heavy Ball, Level Ball, Love Ball, Lure Ball (gen 6), Fast Ball, ensures ball thrown in Safari Zone is Safari Ball
		  Required knowledge: gLastUsedItemType (j0203FE00), j02023FE0, j02023FF8, j0202429C, j02026D6C, j03005542
		  Relies on: 02D500, etc
		  Note: Fast Ball has manual table (A24300), different for base patch and P/D
		  Note: Check again - Heal Ball currently has secondaryId of 0, making it never work
		  Glitch?: Love Ball is boosted if pkmn are different genders, but "genderless" is counted as a third gender
		  Glitch?: Level Ball might check the level of the second pkmn in player's party
		  Glitch?: Cherish Ball uses the Moon Ball formula (not relevant since it should be unobtainable)
= 02D636: 19 49 -> AF 46
  02D698: E4 3B 02 02 -> 54 AB EE 08 (jumps (mov) to fn at EEAB54, then back; see 67disasm)
  02D764: 28 88 -> AF 46
  02D7B8: 68 3D 02 02 -> 30 AB EE 08 (jumps (mov) to fn at EEAB30, then back; see 67disasm)
		  Implements: critical capture
		  Relies on: 02D500, etc
		  Required knowledge: gLastUsedItemType (j0203FE00), gCritCapture (j0203FE04)
! 02EA10: HandleInputChooseMove (see 68disasm)
		  Implements: Removes the "switch which?" text when moving moves in battle with SELECT
= 02EF58: HandleMoveSwitching (see 69disasm)
		  Implements: Need more info
		  Note: merging changes from english and changes from pd is necessary - return to this later
= 030830: MoveSelectionDisplayMoveNames (see 70disasm)
		  Implements: Need more info (possibly displays the type icons in the info box)
		  Required knowledge: j02020024, j0203BF30, j0203BF40, j0203BF70, j0203D300, j0203D340, j0203D380, j0203D480
		  Requires in future: fn_1833C0_J
! 0308B8: A7 F0 80 FF -> 00 00 00 00
		  Implements: Removes "PP" for battle move summary (replaced by functionality in 030830); in JP, also makes "Move Type/" -> "Type/", but that's already true
! 030924: A7 F0 4A FF -> 00 00 00 00
		  Implements: Removes PP numbers for battle move summary (replaced by functionality in 030830)
= 030990: 09 1A -> 09 18
  0309A0: A7 F0 0C FF -> 00 00 00 00
		  Implements: Removes "Type/" + type names for battle move summary (replaced by functionality in 030830)
		  Relies on: typenamelength
! 0309CC: MoveSelectionCreateCursorAt (see 71disasm)
		  Implements: Removes move selection cursor (replaced by functionality in 030830)
! 030A14: MoveSelectionDestroyCursorAt (see 71disasm)
		  Implements: Removes move selection cursor (replaced by functionality in 030830)
= 038744: OpponentHandleChoosePokemon (see 72disasm)
		  Implements: New level of smart AI for switching choice (prioritizes mon with Trick Room if team is slow, prioritizes best Trick Room attacker during Trick Room, prioritizes weather setter when weather runs out, prioritizes mon with best type matchup)
		  Relies on: new AI value
		  Required knowledge: j020385E2, gWasMonShown (j0203B964), j0203BFF4
		  Requires in future: GetSideParty (j205D8A), GetFirstAllowableSwitchin (j205D96), GetBestTrickRoomAttacker (j2060FC), GetAvailableWeatherSetter (j206164), ChooseBestSwitchinNewAI (j2061DC), GetMatchupScore (j206292), ShouldUseTrickRoom (j206334), IsTeamSlow (j2063A4), CanUseNewAI (j20649C), GetBestMatchupScore (j2066CC), GetTypeMatchup (j252248)
+ 03937C: FindMonThatAbsorbsOpponentsMove (see 73disasm)
		  Implements: AI understands new absorbing abilities (Lightning Rod, Motor Drive, Dry Skin, Storm Drain, Sap Sipper)
= 039A80: ShouldSwitch (see 74disasm)
		  Implements: New level of smart AI for when to switch (switches if: has Regenerator, locked into resisted move, cursed, yawned, has a good Trick Room attacker under Trick Room, weather setter is in battle when weather runs out, weather setter isn't in battle when weather runs out, has a mon that's immune when existing mon might get double-targetted, or has a good stallmon under good stall conditions), locks switching for better type matchups behind the new level of smart AI
		  Relies on: GetSpeedStat (j1456A, e14D4A), new AI value
		  Required knowledge: gBackupMonData (j0203D48), j0203B960, j0203B965
		  Requires in future: ShouldSwitchIfMightBeDoubleTargeted (j205058), CopyMonToBattleMon (j205B0C), GetMonThatCanWithstandBiggestAttack (j205C80), GetGoodStallMon (j205CF6), GetSideParty (j205D8A), GetFirstAllowableSwitchin (j205D96), CanDoSevereDamage (j205E14), IsMonFasterThan (j205EE8), ShouldSwitchIfTrickRoom (j205F48), ShouldSwitchIfWeatherTeam (j205FDE), GetAITarget (j2060C0), GetBestTrickRoomAttacker (j2060FC), GetAvailableWeatherSetter (j206164), GetSlowMonWithLowHP (j20621C), IsMoveSuperEffective (j206418), CanUseNewAI (j20649C), ShouldSwitchIfStallMon (j2064C6), HasHealingMove (j2065CC), HasDamagingStatusThatWorks (j206600), GetBestMatchupScore (j2066CC), ShouldSwitch_NewAI (j251E40), ShouldSwitchIfLockedMoveOrRegenerator (j251E8C), ShouldSwitchIfCurseOrYawn (j251FD0)
		  Glitch?: (ShouldSwitchIfWeatherTeam) accidentally checks if it can KO the AI's left slot instead of the player's right
		  Glitch?: (ShouldSwitchIfMightBeDoubleTargeted) checks ITEM_FOCUS_SASH in GetHoldEffectParam, not GetHoldEffect
		  Glitch?: (GetAITarget) in doubles with both mons alive, it does checks on the AI's right slot instead of choosing a random player slot
		  Glitch?: in general, uses raw stats when I assume they meant base stats
= 03A4E8: Part of ShouldUseItem (see 75disasm)
		  Implements: AI use of X Sp. Def and X Evasion
		  Relies on: new table entries for gItemEffectTable
= 03DD98: CreateMonWithNature (see 76disasm) - more accurately now CreateMonWithRandomNature
		  Implements: Synchronize overworld effect, Cute Charm overworld effect, (item72), need more info (something to do with personality values)
		  Required knowledge: var_403E
		  Requires in future: GetNature_CheckSynchronize (j251B30), fn_251B58_J, fn_251BA4_J, CuteCharmOverworldEffect (j251CB6), fn_251CF4_J, fn_3915EC_J
! 03E564, 03E73C, 125240: 2F 01 -> FC 00 (PDONLY, changes shedinja index to #252 (empty slot))
= 03E192: Part of GiveBoxMonInitialMoveset (see 77disasm)
		  Implements: Part of gLevelUpLearnsets refactor
= 03EAFE, 03EB2E: 40 -> 80
  03EB52: 40 00 40 18 01 88 0D 48 08 40 -> 80 00 40 18 40 88 00 00 00 00
		  Implements: Part of gLevelUpLearnsets refactor
= 03ECEC: CalculateBaseDamage (see 78disasm)
		  Implements: modern Plus/Minus, Rivalry, Heatproof (fire moves), Dry Skin (fire moves), Iron Fist, Solar Power (boost), Normalize (boost), Technician, Klutz (damage-boosting items), Mold Breaker (damage-reduction abilities, Unaware), Unaware (atk/def/spa/spd), Slow Start (Attack reduction), Reckless, Flower Gift (stat boosts), Sheer Force (boost), Defeatist, Friend Guard, Multiscale, Toxic Boost, Flare Boost, Analytic, Infiltrator (dual screens), Sand Force, Aura Break, Tough Claws, Mega Launcher, Grass Pelt, Aerilate (boost), Dark Aura, Fur Coat, Fairy Aura, Pixilate (boost), Refrigerate (boost), Strong Jaw, Galvanize (boost), "Polkadot Bow", Gems (gen 5 boost), Choice Specs (boost), Muscle Band, Wise Glasses, Assault Vest (boost), Eviolite, Life Orb (boost), Wonder Room (effect), sandstorm Rock SpDef boost, modern spread reduction
		  Relies on: weather refactor, GetAbilityUserOnSameSide, HasItemWithTypeEffect
		  Requires in future: AteAbilityConversionTable (j168CB4)
		  Note: is that how spread reduction works? (only reduced if max targets exist)
= 03FD64: Part of GetBoxMonData (see 79disasm)
		  Implements: nothing???
		  Requires in future: fn_206776_J, fn_206784_J
= 0400B6: 40 05 04 -> 80 05 44
  0400BE: 5C -> 0B
		  Implements: part of BoxPokemon refactor (extra bit for pokeball)
= 040855: F8 -> FC
  04085A: 0F -> 1F
  04085E: C9 -> 89
  040862: 79 -> 7D
		  Implements: part of BoxPokemon refactor
= 040B15: B5 A5 F1 B5 F9 01 BC -> 4B 9F 46 E0 3A A2 08 (jumps (mov) to fn at A23AE0, then back; see 80disasm)
		  Implements: Heal Ball
		  Required knowledge: gLastUsedItemType (j0203FE00)
= 040B90: SendMonToPC (see 81disasm)
		  Implements: Part of CompressedBoxPokemon refactor, allowing 14->22 boxes
		  Requires in future: CopyMonToBox (j3C5FA0)
= 040FA0: IsPokemonStorageFull (see 82disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 0415D0: B0 16 04 08 44 17 04 08 -> 6C 16 04 08 98 16 04 08
  0415F6: 29 48 29 -> 42 48 42
  04160C: 25 -> 3E
  041622: 21 -> 3A
  041636: 1B 49 1C -> 34 49 35
  041668: Part of PokemonUseItemEffects (+fn_41714_E) (see 83disasm)
		  Implements: X Sp. Def, X Evasion (effects)
		  Relies on: new table entries for gItemEffectTable
+ 041C46: Part of PokemonUseItemEffects (see 84disasm)
		  Implements: Revive case 0xFC - restores 1/4 HP (new item?)
		  Note: needs testing when item itself implemented
= 042D50-042DA4: Completely removed (replaced with fn_41714_E)
= 042DA4: sub_8042DA4 (see 85disasm)
		  Implements: Messages for X Sp. Def and X Evasion
		  Relies on: fn_41714_E
= 042EC4: GetEvolutionTargetSpecies (see 86disasm)
		  Implements: new evolution methods (day/night happiness for FRLG, single-gender levelup, location-based, specific move, specific move type, level during day/night, level during day/night with item, specific mon in party, specific type in party, single-gender stone, trade for specific mon, overworld weather), allows species 0 to have 20 branched evolutions (??? need more info)
		  Optional knowledge: e02031DA4
		  Required knowledge: j03005540
+ 043214: CD 24 64 -> FF 24 A4 (410 -> 1020 maximum pkmn species?)
+ 043304: SpeciesToCryId (see 87disasm)
		  Implements: Allows forbiddenmons to get individual cries
+ 043890: MonGainEVs (see 88disasm)
		  Implements: Power items, EV per-stat limit 255->252
= 043A70: CheckPartyPokerus (see 89disasm)
		  Implements: need more info (reads only last bit of MON_DATA_POKERUS instead of last 4 bits)
= 043C84: GetMoveRelearnerMoves (see 90disasm)
		  Implements: max level-up moves 20 -> 24, need more info (gLevelUpLearnsets -> *j02021D10)
		  Required knowledge: j02021D10
= 043DEE: 0E 48 84 46 -> 00 00 00 00
  043E02: 1A 88 60 46 10 40 08 80 02 -> 58 88 00 00 00 00 08 80 04
		  Implements: Part of gLevelUpLearnsets refactor
= 043E2C: GetNumberOfRelearnableMoves (see 91disasm)
		  Implements: need more info (gLevelUpLearnsets -> *j02021D10)
		  Required knowledge: j02021D10
+ 043FA6: 97 2C 04 D9 -> 00 00 04 E0
		  Implements: species is always valid even before natdex
! 044034: 62 40 04 08 5C 40 04 08 62 40 04 08 62 40 04 08 5C 40 04 08 62 40 04 08 62 40 04 08 54 40 04 08 -> 54 40 04 08 5C 40 04 08 D8 32 85 08 D0 32 85 08 30 8F 8D 08 E0 64 86 08 58 00 74 08 A0 0F 8C 08 (changes table to point to other scripts, see 92disasm)
		  Implements: PDONLY, more trainer music
		  Requires in future: all the pointed-to scripts
+ 04442C: 99 18 88 89 C9 89 88 42 -> 00 49 08 47 D1 EA E2 09 (jumps (bx) to extra fn at 1E2EAD0, then back (jE2EAD0, see 93disasm))
		  Implements: Compound Eyes overworld effect
+ 044EC8: Random (see 94disasm)
		  Implements: New random function (unclear why)
+ 04555C: StorePokemonInEmptyDaycareSlot (see 95disasm)
		  Implements: Part of BuildEggMoveset changes
		  Requires in future: fn_4539C_J (e45DD8)
+ 045704: 09 06 09 0E -> 00 F0 7C FB
		  Implements: Part of BuildEggMoveset changes
		  Requires in future: fn_453C4_J (e45E00)
+ 045AC0: InheritIVs (see 96disasm)
		  Implements: Power item IV inheritance, Destiny Knot IV inheritance
		  Glitch: Power items are checked twice for mother and never for father
		  Note: If IV checking exists, test this
+ 045CA6: 09 -> 31
		  Implements: 10 -> 50 max egg moves per mon
+ 045CC4: 71 04 -> DE 07
		  Implements: increased egg move list size
+ 045CD0: BuildEggMoveset (+fn_4539C_J/fn_45DD8, fn_453C4_J/fn_45E00) (see 97disasm)
		  Implements: either parent passing down egg moves; removes tm/hm inheritance
+ 045FA0: AlterEggSpeciesWithIncenseItem (see 98disasm)
		  Implements: No actual change, but allows new incenses to be added easily (table at j455AE/e45FEA)
+ 046000: DetermineEggSpeciesAndParentSlots (see 99disasm)
		  Implements: Allows NidoranM+ and Volbeat to have female offspring when breeding with Ditto
! 046024, 0460A6: 84 -> B7 (PDONLY, changes ditto index to #183)
= 046112: FF F7 DD FD -> ?? ?? ?? ?? (changes call to BuildEggMoveset to instead call fn at j2072F0 (this calls BuildEggMoveset inside it anyway), see 101disasm)
		  Implements: modern ability inheritance
= ??????: 84 -> B7 (PDONLY, changes ditto index to #183)
+ 046120: 2D 21 FA F7 2B F9 09 48 -> 00 49 08 47 01 89 EE 08 (jumps (bx) to fn at EE8900, then back; see 101disasm)
		  Implements: modern pokeball inheritance
		  GLITCH!: doesn't seem to actually work?
! 046216: 14 1C 2D 04 2D 0C FE F7 54 FE -> 00 48 00 47 01 EA E2 09 00 00 (jumps (bx) to extra fn at 1E2EA00, then back (jE2EA00, see 102disasm))
		  Implements: Everstone nature inheritance
		  GLITCH!: Crashes upon receiving egg; maybe a problem with recompilation
= 04623E: 05 22 20 23 F7 F7 07 -> 01 22 20 23 ?? ?? ?? ?? (instead of calling CreateMon(..., 5, ...), calls CreateMonWithNature_New(..., 1, ...); see 102disasm)
		  Implements: egg hatch level 5 -> 1, (item72), need more info (something to do with personality values)
		  Requires in future: fn_251B58_J, fn_251B8C_J, fn_251BA4_J, CreateMonWithNature_New (j251D2A)
= 046390: 01 38 00 90 -> ?? ?? ?? ?? (calls new fn at j251AE0, see 103disasm)
		  Implements: Magma Armor/Flame Body overworld effect
		  Glitch?: Magma Armor doesn't work
+ 046CBE: 05 -> 01 (egg hatch level 5 -> 1)
= 046D46: 30 1C 29 1C -> ?? ?? ?? ?? (calls new fn at j207344, see 104disasm)
		  Implements: needed for modern pokeball inheritance; something involving alt ability
+ 046DDA: F9 F7 CF FA -> 00 00 00 00 (needed for modern pokeball inheritance)
= ~048440: Unclear how to translate this to English rom (minidisasm12)
		  Implements: Moves in-battle level/gender display for opponents right by two characters (one in Japanese) to make room for name
= ~0496C0: Unclear how to translate this to English rom (minidisasm13pt2)
		  Implements: name length in the battle boxes (the ones with the HP in them)
! 049718: 1D 28 01 D0 20 28 09 D1 -> 0C E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 in battle)
= ?????? (j48EBA): Unclear how to translate this to English rom (minidisasm13pt3)
		  Implements: Moves name in battle boxes for player mons left by two characters (one in Japanese) to make room
+ 04A2F0: CalcNewBarValue (see 105disasm)
		  Implements: HP and EXP bars go twice as fast
		  Note: Also makes the function not use its toAdd parameter, amount to add is calculated inside the function
+ 04B5AA: 0B -> 1F (max pokeball types 12 -> 32)
+ 04BF24: 0B 2C 01 DC -> 00 00 00 00
		  Implements: Certain gfx aren't loaded for Dive Ball and everything starting at Luxury Ball; this is now fully independent of number of ball types
+ 04C058: SetSaveBlocksPointers (see 106disasm)
		  Implements: nothing, but obfuscates the functionality a bit
+ 04C320: LoadPlayerBag (see 107disasm)
		  Implements: extra bag space
+ 04C440: SavePlayerBag (see 108disasm)
		  Implements: extra bag space
= 04EF5E, 06BE72, 09B4EC, 0BD824, 0BFA7C, 0CC8F8, 0D7630, 0D7ED6, 0D84F6, 0E4DD2, 0E5116, 0E5130, 0E5164, 0E51A2, 0E523E, 10D9B2, 1140B2, 11C590, 11C6C2, 12564C, 1258F4, 1259E2, 125B7E, 125C92, 125FB0, 126036, 1260E8, 1261BC, 12624A, 126798, 12682E, 126E0A, 131DE0: 0D -> 20 (movenamelength)
+ ?????? (j4E8A2): Unclear how to translate this to English rom (minidisasm15)
		  Implements: Removes gender symbol somewhere, seems to be removed in english already
! 054A00: 06 -> 04 (PDONLY, moves starting position in new game two tiles north)
+ 054A68: 39 4E 31 68 39 48 80 46 -> 00 48 00 47 51 DF E2 09 (jumps (bx) to extra fn at 1E2DF50, then back (jE2DF50, see 109disasm))
		  Implements: on save-file deletion, clears pd-only save data too
! 055238: 00 04 09 04 03 4A 80 0B 80 18 00 68 89 0B 09 18 -> 00 04 09 04 03 4A 89 0B 80 0B 80 18 00 68 09 18 (does nothing?) (BREAKS ADVANCEMAP!!!)
+ 05550C: sub_805550C (see 110disasm)
		  Implements: no idea what this does (some kind of warp, already prevented in map group 1, is now also prevented in map group 0x2501)
+ 055D6C: sub_8055D6C (see 111disasm)
		  Implements: possibly allows music to be dynamically changed
= 055F88: music_something (see 112disasm)
		  Implements: Set 0203C00D to 0 when this function is run (???)
+ 059F34: sub_8059F34 (see 113disasm)
		  Implements: Makes room for changes at 059F4C
+ 059F4C: sub_8059F4C (see 113disasm)
		  Implements: Not completely sure, but possibly implements RSE's MetatileBehavior_IsLongGrass() for FRLG
= 05A9BC: 01 28 25 D0 01 28 02 DC 00 28 51 D0 -> 03 28 7E D8 00 4B 18 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j183100, see 114disasm))
		  Implements: Unsure, but DrawMetatile(1, ...) and DrawMetatile(2, ...) swapped functionality and there's a new DrawMetatile(3, ...) that uses all available resources at once
= 05B3E0: player_step (see 115disasm)
		  Implements: Need more info, something about semi-forced steps
		  Required knowledge: j02030C00D
		  Requires in future: SoftForceDirection (j2074A0)
= 05B4D4: MovePlayerAvatarUsingKeypadInput (see 116disasm)
		  Implements: Need more info, extra requirement for bike
		  Required knowledge: j02030C00D
= 05B9D4: PlayerNotOnBikeMoving (see 117disasm)
		  Implements: running always-on toggle, something else
		  Required knowledge: j02030C00D
= 05BB5C: 30 1C 01 A9 22 1C 07 F0 -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222A70, see 118disasm))
		  Implements: forced movement for metatiles 0xB0-0xB5
+ 05BCEC: sub_805BCEC (see 119disasm)
		  Implements: Strength boulders able to be moved onto metatile 0x1F
= 05C104: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222AE0, see 120disasm))
		  Implements: player walk animations for metatiles 0xB0-0xB5
= 05C11C: PlayerGoSpeed2 (see 121disasm)
		  Implements: player fast-walk animations for metatiles 0xB0-0xB5
		  Requires in future: GetWalkFastMovementAction_New (j2074F0)
= 05C14C: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222CD0, see 120disasm mostly))
		  Implements: player fastest-walk animations for metatiles 0xB0-0xB5
= 05C164: PlayerRun (see 121disasm mostly)
		  Implements: player run animations for metatiles 0xB0-0xB5
		  Requires in future: GetPlayerRunMovementAction_New (j207524)
= 05C17C: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222BA0, see 120disasm mostly))
		  Implements: player ??? animations for metatiles 0xB0-0xB5 (seems to be FRLG-exclusive)
= 05C438: PlayCollisionSoundIfNotFacingWarp (see 122disasm)
		  Implements: Need more info
		  Required knowledge: j02030C00D
+ 05F2E0: 97 -> FF (152 -> 255 max object graphics ids)
= 067D44: F1 F7 0A FF -> ?? ?? ?? ?? (changes call to sub_8059B5C to instead call fn at j183380, see 123disasm)
		  Implements: Not certain, possibly IsSandOrDeepSand; adds metatiles 0xE0 and 0xE2 to whatever check this is
= 06CAC8: sub_806CAC8 (see 124disasm)
		  Implements: multi-registration SELECT menu, something else (possibly two-speed bike)
		  Relies on: CompressedBoxPokemon refactor
		  Required knowledge: j0203C00D, j0203CB54, j0203D2E0, j0203D2E1, j0203D2E2, gRegisteredItemListSize (j0203D2E4), j0203D2EC, j0203D2ED, j0203D2EE, j0203D2F9, j0203D2FA, j0203D2FF
		  Requires in future: GetRegisteredItemList, UnregisterItem, fn_183A90_J, fn_EE5000, fn_EE51C0, fn_EE540C, fn_EE543E, fn_EE54D6, fn_EE5510, CompactRegisteredItems (jEE5528), fn_EE561C, fn_EE5654, fn_EE56BC
= 06D1F0: GetInteractedMetatileScript (see 125disasm)
		  Implements: scripts for metatiles 0xE3 and 0xE4, makes it easier to add more scripted metatiles
		  Requires in future: script_68277E_J, script_682787_J
+ 06DE28: sub_806DE28 (see 126disasm)
		  Implements: Strength boulders disappear when moved onto metatile 0x1F
+ 06DE70: sub_806DE70 (see 127disasm)
		  Implements: Unclear, metatile 0x1F behavior brought closer to that of MB_ICE
+ 06E5C0: GetFlagPointer (see 128disasm)
		  Implements: flags above 0xF000
= 06F01C: InitStartMenuStep (+ add parts at E9D3D4_J, E9D48C_J, E9D4E2_J) (see 129disasm)
		  Implements: Need more info (something about START menu)
		  Required knowledge: j0203CB27, j0203D2FF, j0203D380
		  Requires in future: fn_E9D53C_J, fn_E9D586_J
= 06F280: ProcessMenuInput (+ add part at E9D4A2_J) (see 130disasm)
		  Implements: possibly retools START menu into 3x2 grid
		  Required knowledge: j0203CB27, j0203D380
		  Requires in future: fn_E9D53C_J, fn_E9D586_J
! 06FEA0: HideStartMenuWindow (see 131disasm)
		  Implements: changes menu close sfx from SE_SELECT to (sound_0x200)
= 06FFBC: sub_806FFBC (see 132disasm)
		  Implements: Need more info
		  Relies on: Possible metatileAttributes refactor
		  Required knowledge: j02037B14
		  Requires in future: fn_939620_J, fn_9396A8_J, fn_939728_J
! 07004E: 73 F1 AB FD -> 00 00 00 00
		  Implements: Removes tileset 1 animations (replaced by functionality in 06FFBC)
! 07008A: 73 F1 8D FD -> 00 00 00 00
		  Implements: Removes tileset 2 animations (replaced by functionality in 06FFBC)
= 07049A: 0C 48 03 60 61 7A 03 20 08 40 -> 01 48 87 46 C0 46 XX XX XX 08 (jumps (mov) to fn at XXXXXX, then back; (jE9D320, see 133disasm))
		  Implements: Something palette-related
		  Required knowledge: j0203D2FF
! 070682: 73 F1 6F FA -> 00 00 00 00
		  Implements: Removes something palette-related (replaced by functionality in 07049A)
! 078A6E: F7 F7 BD FC -> 00 00 00 00
		  Implements: never fades in the green palette on title screen (still does if intro skipped), not yet clear what this means
= 078BFC: 00 23 C1 5E 06 48 -> 07 49 08 47 08 BC
  078C1C: 8B 0A 00 00 -> XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j385250, see 134disasm))
		  Implements: almost certainly title screen silhouette fading
		  Required knowledge: j020370C0
! 0791EE: 06 -> FC (PDONLY, title screen cry charizard -> (species252))
+ 079282, 0EC852: C0 0F -> 01 20 (sound will always become stereo when game loaded from title screen)
= 0793DA: Part of sub_80792C8 (+ add part at 2075E0_J) (see 135disasm)
		  Implements: Need more info (title screen animation related)
		  Required knowledge: j0203712C
		  Requires in future: fn_2075E0_J
+ 07A294: ApplyGammaShift (+ add part at F1C000, +table_F10000) (see 136disasm)
		  Implements: RSE Drought weather capability
! 07ABCC: 80 -> 98 (shifts weather palettes over by +0x30, don't touch yet)
+ 07AC14: LoadDroughtWeatherPalettes (see 137disasm)
		  Implements: RSE Drought weather capability, note it's a bit different than actual RSE code
+ 07FC5C: BattleSetup_GetTerrainId (+table_7AF530) (see 138disasm)
		  Implements: various new metatiles' battle terrain, plus makes it easier to add more
! 080008: 5A -> 53 (PDONLY, "Champion" battle intro happens for trainer class 0x5A -> 0x53)
= 080650: 0D -> 7F
  08066C: 70 06 08 08 -> XX XX XX 08 (expands the possible trainer encounter musics from 14 to 128; new switch table at jE2E040 (currently only 3/14 in FR and 16/128 in PD are used); see minidisasm16)
		  Relies on: new music actually inserted
= 081C0A: 0E 49 38 7E 00 07 80 0E 04 38 -> 01 49 08 47 00 00 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE300F0, see 139disasm))
		  Implements: Need more info
		  Required knowledge: j03005548
= 0829FC: sub_80829FC (see 140disasm)
		  Implements: Need more info (something to do with personality values)
		  Relies on: CreateMonWithNature changed params ("CreateMonWithoutNature")
		  Requires in future: fn_251B58_J, fn_251BA4_J, fn_251BBA_J, fn_251BE4_J, ForceUnownFormOnPersonality (j251C92)
+ 0830B8: UpdateRepelCounter (see 141disasm)
		  Implements: new repel system
		  Relies on: VAR_REPEL_STEP_COUNT refactor (repel type is stored in high byte of VAR_REPEL_STEP_COUNT)
		  Requires in future: EventScript_RepelWoreOffUseAnother (e1E2FF90, jE2FF90), fn_1E2FFE0
+ 083119, 0A19A5: 04 -> 06 (part of VAR_REPEL_STEP_COUNT refactor)
= 0832EC: 00 06 00 0E -> ?? ?? ?? ?? (calls new fn at j251AC0, see 142disasm)
		  Implements: Unclear, possibly makes water tiles only cause encounters when player is surfing (is there a possibility of standing on water tiles otherwise?)
+ 088B9E: C0 0F -> 01 20 (sound will always become stereo no matter what options menu says)
= 089088: sub_8089088 (see 143disasm)
		  Implements: When backing out of (trainer card?), implement possibility that it returns to some mysteryfunc enormous menu instead of the START menu (need A LOT more info)
		  Required knowledge: j0203D51F, (needed for fn_E9EA00_J: j0203CB1C, j0203CB24, j0203CB26, j0203CB28, j0203D100, j0203D200, j0203D500, j0203D502, j0203D504, j0203D50A, j0203D51E, j0203D51F, j0203D520, j0203D528, j0203D52A, gMysteryFuncWindows (j0203D530), j0203D550, j0203D552, j0203D560, j0203D561, j0203D562, j0203D570, j0203D571, gMysteryFuncUnknownListSize (j0203D580), gMysteryFuncUnknownList (j0203D582), j0203D680, j0203D681, j0203D682, j0203D690)
		  Requires in future: fn_E9E980_J, fn_E9EA00_J (and all subfunctions: fn_168900_J, fn_42BE70_J, fn_E9EA40_J, fn_E9EAA4_J, fn_E9EB36_J, fn_E9EBB0_J, fn_E9EF98_J, fn_E9F056_J, fn_E9F204_J, fn_E9F272_J, fn_E9F398_J, fn_E9F478_J, fn_E9F6F4_J, fn_E9F8B0_J, fn_E9F92C_J, fn_E9F966_J, fn_E9FA12_J, fn_E9FC04_J, fn_E9FC28_J, fn_E9FE26_J, fn_E9FE5A_J, AddElementToUnknownList (jE9FE82), SortUnknownListNumerically (jE9FEA8), fn_E9FED4_J, fn_E9FFDC_J, fn_EA00EA_J, fn_EA0110_J, fn_EA0158_J, fn_EA0540_J, fn_EA05F4_J, fn_EA06C6_J, fn_EA06E8_J, fn_EA0B60_J)
= 08A006: 06 -> 07
  08A028: 7A -> 72
  08A090: 76 -> 6E
		  Implements: extra money digit on trainer card display
		  Note: unclear if this is the correct way to translate to english rom (see minidisasm17)
		  Note: this is wrong, move it left one tile
! 08B92A: 08 -> 02 (PDONLY, changes trainer card trainer image from palette slot 8 to palette slot 2)
= 08BA06, 08C808, 08C82C, 08C844, 08CC26, 08CC60, 08D476, 08D4B2, 08DED4, 090E12, 09170E, 0935D2: 0D -> 16 (part of CompressedBoxPokemon refactor)
= 08BA18: GetBoxMonDataFromAnyBox (see 144disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), SetBoxMonDataToCompressedBoxMonData (j3C5DC2), GetCompressedBoxMonData (j3C5DDE), GetCompressedBoxMonFromBox (j3C5F84)
= 08BA5C: SetBoxMonDataFromAnyBox (see 145disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), GetCompressedBoxMonFromBox (j3C5F84), CopyMonToBox (j3C5FA0)
= 08BB2C: SetBoxMonNickFromAnyBox (see 146disasm)
		  Implements: Part of CompressedBoxPokemon refactor, pkmnnamelength
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BB6C: GetAndCopyBoxMonDataFromAnyBox (see 147disasm)
		  Implements: Part of CompressedBoxPokemon refactor, pkmnnamelength
		  Requires in future: GetCompressedBoxMonData (j3C5DDE), GetCompressedBoxMonFromBox (j3C5F84)
= 08BBB4: CopyBoxMonFromAnyBox (see 148disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: CopyMonToBox (j3C5FA0)
= 08BCB4: ClearMonInBox (see 149disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BCF0: sub_808BCF0 (see 150disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), GetCompressedBoxMonFromBox (j3C5F84)
= 08BD30: GetBoxedMonPtr (see 151disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BD6C: GetBoxNamePtr (see 152disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08BD94: sub_808BD94 (see 153disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08BDBC: SetBoxWallpaper (see 154disasm)
		  Implements: Part of CompressedBoxPokemon refactor, no longer limited to 16 wallpapers
= 08BDE8: sub_808BDE8 (see 155disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08C0D4: CountMonsInBox (see 156disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08C108: GetFirstFreeBoxSpot (see 157disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
+ 08C95C: sub_808C95C (see 158disasm)
		  Implements: Eliminates the delay on something in the PC (can't figure out what it is even after I implemented it)
= 08C9C4: sub_808C9C4 (+ add part at EEA2C0_J) (see 159disasm)
		  Implements: need more info
		  Required knowledge: j02036FFC
= 08CBA4: sub_808CBA4 (see 160disasm)
		  Implements: need more info
		  Required knowledge: j02036FFC
= 08CC74: sub_808CC74 (+ add part at EEA33C_J) (see 161disasm)
		  Implements: need more info (possibly box summary images on scroll)
		  Required knowledge: j02036FFC
		  Requires in future: jEEA4E2, GetStringLength (jEEA53E), jEEA554
+ 08E8D8: 88 42 5B DB 15 28 59 DC -> 00 4A 10 47 6F A4 E2 09 (jumps (bx) to extra fn at 1E2A46E, then back (jE2A46E, see 162disasm))
  08E958: 05 20 E3 F7 B7 FC 01 F0 -> 00 48 00 47 B9 A4 E2 09 (jumps (bx) to extra fn at 1E2A4B8, then back (jE2A4B8, see 162disasm))
		  Implements: adds extra menus to wallpaper categories
+ 08F4CC, 08F550: 06 -> 08 (moves PC pokemon names text to the right slightly, unclear why)
+ 08F4E4, 08F566: 02 -> 00 (changes PC summary font size (to leave space for extra characters))
+ 08FD34: 00 B5 05 F0 37 F8 12 20 -> 00 48 00 47 01 A4 E2 09 (jumps (bx) to extra fn at 1E2A400, then back (jE2A400, see 163disasm))
		  Implements: Adds "special" wallpaper category option on menu
+ 08FD68: 01 2C 16 D0 01 2C 02 DC -> 00 48 00 47 33 A4 E2 09 (jumps (bx) to extra fn at 1E2A432, then back (jE2A432, see 164disasm))
		  Implements: Adds extra menu for "special" wallpapers
= 08FE54: sub_808FE54 (see 165disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 0900D4: sub_80900D4 (see 166disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (if mon is egg, species is treated as 0x19C instead of actual species)
		  Note: it's possible that eggs have 0x19C stored in species2 anyway, which would mean the "need more info" part doesn't change anything
= 0901EC: sub_80901EC (see 167disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (egg -> 0x19C)
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84), fn_3C62B0_J
		  Note: see previous note
= 0903A4: sub_80903A4 (see 168disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 090794: sub_8090794 (see 169disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (egg -> 0x19C)
		  Note: see previous note
= 090D62, 092D5E, 092E96, 092F0A, 092F12, 092F6A, 092FDE, 09303A, 093062, 093128, 09323C, 093306, 093476, 09366E: 0E -> 17 (part of CompressedBoxPokemon refactor)
+ 091AF0: 81 18 -> 11 1C
  091AFE: 80 18 -> 10 1C
  091D4A, 091F16, 091F3C: 40 18 -> 08 1C
		  Implements: allows more than 16 box wallpapers by ignoring a pointless table
= 092458: sub_8092458 (see 170disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 093878: sub_8093878 (see 171disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 093A10: sub_8093A10 (see 172disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: CopyMonForBoxViewing (j3C6170)
+ 093DE8: 1D 2A 01 D0 20 2A 01 D1 -> 04 E0 00 00 00 00 00 00 (no idea what this did - removes cases 0x1D and 0x20 from data_020397B0->0xCE0)
+ 094A68: 11 20 00 F0 BF F9 -> 00 00 00 00 00 00 (removes Info from menu when selecting a Pokemon in Move Items mode)
= 0956A4: sub_80956A4 (see 173disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (egg -> 0x19C)
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84), fn_3C62B0_J
		  Note: see previous egg -> 0x19C note
= 09572C: sub_809572C (see 174disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 0957C8: sub_80957C8 (see 175disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 09596C: 05 21 AA F7 E9 F9 -> 80 8C 00 00 00 00 (part of CompressedBoxPokemon refactor)
= 0959A8: sub_80959A8 (see 176disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 095ABC: sub_8095ABC (see 177disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095C84: sub_8095C84 (see 178disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095D84: sub_8095D84 (see 179disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095EA0: sub_8095EA0 (see 180disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095F74: sub_8095F74 (see 181disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 098758: AddItemIconObject (see 182disasm)
		  Implements: TM/HM item icon graphics are produced dynamically based on the type of the move
		  Requires in future: GetTMHMIcon (j2519E4), GetTMHMPalette (j2519EA)
		  Note: english rom has a separate graphics loader at sub_8098974, might want to rewrite that instead)
= 099E44: SetBagItemsPointers (see 183disasm)
		  Implements: extra bag space
		  Relies on: technically nothing, but breaks existing save files
+ 09A540: SwapRegisteredBike (+GetRegisteredItemList, UnregisterItem) (+mysteryfuncs) (see 184disasm)
		  Implements: removes unused code to make room for mysteryfuncs
+ 09A8AA: BB -> D8 (max items 374 -> 432)
+ 09A900: ItemId_GetPrice (see 185disasm)
		  Implements: the price in-game is now the price stored in the data times ten, this allows items up to 10x more expensive than previous maximum
		  Relies on: every price in item data divided by 10
+ 09B3B4: 02 -> 01 (changes letter spacing of some printer in a shop menu, unsure what this did; jp changes line spacing 2->1 and x 4->0 as well, which is already done in en)
+ 09B3D0, 10864C, 10DA14, 13D428: 77 -> B0 (change to new final item for back icon)
+ 09B41E: 08 04 -> 20 47
  09B488: D0 1C 02 02 -> 91 E0 D7 09 (jumps (bx) to extra fn at 1D7E090, then back (jD7E090, see 186disasm))
		  Implements: Show already-obtained TMs as price "-----"
+ 09B428, 09BC4A, 09BD26: 09 04 09 0C -> 00 00 00 00 (don't cap prices at 65536)
= 09B430, 09B440: 04 -> 06 (extra 2 digits for prices, this doesn't work right now (cutoff))
+ 09B718: 98 -> 90 (move the red arrows for item quantity left one tile (why?))
+ 09B868: 01 -> 02
  09B86E: 02 DC -> 2F D0
		  Implements: switches cases metatileLayerType = 1 and metatileLayerType = 2 for BuyMenuDrawMapMetatile (no idea what this did)
+ 09BB68: 36 -> 2E (move some sort of printer in a shop menu left?, test; in jp it's 0x26 -> 0x1E)
+ 09BC7E: 20 1C -> 08 47
  09BC94: D0 1C 02 02 -> 51 DF D7 09 (jumps (bx) to extra fn at 1D7DF50, then back (jD7DF50, see 187disasm))
		  Implements: prevents buying duplicate TMs
		  Note: eventually, change "[ITEM]? That will be $[MONEY]. OK?" to "No. [NUM], [MOVE]? That will be $[MONEY]. OK?"
+ 09BDB6, 09C106: 00 04 00 0C -> 00 00 00 00 (don't cap prices at 65536)
+ 09BF46: A0 00 -> 08 47
  09BF60: 90 50 00 03 -> 31 E0 D7 09 (jumps (bx) to extra fn at 1D7E030, then back (jD7E030, see 188disasm))
		  Implements: refreshes price display after TM bought
= 09F914: sub_809F914 (see 189disasm)
		  Implements: pkmnnamelength (nicknaming screen), something else
		  Note: This is very different in en vs jp, should try to find the naming screen templates and change those
+ 09FDD4: 3F 42 0F -> 7F 96 98 (max money 999999 -> 9999999)
= ?????? (j9FD30): 08 -> 00 (unclear how to translate to english rom since this fn doesn't exist; moves the money display in the money box left one tile)
+ 09FEE8: 06 -> 08 (extra 2 digits for money)
+ 09FFB8: DrawMoneyBox (see 190disasm)
		  Implements: makes money display one tile wider and changes base block from 8 to 5 (latter has unknown effect)
! 0A011C: ScriptGiveMon (see 191disasm)
		  Implements: does nothing by itself, but carries over any changes to CreateScriptedWildMon to giftmons too
		  GLITCH!: either this or CreateScriptedWildMon cause bad eggs, unsure which so temporarily removed both
! 0A029C: CreateScriptedWildMon (see 192disasm)
		  Implements: does nothing by itself, but carries over any changes to sub_80829FC to scripted encounters too
+ 0A19E8: sub_80A19E8 (see 193disasm)
		  Implements: part of VAR_REPEL_STEP_COUNT refactor
+ 0A1A5A: 67 F0 B5 F9 -> 00 00 00 00
  0A1A68: 66 F0 C4 FF -> 00 00 00 00
		  Implements: need more info (appears to remove functions that delete blank bag slots when an item is used up, probably reimplemented elsewhere)
		  Note: this doesn't actually do anything apparently
= 0B3834: sub_80B3834 (see 194disasm)
		  Implements: In an unknown animation routine only used by Skill Swap in vanilla, allows gBattleAnimArgs[1] to choose between 3 options for the sprite/palette tags (gBattleAnimArgs[1] = 0 is the standard one)
		  Relies on: animation scripts setting the value correctly
		  Requires in future: fn_168A10_J, fn_168AC0_J
+ 0B565C: 00 -> 01 (set Shadow Ball sprite.data[0] to 1 instead of 0; no idea what this did)
+ 0BC128, 0F171C: 6E -> 6C (set gBattleAnimTarget to gBattlerTarget instead of gEffectBattler; these unknown animation routines are called by the item steal animation)
= 0BD3C8: 01 A9 2A 1C A6 F7 28 FB -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222C60, see 195disasm))
		  Implements: forced movement for metatiles 0xB0-0xB5 (on bike)
+ 0BF1E4: ptr 34 E2 41 08 -> DC 42 FE 08 (Mail "From " -> "")
+ 0BFC7C: 13 -> 15 (heal locations 20 -> 22)
+ 0BFCB6: 14 -> 16 (heal locations 20 -> 22)
! 0BFD74: 08 -> 07
  0BFDEC: 07 -> 0B
  0BFDF0: 04 -> 0D
		  Implements: PDONLY, some respawn locations after blackout are repositioned
+ 0C35DC: get_flagnr_blue_points (see 196disasm)
		  Implements: makes it easier to add new fly points
! 0C369A: FF FF FF FF FF FF -> 9B 08 FF FF 9C 08 (PDONLY, adds fly points for region map sections 7B (checks flag 0x89B) and 7C (checks flag 0x89C))
+ 0C3878: sub_80C3878 (see 197disasm)
		  Implements: makes it easier to add new town map points of interest
! 0C3D40: sub_80C3D40 (see 198disasm)
		  Implements: PDONLY; makes it easier to add new custom (?????) (and changes them), this also removes the ability to set them for a specific map within a section (what are they, though?)
= 0C6DA0: BattleAI_SetupAIData (see 199disasm)
		  Implements: instead of 7 (previous "smartest" AI), the flags are set to the current value of j0203BFF4
		  Required knowledge: j0203BFF4
= 0C7038: BattleAI_DoAIProcessing (see 200disasm)
		  Implements: New level of smart AI for when to switch (switches if it's weak to opponents and opponents aren't weak to it)
		  Required knowledge: j0203B960, j0203D500, j0203D501, j0203D502, j0203D504
		  Requires in future: AI_CleanupSmartSwitching (j205910), AISetup_SmartSwitching (j205940), GetOpponentMatchupScore (j205A84), CopyMonToBattleMon (j205B0C), GetMatchupScore (j206292), CanUseNewAI (j20649C), GetBestMatchupScore (j2066CC)
		  Note: doesn't actually switch, that must be elsewhere
+ 0C71D0: RecordAbilityBattle (see 201disasm)
		  Implements: records abilities in a separate gRecordedAbilities array instead of in gBattleResources->battleHistory
		  Relies on: BattleAICmd_check_ability changes
= 0C82D0 -> ?????? (repoint; j1830C0): BattleAICmd_nullsub_2A (see 254disasm)
		  Implements: new battle ai script command (BattleAICmd_if_bits_set); jumps if the given bits in funcResult are set
= 0C82D4 -> ?????? (repoint; j1832D0): BattleAICmd_nullsub_2B (see 255disasm)
		  Implements: new battle ai script command (BattleAICmd_if_bits_not_set); jumps if the given bits in funcResult are not set
+ 0C841C: BattleAICmd_check_ability (see 202disasm)
		  Implements: reads abilities from a separate gRecordedAbilities array instead of from gBattleResources->battleHistory
		  Relies on: RecordAbilityBattle changes
= 0C86F0 -> ?????? (repoint; j183200): BattleAICmd_nullsub_32 (see 256disasm)
		  Implements: new battle ai script command (BattleAICmd_is_same_type); checks if attacker is same type as target and stores answer in funcResult - set param to 1 if attacker is single-typed
		  Glitch?: param = 1 seems to be intended to check if user and target share any types, it doesn't do that (may be decompilation error?)
= 0C86F4 -> ?????? (repoint; j183290): BattleAICmd_nullsub_33 (see 257disasm)
		  Implements: new battle ai script command (BattleAICmd_get_move_attribute); gets the given byte of the move in funcResult and stores it in funcResult
= 0C8886: 07 -> 03
  0C889A: 18 -> 0C
  0C88AE: 60 -> 30
  0C88C2: 80 -> C0
		  Implements: part of weather refactor
+ 0C8C38: 5A -> 32 (the AI's if_cant_faint check now considers 0BP and 1BP moves always unable to KO, instead of always able to KO)
+ 0C8EBC: BattleAICmd_if_has_move_with_effect (see 203disasm)
		  Implements: Fixes a bug where the function would always consider opponents to have the specified move effect
		  Note: it removes the null check for moves, which shouldn't actually matter; also it still doesn't fix the bug where it checks the user's moves instead of the opponents'
+ 0C8FB0: BattleAICmd_if_doesnt_have_move_with_effect (see 204disasm)
		  Implements: Fixes a bug where the function would always consider opponents to have the specified move effect
= 0C9518 -> ?????? (repoint; j168CC8): BattleAICmd_nullsub_52 (see 258disasm)
		  Implements: new battle ai script command (BattleAICmd_get_considered_move_target_type); gets the target type (single, all foes, field, etc.) of the considered move and stores it in funcResult
= 0C951C -> ?????? (repoint; j168CF4): BattleAICmd_nullsub_53 (see 259disasm)
		  Implements: new battle ai script command (BattleAICmd_get_considered_move_category); gets the category (physical, special, status) of the considered move and stores it in funcResult
= 0C9520 -> ?????? (repoint; j168D20): BattleAICmd_nullsub_54 (see 260disasm)
		  Implements: new battle ai script command (BattleAICmd_get_considered_move_extra_flags); gets the extra flags (sound, powder, punch, etc.) of the considered move and stores them in funcResult
+ 0C9528 -> 11FC000 (repoint): BattleAICmd_nullsub_56 (see 261disasm)
		  Implements: new battle ai script command (BattleAICmd_exec); executes the given ASM function then continues running the AI script
= 0C952C -> ?????? (repoint; j183190): BattleAICmd_nullsub_57 (see 262disasm)
		  Implements: new battle ai script command (BattleAICmd_if_tailwind_timer_not_equal); jumps if the given side's tailwind timer is a given value
= 0C97FC: oei_task_add (see 205disasm)
		  Implements: option to not execute task08_080C9820, need more info
		  Required knowledge: j0203BFF0
= 0C9820 -> 0C981C (repoint): task08_080C9820 (see 206disasm)
		  Implements: makes room for oei_task_add changes
		  Relies on: oei_task_add changes (makes room for these changes)
+ 0CA424: GetPokedexRatingText (see 207disasm)
		  Implements: dex ratings now scale to regional dex of 386, eventmons aren't skipped
= 0CBFE0: ChangeBoxPokemonNickname (see 208disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
= 0CC7F8: sub_80CC7F8 (see 209disasm)
		  Implements: Part of CompressedBoxPokemon refactor
+ 0CE90D, 126C2D: D1 -> E0 (natdex no longer required for post-151 evolutions)
+ 0D75FC, 0D7E96, 0D7EAE: B1 20 40 00 -> FF 20 80 00 (max moves 354 -> 1020)
+ 0D77BC: 08 D9 03 49 FF 20 08 70 0D E0 00 00 81 01 00 00 8C 29 02 02 -> 08 D3 03 49 30 1A 08 E0 00 00 00 00 82 01 00 00 00 00 08 09
		  Implements: if the string number is greater than the total strings (386), read from the expanded string table instead (1080000), giving an additional 208 strings for a total of 594 (603 in english due to jumping the gun on modernization)
= 0D7FF2, 0D8610, 136714: 0D -> 20 (abilitynamelength; btw check decap kludge for more namelengths)
! 0D814A: 5A -> 59 (PDONLY, trainer class 5A no longer takes the rival's name)
= 0D851B: 1A -> 18 (typenamelength)	  
= 0D991E: CA 19 -> 38 47
  0D995C: F6 0F 00 00 -> XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jA24EA0, see 210disasm))
		  Implements: saves all the extra data into the extra blank space at the end of save blocks
		  Required knowledge: j0203C0C8, j0203C320, j0203CEC0
		  Note: check the sizes of the saves in english, might no longer have enough space
= 0D9BFE: 0F 4A 89 18 08 80 0E 48 01 68 -> 01 4A 97 46 00 00 XX XX XX 08 (jumps (mov) to extra fn at XXXXXX, then back (j207280, see 211disasm))
		  Implements: saves all the extra data into the extra blank space at the end of save blocks
		  Required knowledge: j0203C0C8, j0203C320, j0203CEC0
		  Note: check the sizes of the saves in english, might no longer have enough space
= 0D9EDC: 28 04 05 0C 0D 2D C5 D9 -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jA24E40, see 212disasm))
		  Implements: loads all the extra data from the extra blank space at the end of save blocks
		  Required knowledge: j0203C0C8, j0203C320, j0203CEC0
		  Note: check the sizes of the saves in english, might no longer have enough space
= 0E47F0: 6C 0A -> ?? ?? (size to allocate for some struct???, jp 0x9F0 -> 0xB80)
= 0E5116: 8D 24 64 00 -> 9F 24 24 01
  0E5168: 8D 27 7F 00 -> 9F 27 3F 01
  0E5242: 8D 23 5B 00 -> 9F 23 1B 01
		  Implements: (jp 0x11A -> 0x9F0 start index???)
- 0E5340: sub_80E5340 (see 213disasm)
		  Implements: adds category icon to the move reminder summary screen, other minor adjustments to that screen
		  Relies on: data_D7DC7C_J
! 0E5444: sub_80E5444 (see 214disasm)
		  Implements: instead of TYPE/POWER/PP/ACCURACY/EFFECT on the move reminder summary screen, shows 3 (not yet known) graphics
		  Relies on: graphics actually inserted
! 0E54C0: sub_80E54C0 (see 215disasm)
		  Implements: need more info (adds extra window and extra (???) when cancel is highlighted on the move reminder summary screen)
		  Relies on: graphics actually inserted
! 0EB330: 31 -> 30
  0EB342: 32 -> 30
  0EB354: 33 -> 31
  0EB378: 35 -> 32
  0EB38A: 36 -> 33
  0EB3AE: 39 -> 35
  0EB3C0: 3A -> 36
  0EB3D2: 3B -> 37
  0EB3F6: 3D -> 39
  0EB490: 83 -> 84
  0EB4F4: 3A 08 00 00 3B 08 00 00 3C 08 00 00 3D 08 00 00 35 08 00 00 36 08 00 00 38 08 00 00 39 08 00 00 31 08 00 00 32 08 00 00 33 08 00 00 34 08 00 00 -> 
		  32 00 00 00 3C 04 00 00 37 04 00 00 3A 00 00 00 36 00 00 00 3B 00 00 00 3D 00 00 00 3E 00 00 00 40 08 00 00 40 08 00 00 3F 00 00 00 41 00 00 00
		  Implements: changes the tilemap for oak's dialogue boxes in the intro battle
		  Relies on: graphic itself actually changed
+ 0EF208: 06 -> 01 (on level-up, instead of the border of the hp box flashing blue, the text does)
+ 0EF258, 0EF294: 74 -> 86 (on level-up, instead of the hp box text flashing whitish-blue, it flashes sky blue)
= 0EF4B4, 0EF4DC, 0EF674, 0EF9AC, 0F0368: 68 3D 02 02 -> 00 FE 03 02
		  Implements: correct parameters for new ItemIdToBallId
		  Requires in future: ItemIdToBallId changes
= 0EF52C: ItemIdToBallId (see 216disasm)
		  Implements: correct ids for rearranged pokeballs
		  Relies on: all calls to ItemIdToBallId to use correct parameters
+ 0EF972, 0F02D6: 14 DC -> 00 00 (no longer limited to 12 types of pokeballs)
+ 0EFD2A: 0D 68 -> 08 47
  0EFD4C: 18 40 02 02 -> 01 AB EE 08 (jumps (bx) to extra fn at EEAB00, then back (see 217disasm))
		  Implements: critical capture animation
! 0F11F2: 0B -> 1F (max pokeball types 12 -> 32)
		  GLITCH!: breaks battle animations, some other change probably needed
+ 0F1D14: AnimTask_GetTrappedMoveAnimId (see 218disasm)
		  Implements: end-of-turn animations for Infestation and Magma Storm will show up
		  Relies on: actual animations being implemented
= 0F3270: 09 -> 0B (pkmnnamelength)
		  Note: might actually run into issues, looks like jp hof might have extra space just in case western mons are transferred, en hof obviously doesn't
! 0F3310: 20 28 01 D0 1D 28 07 D1 -> 0A E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 in hall of fame)
! 0F7328: A0 -> A1
  0F7394: 01 02 00 00 02 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 09 02 00 00 0A 02 00 00 0B 02 00 00 0D 02 00 00 0A 0A 00 00 0B 0A 00 00 0C 0A 00 00 0D 0A 00 00 05 0A 00 00 06 0A 00 00 08 0A 00 00 09 0A 00 00 01 0A 00 00 02 0A 00 00 03 0A 00 00 04 0A 00 00 -> 00 02 00 00 00 02 00 00 01 02 00 00 02 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 07 02 00 00 09 02 00 00 02 02 00 00 0C 06 00 00 07 06 00 00 0A 02 00 00 06 02 00 00 0B 02 00 00 0D 02 00 00 0E 02 00 00 10 0A 00 00 10 0A 00 00 0F 02 00 00 11 02 00 00
		  Implements: changes the tilemap for overworld dialog boxes
		  Relies on: graphic itself actually changed
! 0F75B8: A0 -> A1
  0F7630: 01 02 00 00 02 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 09 02 00 00 0A 02 00 00 0B 02 00 00 0D 02 00 00 05 0A 00 00 06 0A 00 00 08 0A 00 00 09 0A 00 00 0A 0A 00 00 0B 0A 00 00 0C 0A 00 00 0D 0A 00 00 01 0A 00 00 02 0A 00 00 03 0A 00 00 04 0A 00 00 -> 00 02 00 00 01 02 00 00 00 02 00 00 02 02 00 00 08 06 00 00 03 02 00 00 05 02 00 00 06 02 00 00 07 02 00 00 02 02 00 00 08 06 00 00 08 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 0A 02 00 00 07 02 00 00 10 0A 00 00 0D 02 00 00 10 0A 00 00 0E 02 00 00
		  Implements: changes the tilemap for overworld sign messages
		  Relies on: graphic itself actually changed
+ 1025EC: C1 -> C2 (allocate 16 more bytes for ?????? (pokedex screen))
! 1028B8: D0 29 10 08 -> D8 2B 10 08 (change case 5 to be identical to case 9 in some pokedex func - TEST)
		  Note: currently just automatically jumps to list from table of contents
! 102B50: 01 F0 2E FE -> 00 00 00 00
  102B58: 01 F0 2A FE -> 00 00 00 00
  102B60: 01 F0 26 FE -> 00 00 00 00
		  Implements: don't remove three windows (pokedex screen - TEST)
		  Note: currently just breaks things (probably running out of memory)
= 102C28: sub_8102C28 (see 219disasm)
		  Implements: for one specific function (pokedex main screen?): change a tile type, always use natdex, and replace the TABLE OF CONTENTS text with something - need more info
		  Requires in future: fn_3C7C00_J, CopyBytes (j3C7C40), fn_3C7C4E_J
= 102FFE: 00 F0 C3 FC -> ?? ?? ?? ?? (changes call to sub_8103988 to instead call fn at j4151A0, which just adds a call to fn_3C7400_J after; see 220disasm)
		  Implements: clears all sprites from memory, something else (need more info)
		  Required knowledge: j0203D080, j03003E98
		  Requires in future: fn_3C7418_J
= 103024, 1032E4, 103BD0: 7D 28 10 08 -> XX XX XX 08 (instead of setting callback to sub_810287C, set it to fn at j3C7A00, which is just sub_807249C followed by CB2_ReturnToFieldWithOpenMenu (sub_80568A8))
		  Implements: some input, instead of moving to a new menu, does something volume-related then exits the pokedex
= 103028: 00 F0 A8 F8 -> ?? ?? ?? ?? (changes call to sub_810317C to instead call fn at j4151AC, which just adds a call to fn_4151F2_J after; see 221disasm)
		  Implements: loads some mon's front pic, need more info
		  Required knowledge: j0203B800, j03003E98
		  Requires in future: fn_4152D4_J
= 103084: 04 F0 26 F9 -> ?? ?? ?? ?? (changes call to ListMenuGetScrollAndRow to instead call fn at j4151C4, which just adds a call to fn_4151D2_J after; see 222disasm)
		  Implements: need more info (displays some stuff)
		  Required knowledge: j0203D080, j0203D090, j0203D100, j0203D300, j0203D330, j0203D4F0, j0203D800, j03000DE8, j06012300, j06012400, j06012A00, j06015A00, j06015E00
		  Requires in future: fn_1690E0_J, fn_3C6FD0_J, fn_3C74B0_J, fn_3C7660_J, fn_3C76A4_J, fn_3C76C0_J, fn_3C7800_J, fn_3C7868_J, fn_3C7884_J, fn_3C7D90_J, fn_4154F0_J, fn_41553E_J, fn_41563C_J, fn_415714_J, fn_4159E0_J, fn_415A54_J
= 10309E: 03 F0 EB FF -> ?? ?? ?? ?? (changes call to ListMenuHandleInputGetItemId to instead call fn at j4150E0, see 223disasm)
		  Implements: changes pokedex list to be 4 entries wide instead of vertical, adds ability to hold R to skip to top/bottom of dex, some other stuff (need more info)
		  Required knowledge: j0203B800
		  Requires in future: fn_3C7700_J, fn_415262_J, fn_4152D4_J, fn_4154F0_J
= 10317C: sub_810317C (seee 224disasm)
		  Implements: need more info
		  Required knowledge: j0203D090, j030008E8, j06000000
		  Requires in future: fn_3C7350_J, fn_3C7C00_J, fn_416970_J
+ 103350: 00 F0 4E FB -> 00 00 00 00 (remove scroll indicator from search screen)
= 10345C: sub_810345C (see 225disasm)
		  Implements: on some pokedex screen, replace the SEARCH text with something - need more info
		  Requires in future: fn_3C7C00_J
+ 103550: 68 35 10 08 -> 74 38 10 08 (regional and national lists are now identical)
= 103940: C2 8E 83 8E -> 10 F3 D0 FE (add call to fn at j4154A0, see 226disasm)
		  Implements: something to do with 4-entries-wide dex listing
! 1039F0: sub_81039F0 (see 227disasm)
		  Implements: something to do with 4-entries-wide dex listing
		  Note: Currently just prevents down arrow on dex list from disappearing
! 103A64: 00 F0 E6 FF -> 00 00 00 00 (removes numbers from dex list)
! 103A78: 04 F0 76 F9 -> 00 00 00 00
  103A98: 04 F0 66 F9 -> 00 00 00 00
  103AB2: 04 F0 59 F9 -> 00 00 00 00
		  Implements: removes caught icon and types from dex list
= 1043A2: 01 F0 3B FD -> ?? ?? ?? ?? (changes call to sub_8105E1C to instead call fn at j4151B8, which just adds a call to fn_3C7400_J after; see 220disasm)
		  Implements: clears all sprites from memory, something else (need more info)
		  Required knowledge: j0203D080, j03003E98
		  Requires in future: fn_3C7418_J
! 10457A: 01 68 -> 87 46
  10458C: F0 AC 03 02 -> 40 B4 EE 09 (jumps (mov) to extra fn at 1EEB440, then back (jEEB440, see 228disasm))
  RE-REPOINT THIS TO FIRST HALF
		  Implements: cleans up extra data display from sub_810603C
		  Requires in future: fn_EEB450_J
		  Note: doesn't work yet, need more stuff
! 1045E0: 01 68 -> 87 46
  1045E8: F0 AC 03 02 -> 48 B4 EE 09 (jumps (mov) to extra fn at 1EEB448, then back (jEEB448, see 229disasm))
  RE-REPOINT THIS TO FIRST HALF
  		  Implements: cleans up extra data display from sub_810603C
		  Requires in future: fn_EEB450_J
		  Note: doesn't work yet, need more stuff
+ 104E06: 02 -> 00 (changes font on habitat listing cards (to leave space for extra characters))
= 104F5E: FF 21 FF F6 7C FA -> 33 21 ?? ?? ?? ?? (changes call to FillWindowPixelBuffer(0, 0xFF) to instead call fn_3C7C00_J(0, 0x33))
		  Implements: need more info
		  Note: parameters passed to fn_3C7C00_J are unused
= 105E1C: sub_8105E1C (see 230disasm)
		  Implements: need more info
		  Requires in future: fn_3C7C00_J
! 10611E: Part of sub_810603C (see 231disasm)
		  Implements: displays egg groups and wild hold items in pokedex list
		  Relies on: layout rework to make this not look broken
		  Requires in future: fn_EEB476_J
+ 1063D0: FE F7 FA F9 -> 00 00 00 00 (removes "Area" label on pokedex detail screen 2)
+ 106490: 02 -> 00 (changes font for names on pokedex detail screen 2 (to leave space for extra characters))
! 106531: D1 -> 00 (remove size comparison graphic on pokedex detail screen)
= 10676A: FD F6 77 FE -> ?? ?? ?? ?? (changes call to FillWindowPixelBuffer to instead call fn at j3C7C00; need more info)
+ 106CC2: FF 20 FE F7 C8 F9 -> 00 00 00 00 00 00
  106D0C: 05 -> 07
  106DB8: 57 E0 -> 00 00
  106DC4: 09 20 4F E0 -> 0A 20 0A E0
  106DE2: 05 28 14 D8 -> 00 28 14 D0
		  Implements: removes initial zoom when new mon registered in pokedex (fades directly to dex entry, not showing habitat listing)
+ 1071AE: 00 F0 F1 F9 -> 00 00 00 00 (don't draw cursor on list menu refresh, this doesn't seem to actually do anything?)
+ 1083F8: AC 20 40 00 -> 8E 20 80 00 (allocate 224 more bytes for ?????? (item menu))
= 108420: 31 03 -> ?? ?? (size to allocate for some struct???, jp 0x285 -> 0x429)
+ ?????? (j108FD6): 01 -> 00 (changes the letter spacing in the item menu, but this is already done in english)
= 108654: sub_8108654 (see 232disasm)
		  Implements: something involving the new multiple SELECT items feature
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList
+ ?????? (j10936E): 04 -> 00 (moves some printer left four units, this is already done in english - might cause problems if it needs to move left anyway)
+ 108924: 98 -> 88 (supposedly moves scroll arrows left in item menu, not sure what it really does)
= 109890: sub_8109890 (see 233disasm)
		  Implements: something involving the new multiple SELECT items feature
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList
		  Note: merging changes from english and changes from pd is necessary - return to this later
= 10A000: ItemMenu_Register (see 234disasm)
		  Implements: register multiple items with SELECT
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList, UnregisterItem
		  Required knowledge: j0203CB54
+ 10A6BC, 10A7EA, 10A8A2, 10A982, 10AA14, 1329E8, 132B0E, 132C00, 132CE6, 132D76, 13E508, 13E626, 13E6D0, 13E7A2, 13E832: 00 04 40 0C -> 00 00 40 08 (store money as 32-bit integer instead of 16-bit)
+ 10A6CA, 10A990, 1329F6, 132CF4, 13E516, 13E7B0: 06 -> 08 (extra 2 digits for money in sell screen)
= 10AD10: UseRegisteredKeyItemOnField (see 235disasm)
		  Implements: something involving the new multiple SELECT items feature
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList
		  Required knowledge: j0203D2E0
= 10CCD8: 92 02 -> 94 08
  10CCE0: 96 -> AC
  10CCE8: 97 -> AD
  10CCF0: 2C -> A3
  10CD10: 44 -> 2C
		  Implements: changes which flags enable certain rematches (old: 0x292, 0x896, 0x897, 0x82C, 0x844)
		  Relies on: use of flags 0x894, 0x8AC, 0x8AD, 0x8A3, 0x82C
= 10CF90: GetRunningBehaviorFromGraphicsId (see 236disasm)
		  Implements: gives trainers with graphics ids 0x10, 0x26, 0x2F, 0x36, and 0x9D rematch hop behavior 0x4E; reverts trainers with graphics ids 0x27 and 0x28 to the standard rematch hop behavior (0x4D); makes it easier to give more trainers custom rematch hop behaviors
		  Requires in future: data_508000_J
+ ?????? (j10E3BA): 01 -> 00 (changes the letter spacing in the pc item menu, but this is already done in english)
+ ?????? (j10E4D0): 04 -> 00 (moves some printer left four units, this is already done in english - might cause problems if it needs to move left anyway)
! 10EEB6: 01 -> 00
  10EEDE: 02 -> 00
  10EEFE: 03 -> 01
  10EF4A: 05 -> 02
  10EF68: 06 -> 03
  10EFA4: 09 -> 05
  10EFC2: 0A -> 06
  10EFE8: 0B -> 07
  10F024: 0D -> 09
  10F15E: 80 -> 81
  10F230: 0A 08 00 00 0B 08 00 00 0C 08 00 00 0D 08 00 00 05 08 00 00 06 08 00 00 08 08 00 00 09 08 00 00 01 08 00 00 02 08 00 00 03 08 00 00 04 08 00 00 ->
		  02 00 00 00 0C 04 00 00 07 04 00 00 0A 00 00 00 06 00 00 00 0B 00 00 00 0D 00 00 00 0E 00 00 00 10 08 00 00 10 08 00 00 0F 00 00 00 11 00 00 00
		  Implements: changes the tilemap for the save confirmation textbox, probably others
		  Relies on: graphic itself actually changed
+ 110F54: 00 28 0F D0 -> 00 0C 0F E0 (disable quest log)
= 111438: sub_8111438 (see 237disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 11164C: sub_811164C (see 238disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Glitch?: misplacement of counter declaration means it returns the number of empty slots in the final box, not the full PC as intended
+ 1140D6, 11411A: 0xA9 -> 0x90 (the HM notification in quest log now happens on TMs as well)
		  Glitch?: probably should be the other way around (HM never, TM always); doesn't matter since quest log is now disabled
! 115216: 5A -> 59 (PDONLY, trainer class 5A no longer takes the rival's name in quest log)
= 11C6C0, 11D0D6: 84 -> ?? (changes placement of the move name in some data structure, jp 0x7F -> 0xE0; makes room for longer names)
		  Note: minidisasm20 has all info known about data structure; according to that, might have to change placement of move name at 0x77 in english too)
! 11F0FC: 01 60 03 2D 0A D1 01 63 0B E0 00 00 -> 0F E0 0E D0 03 2D 0C D0 01 62 07 E0
  11F920: 00 2D 00 D0 01 61 -> 01 63 01 64 01 65
		  Implements: removes special size for first mon in party on menu screen
		  Relies on: graphics rework to make this not look broken
! 11FFA6: 00 28 08 D1 -> 02 28 08 DA
		  Implements: makes the selection cursor in double battles work like in single battles
		  Relies on: layout rework to make this not look broken
! 11FFF0: sub_811FFF0 (see 239disasm)
		  Implements: rearranges which button press moves the selection cursor on the party menu which way (single battles)
		  Relies on: layout rework to make this not look broken
! 1200F8: sub_81200F8 (see 240disasm)
		  Implements: rearranges which button press moves the selection cursor on the party menu which way (double battles)
		  Relies on: layout rework to make this not look broken
+ 1206A8: sub_81206A8 (see 241disasm)
		  Implements: vastly speeds up HP restoration on party menu
! 121364, 121374, 12138C: 0A -> 0F
  121366: 07 -> 04
		  Implements: changes dimensions of first mon party menu background rectangle from 80x56 px to 120x32 px
		  Relies on: graphics rework to make this not look broken
! 1213C8, 1213D8, 1213F0: 12 -> 0E
  1213CA: 03 -> 05
		  Implements: changes dimensions of non-first mon party menu background rectangle from 144x24 px to 112x40 px
		  Relies on: graphics rework to make this not look broken
! 121412, 12141A: 12 -> 0E
  121416: 03 -> 05
		  Implements: changes dimensions of empty party menu rectangle graphic from 144x24 px to 112x40 px
		  Relies on: graphics rework to make this not look broken
! 1218E4: 20 2C 01 D0 1D 2C 09 D1 -> 0C E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 in party menu)
! 122E96: 14 -> 2E
  122EDA: 0A 28 06 D1 01 22 52 42 10 1C 03 E0 00 00 B4 B0 03 02 -> 01 20 02 40 01 2A 04 D0 40 42 03 E0 00 00 00 00 00 00
  122F3E: 0A 28 08 D1 01 22 52 42 10 1C -> 01 20 02 40 01 2A 06 D0 40 42
		  Implements: changes the way mons slide around during party position switching
		  Relies on: layout rework to make this not look broken
! 1232B6: 4A 80 08 1C 00 88 21 28 50 D9 10 04 00 0C 21 28 4C D9 -> 30 8B 01 30 30 83 12 28 50 D9 00 20 30 83 00 00 00 00
		  Implements: unknown what this actually does, right now it stops mons from going fully offscreen during party position switching
		  Relies on: layout rework to make this not look broken
+ 124EA0, 124F6C, 125C74: A9 -> 90 (reusable TMs)
! 12FB38, 130F4C: 1D -> 20
  130FA0: 94 51 23 08 F4 73 23 08 -> AC 51 23 08 0C 74 23 08
		  Implements: PDONLY, oak pokemon #29 -> #32
+ 131E68: sub_8131E68 (see 242disasm)
		  Implements: removes displayed quantity of TMs because they're infinite
! 131E9A: 08 -> 06
		  Implements: moves "HM" logo left 2 pixels, this doesn't work right now (cutoff)
+ 132070: 98 -> 88 (supposedly moves scroll arrows left in tm case, not sure what it really does)
+ 1326B8: 00 28 17 D1 -> 00 00 17 E0
  13288A, 1328DA: 00 28 0E D1 -> 00 00 0E E0
		  Implements: TMs can't be held
+ 132926: 1F D1 -> 00 00 (TMs can't be sold)
! 133408: 13 -> 18
  133414: 14 -> 19
  133420: 15 -> 1A
  13342C: 16 -> 1B
		  Implements: changes graphics for "TYPE"/"POWER"/"ACCURACY"/"PP" in TM case
		  Relies on: graphics actually inserted
+ 1334D0: 01 -> 02 (2 base power now displays as "---" (TM case), why?)
+ 1338AE: 88 -> 90 (allocates 32 more bytes for ?????? (TM case))
+ 134C92: 0F -> 00 (remove something on summary screen, no idea what)
+ 134F4A: 1E 24 00 94 02 25 -> 00 24 00 94 00 25 (remove something on summary screen, no idea what)
+ 134F5E: 0F -> 00 (remove something on summary screen, no idea what)
! 1354F2: 10 32 -> 29 3A 
		  Implements: move HP bar on summary screen left (when scrolling into it from the left)
		  Relies on: layout rework to make this not look broken
+ 1356B0: 01 -> 00 (no idea what this does)
+ 1360F7: D1 -> E0 (display all dex numbers on summary screen even before natdex)
! 136238: 20 2C 01 D0 1D 2C 11 D1 -> 14 E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 on summary screen)
! 1363C0, 13654E, 136586, 1365BC, 1365F2, 136628, 136666, 1366D8, 1369F4, 136A18: 09 18 49 00 -> 49 00 09 18
  13666A: 3F -> 3E
  1369F8: 0C -> 0B
		  Implements: move all the numbers on the summary screen stat page right (jp 9 -> 8, en 6 -> 5 something (maybe make it 6 -> 2 something; it would then be 09 18 49 00 -> 00 00 00 00 / 3F -> 3B / 0C -> 08))
		  Relies on: layout rework to make this not look broken
! 13679C: BC -> B8 (jp 90 -> 8C)
		  Implements: moves the ability name left 4 characters
		  Relies on: layout rework to make this not look broken
+ 1367A4, 137C8C: CC -> C9 (jp 98 -> 95) (one of these moves the ability description left, the other one moves it right; result is no change at all?)
= 136828, 137362: 0D -> 11 (movenamelength)
! 136890, 1373B0: 28 -> 20 (jp 18 -> 10)
		  Implements: moves the move names on the summary screen in some way
		  Relies on: layout rework to make this not look broken
+ 136D50: 87 20 -> A0 00 (REG_OFFSET_WIN1V = 0x2087 -> 0x00A0; no idea what this does)
! 136EB2: 28 -> 20 (jp 32 -> 2A) 
		  Implements: moves nickname on summary screen left
		  Relies on: layout rework to make this not look broken
+ 136EE0, 136F20: 69 -> 6C (move gender symbol on summary screen right)
! 136FD0: 2F 22 13 23 -> 35 22 11 23 (jp 1A 22 11 23 -> 20 22 10 23)
		  Implements: move species name on summary screen up/right
		  Relies on: layout rework to make this not look broken
! 136FF2: 2F -> 35 (jp 1A -> 20)
  137004: 05 -> 01 (jp 04 -> 00)
		  Implements: move dex number on summary screen up/right
		  Relies on: layout rework to make this not look broken
! 13701E: 2F 22 31 23 -> 35 22 36 23 (jp 1A 22 2B 23 -> 20 22 30 23)
		  Implements: move OT name on summary screen down/right
		  Relies on: layout rework to make this not look broken
! 13703A: 2F 22 40 23 -> 35 22 48 23 (jp 1A 22 38 23 -> 20 22 40 23)
		  Implements: move OT ID number on summary screen down/right
		  Relies on: layout rework to make this not look broken
! 137056: 2F 22 4F 23 -> AB 22 40 23 (jp 04 22 50 23 -> 80 22 41 23)
		  Implements: move held item name on summary screen up/right
		  Relies on: layout rework to make this not look broken
		  Note: seems like it went so far right it's offscreen?
! 1370C2: 07 22 2D 23 -> 03 22 25 23 (jp 04 22 27 23 -> 00 22 1F 23)
		  Implements: move egg state summary up/right
		  Relies on: layout rework to make this not look broken
! 13710A: 0E -> 48
  137122: 04 -> 44
		  Implements: move HP values on summary screen down/right
		  Relies on: layout rework to make this not look broken
		  Note: seems like it went so far right it's offscreen?
= 137132: 11 68 0A 79 32 32 12 06 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2DD70, see 243disasm))
		  Implements: move Attack value on summary screen left (TEST) and color it according to nature
! 137148: 16 -> 01 
		  Implements: move Attack value on summary screen up
		  Relies on: layout rework to make this not look broken
= 137158: 11 68 8A 79 32 32 12 06 12 0E -> 00 00 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2DDC6, see 243disasm))
		  Implements: move Defense value on summary screen left (TEST) and color it according to nature
! 13716E: 23 -> 11 
		  Implements: move Defense value on summary screen up
		  Relies on: layout rework to make this not look broken
= 13717E: 11 68 0A 7A 32 32 12 06 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2DE14, see 243disasm))
		  Implements: move Sp. Atk value on summary screen left (TEST) and color it according to nature
! 137194: 30 -> 21 
		  Implements: move Sp. Atk value on summary screen up
		  Relies on: layout rework to make this not look broken
= 1371A4: 11 68 8A 7A 32 32 12 06 12 0E -> 00 00 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2DE62, see 243disasm))
		  Implements: move Sp. Def value on summary screen left (TEST) and color it according to nature
! 1371BA: 3D -> 31
		  Implements: move Sp. Def value on summary screen up
		  Relies on: layout rework to make this not look broken
= 1371CA: 11 68 0A 7B 32 32 12 06 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2DEB0, see 243disasm))
		  Implements: move Speed value on summary screen left (TEST) and color it according to nature
! 1371E0: 4A -> 41
		  Implements: move Speed value on summary screen up
		  Relies on: layout rework to make this not look broken
= 1371F0: 11 68 8A 7B 0F 32 12 06 12 0E -> 00 00 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2DEFE, see 243disasm))
  137206: 57 -> 50
		  Implements: move something on summary screen up/right, TEST
! 13721A: 0F -> 78
  13722C: 64 -> 5C
		  Implements: move exp to next level on summary screen up/right
		  Relies on: layout rework to make this not look broken
		  Note: seems like it went so far right it's offscreen?
+ 13736E: 02 21 03 22 -> 01 21 00 22
		  Implements: move move names on summary screen left
		  Note: in jp this changes the font, but fonts 1 and 2 seem to be identical in en
! 13741E: 24 -> 1C (jp 16 -> 0E)
  13743A: 2E -> 28 (jp 20 -> 1A)
  137454: 02 -> 01
  13747C: 02 21 3A 22 -> 01 21 32 22 (jp 02 21 32 22 -> 01 21 2A 22)
  13749A: 40 -> 37 (jp 3B -> 32)
  1374AC: 02 -> 01
		  Implements: move PP values on summary screen left
		  Relies on: layout rework to make this not look broken
		  Note: in jp this changes the font, but fonts 1 and 2 seem to be identical in en
+ 1375B0, 13775C: 05 -> 01 (default mon met level 5 -> 1)
! 137AB6: 07 -> 00
  137AD0: 14 -> 0C
		  Implements: move "Exp. Points" and "Next Lv." labels on summary screen up
		  Relies on: layout rework to make this not look broken
		  Note: jp has a third one, 24 -> 1C, that doesn't exist in en
+ ??????: 90 -> 8C (j1382D0; this doesn't exist at all in en)
! 137B3C: 02 21 39 22 01 23 -> 00 21 37 22 16 23 (jp 02 21 32 22 01 23 -> 00 21 30 22 16 23)
		  Implements: move move power value on summary screen down/left and change font
		  Relies on: layout rework to make this not look broken
! 137B60: 02 21 39 22 0F 23 -> 00 21 37 22 26 23 (jp 02 21 32 22 0F 23 -> 00 21 30 22 26 23)
		  Implements: move accuracy value on summary screen down/left and change font
		  Relies on: layout rework to make this not look broken
! 137B96: 07 22 2A 23 -> 06 22 3A 23 (jp 05 22 27 23 -> 04 22 37 23)
		  Implements: move move description on summary screen down/left
		  Relies on: layout rework to make this not look broken
+ 137CD0: A0 -> F0 (no idea what this does)
! 137FBA: AC -> 73
  137FC6: 98 42 00 DA -> 00 00 00 00
		  Implements: move HP bar on summary screen left (when scrolling into it from the right)
		  Relies on: layout rework to make this not look broken
+ 13802A, 138048, 138090, 1380B0: 49 42 -> 00 00 (no idea what this does)
! 138582, 138678, 13873E, 13888A: B5 -> EA
  138598, 13868E, 138752, 13889E: BD -> F2
  138668, 1387D8: 6B -> D2
  13866C, 1387DC: 7B -> E2
  1386E8: 5B -> D0
  1386EC, 1387E0, 138920: C5 -> E9
  138702, 1387FC, 13893C: CD -> F1
  138A28: 8B -> D4
  138A2C: 9B -> E4
		  Implements: change tilemap of indicator tabs on the top of summary screen
		  Relies on: graphic itself actually changed
! 138590, 1385A4, 138686, 13869A, 1386FA, 13870E, 1387F4, 13880C, 138934, 13894C: 0D -> 10
  1385DC, 1385F0, 13874A, 13875E, 13884C, 13885E, 13898C, 13899E: 0F -> 12
  138626, 138638, 138794, 1387A6, 138896, 1388AA, 1389D8, 1389EA: 11 -> 14
		  Implements: move indicator tabs on the top of summary screen right
		  Relies on: layout rework to make this not look broken
! 1385AC: 2C 49 00 94 01 94 02 97 03 20 0E 22 00 23 C9 F6 CB FF 29 49 00 94 01 94 02 97 03 20 0E 22 01 23 C9 F6 C2 FF -> all zero
  13860A: 1D 49 00 94 01 94 02 97 03 20 10 22 00 23 C9 F6 A5 FF 1A 49 00 94 01 94 02 97 03 20 10 22 01 23 C9 F6 9C FF -> all zero
  138640: B7 21 49 00 00 94 01 94 02 97 03 20 12 22 00 23 C9 F6 80 FF -> all zero
  1386A2: 0F 49 00 94 01 94 02 97 03 20 0E 22 00 23 C9 F6 50 FF 0B 49 00 94 01 94 02 97 03 20 0E 22 01 23 C9 F6 47 FF 08 49 04 20 00 90 02 20 01 90 02 97 03 20 0F 22 00 23 C9 F6 3C FF -> all zero
  138716: AD 21 49 00 00 97 01 97 02 94 03 20 0E 22 00 23 C9 F6 15 FF B6 21 49 00 00 97 01 97 02 94 03 20 0E 22 01 23 C9 F6 0B FF -> all zero
  138766: 1A 49 00 97 01 97 02 94 03 20 10 22 00 23 C9 F6 EE FE 16 49 00 97 01 97 02 94 03 20 10 22 01 23 C9 F6 E5 FE -> all zero
  1387AE: B7 21 49 00 00 97 01 97 02 94 03 20 12 22 00 23 C9 F6 C9 FE -> all zero
  138814: AD 20 40 00 80 46 00 94 01 94 02 95 03 20 41 46 0E 22 00 23 C9 F6 94 FE B6 26 76 00 00 94 01 94 02 95 03 20 31 1C 0E 22 01 23 C9 F6 89 FE -> all zero
  138866: 00 94 01 94 02 95 03 20 41 46 10 22 00 23 C9 F6 6E FE 00 94 01 94 02 95 03 20 31 1C 10 22 01 23 C9 F6 65 FE -> all zero
  1388B2: 09 49 00 94 01 94 02 95 03 20 12 22 00 23 C9 F6 48 FE -> all zero
  1388CC: 03 20 12 22 01 23 C9 F6 3F FE -> all zero
  1388EA: AD 21 49 00 04 26 00 96 01 25 01 95 00 24 02 94 03 20 0D 22 00 23 C9 F6 28 FE -> all zero
  138954: AD 20 40 00 80 46 00 94 01 94 02 95 03 20 41 46 0E 22 00 23 C9 F6 F4 FD B6 26 76 00 00 94 01 94 02 95 03 20 31 1C 0E 22 01 23 C9 F6 E9 FD -> all zero
  1389A6: 00 94 01 94 02 95 03 20 41 46 10 22 00 23 C9 F6 CE FD 00 94 01 94 02 95 03 20 31 1C 10 22 01 23 C9 F6 C5 FD -> all zero
  1389F2: 0F 49 00 94 01 94 02 95 03 20 12 22 00 23 C9 F6 A8 FD 0B 49 00 94 01 94 02 95 03 20 12 22 01 23 -> all zero
		  Implements: change the functionality of the tabs on the top of summary screen somehow, this will probably make sense given other changes
		  Relies on: layout rework to make this not look broken
! 138A80: 2F 22 23 23 -> 37 22 26 23 (jp 1A 22 1E 23 -> 22 22 21 23)
  138AA4: 53 22 23 23 -> 5B 22 26 23 (jp 3E 22 1E 23 -> 46 22 21 23)
  		  Implements: move type icons on summary screen down/right
		  Relies on: layout rework to make this not look broken
! 138ADA: 00 22 03 23 -> 0B 22 02 23
  138AFC: 24 22 03 23 -> 2F 22 02 23
		  Implements: move pokemon type icons on move summary screen up/right
		  Relies on: layout rework to make this not look broken
= 138B8C: sub_8138B8C (see 244disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
+ 13917E: 52 18 -> 0A 43 (guessing it fixes a bug in the move-reordering function, but can't identify what the bug was)
= 1391EC: sub_81391EC (see 245disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
= 139328: sub_8139328 (see 246disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
+ 1396D2: 07 22 2A 23 -> 06 22 3A 23 (jp 05 22 27 23 -> 04 22 37 23) (move something on summary screen down/left, no idea what)
! 1399AC, 1399F8, 139A24: 3C -> D0
  1399B0, 1399FC, 139A28: 41 -> 38
		  Implements: move pokemon sprite on summary screen up/right
		  Relies on: layout rework to make this not look broken
+ 139A6A, 139EC6: 01 70 -> 00 00 (don't flip pokemon sprites in summary screen)
+ 139CC0: 0A D1 -> 00 00 (pokeball on summary screen is always taken from mon data, ignoring unknown case (TEST on egg once pokeball inheritance works))
! 139CF4: 6A 21 58 22 -> 98 21 28 22
		  Implements: move pokeball on summary screen up/right
		  Relies on: layout rework to make this not look broken
! 139E5C: 18 -> E0
		  Implements: move pokemon icon on summary screen right
		  Relies on: layout rework to make this not look broken
! 13A028: 98 -> 20
		  Implements: move move selection cursor on summary screen left
		  Relies on: layout rework to make this not look broken
= 13A124: sub_813A124 (see 247disasm)
		  Implements: possibly move category icons on summary screen
		  Required knowledge: j0203B0E1, j06009140
		  Requires in future: fn_D7DEC0_J
+ 13A42E: 10 -> BA
  13A434: 2D -> 20
  13A44C: 10 -> 9A
  13A452: 26 -> 1C
		  Implements: no idea what this does
! 13A57E: 24 -> 59
		  Implements: move HP bar on summary screen down
		  Relies on: layout rework to make this not look broken
+ 13AC24: 72 21 5C 22 -> A4 21 24 22 (move something on summary screen up/right, no idea what)
+ 13AD98: 72 -> A4
  13AD9E: 5C -> 24
		  Implements: no idea what this does
! 13AF26: 08 -> AC
  13AF2C: 18 -> 24
  13AF40: 6A -> AC
  13AF46: 28 -> 24
		  Implements: move shiny star on summary screen down/right
		  Relies on: layout rework to make this not look broken
+ 13B040: 14 -> E0
  13B046: 5B -> 5C
		  Implements: move something on summary screen down/right, no idea what
! 13B870: Part of sub_813B870 (see 248disasm)
		  Implements: replaces the help system listener with a (very obfuscated) check that the SetSaveBlocksPointers and MoveSaveBlocks_ResetHeap functions were not altered; if they were, the game instantly crashes - this is checked every frame
		  Note: don't bother implementing this, thanks
+ 13B8E4: 00 D1 -> 00 00 (disables the help system; the above change does that already but I refuse to implement that)
+ 13D31C: sub_813D31C (see 249disasm)
		  Implements: displayed berry tag number in berry pouch is independent of internal item order - read from what G3T calls "mystery byte 02"
+ 13D668: 98 -> 88 (supposedly moves scroll arrows left in berry pouch, not sure what it really does)
= 13ED3C: sub_813ED3C (see 250disasm)
		  Implements: Need more info (possibly allows for a new type of hidden items (7), which contains more than 1x of the item? + something else itemfinder related (dings?))
		  Requires in future: fn_43FD84_J, fn_43FD94_J, fn_43FDA2_J
+ 13EED0: E0 -> F0
  13EED2: D2 02 -> 52 03
  13EED8: 0E -> 3C
  13EEE0, 13EEE8: 05 -> 0A
		  Implements: doubles the itemfinder radius
+ 13EF9C: sub_813EF9C (see 251disasm)
		  Implements: number of itemfinder arrows gradually increases as item is closer (instead of just close = 4 and far = 2)
! 15F9B4-1C68EC: [event scripts, just use advancemap for this part later]
! 1C6F34 (second one) -> 1300000 (repoint): Move_Pound (see animscripts.txt)
		  Implements: changes the Pound animation somehow (TEST)
		  GLITCH!: game crash
+ 1C6FB8 -> 1305D78 (repoint): Move_Poison_Powder (see animscripts.txt)
		  Implements: adds color fading to Poison Powder animation
+ 1C70E9 -> 1305EC0 (repoint): Move_Stun_Spore (see animscripts.txt)
		  Implements: adds color fading to Stun Spore animation
+ 1C7217 -> 1306008 (repoint): Move_Sleep_Powder (see animscripts.txt)
		  Implements: adds color fading to Sleep Powder animation
+ 1C7AF5 -> 1303958 (repoint): Move_Fire_Blast (see animscripts.txt)
		  Implements: adds a new background for Fire Blast animation
+ 1C8146: D4 -> D8 (remove a sound effect from Thunderbolt animation script, this might fix the associated glitch?)
+ 1C8BC1 -> 1306E60 (repoint): Move_Waterfall (see animscripts.txt)
		  Implements: improves the Waterfall animation
+ 1C9FA9 -> 1E2A2A0 (repoint): Move_Fiery_Dance (see animscripts.txt)
		  Implements: Fiery Dance animation
		  GLITCH!: The backgrounds are wrong when used by the player
+ 1CA0BE -> 1D2340 (repoint): Move_??? ([moveB0] has Will-O-Wisp animation)
+ 1CA6D1 -> 1308918 (repoint): Move_Earthquake (see animscripts.txt)
		  Implements: adds a new background for the Earthquake animation
+ 1CA99F: 19 80 00 C0 04 0C 19 80 00 C0 04 0C 19 80 00 C0 04 0C 19 80 00 C0 04 0C 19 80 00 C0 04 0C 05 0B 02 0D 04 01 08 ->
		  1C 80 00 C0 0C 05 04 0C 05 0B 02 0D 04 01 08 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
		  Implements: makes Agility animation script less redundant but doesn't seem to actually do anything functionally
+ 1CACD3 -> 93FB70 (repoint): Move_??? (see animscripts.txt)
		  Implements: [move8C] animation
+ 1CADE9: 19 -> 1C (properly loop a sound in Sky Attack's animation script, fixing a glitch specific to attacking your partner)
! 1CBFBC -> 1305900 (repoint): Move_Skill_Swap (see animscripts.txt)
		  Implements: changes background for Skill Swap animation
		  GLITCH!: game crash
+ 1CC0B8 -> 1CB4E1 (repoint): Move_??? ([move126] has Rapid Spin animation)
+ 1CC0FB -> 1308520 (repoint): Move_??? (see animscripts.txt)
		  Implements: [move127] animation
+ 1CC212 -> 1E29E90 (repoint): Move_??? (see animscripts.txt)
		  Implements: [move128] animation
+ 1CC513 -> 1D10C2 (repoint): Move_??? ([move12E] has Poison Tail animation)
+ 1CD2E0 -> 1307850 (repoint): Move_Ice_Punch (see animscripts.txt)
		  Implements: adds something to Ice Punch animation
+ 1CD6CA -> 1307770 (repoint): Move_Thunder_Punch (see animscripts.txt)
		  Implements: makes the fist in Thunder Punch animation yellow
+ 1CD793 -> 1C6F34 (repoint): Move_??? ([moveDD] has Pound animation, presumably placeholder)
+ 1CE29E -> 142C700 (repoint): Move_Mach_Volt (see animscripts.txt)
		  Implements: [move80]/Mach Volt animation
+ 1CE768 -> 1304EE0 (repoint): Move_Blizzard (see animscripts.txt)
		  Implements: completely overhauls Blizzard animation
+ 1CE9EE -> 13051B8 (repoint): Move_Hydro_Pump (see animscripts.txt)
		  Implements: completely overhauls Hydro Pump animation
+ 1CF75D -> 1C6F34 (repoint): Move_??? ([moveB1] has Pound animation, presumably placeholder)
+ 1CFA15 -> 13062A8 (repoint): Move_Flamethrower (see animscripts.txt)
		  Implements: adds a new background for Flamethrower animation
! 1CFECB -> 1E29F10 (repoint): Move_??? (see animscripts.txt)
		  Implements: [moveA7] animation
		  GLITCH!: game crash
! 1D08B5 -> 13076C0 (repoint): Move_Fire_Punch (see animscripts.txt)
		  Implements: adds something to Fire Punch animation
		  GLITCH!: game crash
+ 1D1518 -> 1E29BA0 (repoint): Move_??? (see animscripts.txt)
		  Implements: [moveA9] animation
+ 1D2E93 -> 1E29D80 (repoint): Move_??? (see animscripts.txt)
		  Implements: [move124] animation
+ 1D42C0 -> 1306918 (repoint): Move_Overheat (see animscripts.txt)
		  Implements: makes user in Overheat animation glow orange and adds a background
! 1D45B2 -> 13052A8 (repoint): Move_Hydro_Cannon (see animscripts.txt)
		  Implements: completely overhauls Hydro Cannon animation
		  GLITCH!: game crash
+ 1D499B -> 1E2A100 (repoint): Move_??? (see animscripts.txt)
		  Implements: [move162] animation
+ 1D4A9F -> 1CF1E2 (repoint): Move_??? ([move161] has Sludge Bomb animation)
= 1D51AA: 01 -> 03
  1D51BA: 03 -> 01
  1D51BC: CD 52 -> 6D 53
  1D51C4: 6D 53 -> CD 52
		  Implements: switches around weather cases for Weather Ball animation (sun -> "ice", sand -> "fire", hail -> "rock")
		  Relies on: probably means that the weather constant is changed from (none, sun, rain, sand, hail) to (none, hail, rain, sun, sand) (why???)
+ 1D53D9 -> 14294F0 (repoint): Move_Stone_Edge (see animscripts.txt)
		  Implements: Grand Boulder/Stone Edge animation
+ 1D5C5F -> 1303564 (repoint): General_TurnTrap (see animscripts.txt)
		  Implements: Infestation and Magma Storm end-of-turn animations
+ 1D65A8, 1D65EC, 1D66E0, 1D673C, 1D6744, 1D67A8 <except done on the new table>: 00 -> 26 (certain moves skip pointless Surf check, this doesn't actually do anything)
+ 1D6684 <except done on the new table>: 00 69 1D 08 -> C0 24 05 09 (BattleScript_EffectPowerSplit (see movescripts.txt))
		  Implements: Power Split
+ 1D6688 <except done on the new table>: 00 69 1D 08 -> E0 24 05 09 (BattleScript_EffectGuardSplit (see movescripts.txt))
		  Implements: Guard Split
+ 1D669C <except done on the new table>: 00 69 1D 08 -> 80 05 05 09 (BattleScript_EffectSynchronoise (see movescripts.txt))
		  Implements: Synchronoise
+ 1D66A4 <except done on the new table>: 00 69 1D 08 -> F0 05 05 09 (BattleScript_EffectHealPulse (see movescripts.txt))
		  Implements: Heal Pulse
+ 1D66A8 <except done on the new table>: 00 69 1D 08 -> A0 39 05 09 (BattleScript_EffectRandomPoisonOrParalyze (see movescripts.txt))
		  Implements: move that either poisons or paralyzes, randomly choosing which
+ 1D6760 <except done on the new table>: 00 69 1D 08 -> 80 0C 05 09 (BattleScript_EffectIncinerate (see movescripts.txt))
		  Implements: Incinerate
		  Glitch?: Due to off-by-one error, Retro Mail gets incinerated and Enigma Berry doesn't
		  Glitch?: No upper limit, so Power items, Apricorn balls, Honey, and Destiny Knot get incinerated
+ 1D67B4 <except done on the new table>: 00 69 1D 08 -> F8 39 05 09 (BattleScript_EffectStatBoostsToPower (see movescripts.txt))
		  Implements: Stored Power, (+6 speed = 110 power, +5/+4 speed = 100 power, +3/+2 speed = 90 power, else displayed base power)
= 1D67BC <except done on the new table>: FC 79 1D 08 -> EC 80 01 08 (BattleScript_EffectTailwind (j178FC, see movescripts.txt))
		  Implements: removes Synthesis effect entirely (folded into Morning Sun), adds new effect for Tailwind
		  Relies on: DoFieldEndTurnEffects changes (to make space)
= 1D67C0 <except done on the new table>: FC 79 1D 08 -> B8 80 01 08 (BattleScript_EffectTrickRoom (j178C8, see movescripts.txt))
		  Implements: removes Moonlight effect entirely (folded into Morning Sun), adds new effect for Trick Room
		  Relies on: DoFieldEndTurnEffects changes (to make space)
+ 1D67DC <except done on the new table>: 00 69 1D 08 -> C0 0F 05 09 (BattleScript_EffectChipAway (see movescripts.txt))
		  Implements: Chip Away/Sacred Sword
		  Glitch?: supposed to ignore evasion boosts, but accuracy is calculated before temporarily setting stats to +0, so this doesn't work
= 1D6834 <except done on the new table>: 00 69 1D 08 -> A0 10 05 09 (BattleScript_EffectHeadSmash (see movescripts.txt))
		  Implements: 50% recoil effect
		  Relies on: changes at 020F78
= 1D68C8 <except done on the new table>: 55 6A 1D 08 -> E0 01 05 09 (BattleScript_ParameterizedEffectHitAnd30PercentInfatuation (see movescripts.txt))
		  Implements: removes Blaze Kick effect entirely (folded into burn hit), adds new effect for BattleScript_ParameterizedEffectHit but with an additional 30% chance to infatuate the target
		  Required knowledge: whether the area around gStringVar4 is the same in en
		  Relies on: BattleScript_Parameterized
		  Note: change Blaze Kick's effect byte first
= 1D68EC <except done on the new table>: DC 69 1D 08 -> 80 3A 05 09 (BattleScript_EffectAtkAndSpAtkUp (see movescripts.txt))
		  Implements: removes Poison Tail effect entirely (folded into poison hit), adds new effect for +Atk/+Sp. Atk moves (modern Growth, Work Up, Energize)
		  Relies on: weather refactor, BattleScript_Parameterized (to not break Poison Tail)
		  Note: stat boost anim was wrong, see movescripts.txt
+ 1D696D -> 1050000 (repoint): BattleScript_EffectSleep_New (see movescripts.txt)
		  Implements: [move27E]
+ 1D69DC -> 1050040 (repoint): BattleScript_EffectPoisonHit_New (see movescripts.txt)
		  Implements: [move12E]
+ 1D69E7 -> 1050060 (repoint): BattleScript_EffectAbsorb_New (see movescripts.txt)
		  Implements: Draining Kiss
= 1D6A55 (first one), 1D6A60, 1D6A6B, 1D6DB2, 1D6E69, 1D6E7D, 1D6900 (the one after 1D6FC8), 1D725F, 1D726A, 1D7275, 1D7280, 1D728B, 1D6900 (the one after 1D7296), 1D72C9, 1D6900 (the one after 1D750D), 1D752C, 1D7977, 1D7A47, 1D7E16, 1D817E -> 1054000 (repoint): BattleScript_ParameterizedEffectHit (see movescripts.txt)
  1D7119, 1D7124, [effectD9], [effectDA] -> 1053720 (repoint): BattleScript_ParameterizedEffectAltTypeCalcHit (see movescripts.txt)
  1D6B77, 1D6B82, 1D6900, 1D6B8D, 1D6900, 1D6900, 1D6B98 -> 1054010 (repoint): BattleScript_ParameterizedStatUp (see movescripts.txt)
  1D6BEC, 1D6BF7, 1D6900 (the one before 1D6C02), 1D6C02, 1D6C0D -> 1054020 (repoint): BattleScript_ParameterizedStatDown (see movescripts.txt)
  [none yet] -> 1054030 (repoint): BattleScript_ParameterizedStatDownPerfectAccuracy (see movescripts.txt)
		  Implements: refactor all additional-effect hit moves and stat-up/stat-down moves into a parameterized script to reduce redundant code (too many actual moves to list here, see the move list near the top; below is the list of effects refactored by this)
			EffectHit: EFFECT_BURN_HIT, EFFECT_FREEZE_HIT, EFFECT_PARALYZE_HIT, EFFECT_FLINCH_HIT, EFFECT_PAY_DAY, EFFECT_TRI_ATTACK, EFFECT_HIGH_CRIT, EFFECT_ATTACK_DOWN_HIT, EFFECT_DEFENSE_DOWN_HIT, EFFECT_SPEED_DOWN_HIT, EFFECT_SPECIAL_ATTACK_DOWN_HIT, EFFECT_SPECIAL_DEFENSE_DOWN_HIT, EFFECT_ACCURACY_DOWN_HIT (indirectly), EFFECT_EVASION_DOWN_HIT, EFFECT_CONFUSE_HIT, EFFECT_SELF_STATUS_HIT, EFFECT_SLEEP_HIT, EFFECT_THAW_HIT, EFFECT_STAT_UP_HIT, EFFECT_UPROAR, EFFECT_SUPERPOWER, EFFECT_STAT_TWO_DOWN_HIT (indirectly), EFFECT_0xD9, EFFECT_TARGET_STAT_UP_HIT
			EffectAltTypeCalcHit: EFFECT_0x35, EFFECT_0x36
			StatUp: EFFECT_ATTACK_UP, EFFECT_DEFENSE_UP, EFFECT_SPEED_UP, EFFECT_SPECIAL_ATTACK_UP, EFFECT_SPECIAL_DEFENSE_UP, EFFECT_ACCURACY_UP, EFFECT_EVASION_UP
			StatDown: EFFECT_ATTACK_DOWN (indirectly), EFFECT_DEFENSE_DOWN, EFFECT_SPEED_DOWN, EFFECT_SPECIAL_ATTACK_DOWN (indirectly), EFFECT_SPECIAL_DEFENSE_DOWN, EFFECT_ACCURACY_DOWN, EFFECT_EVASION_DOWN
			StatDownPerfectAccuracy: EFFECT_ATTACK_DOWN (indirectly), EFFECT_SPECIAL_ATTACK_DOWN (indirectly)
		  Required knowledge: whether the area around gStringVar4 is the same in en
		  Note: code is horrifying, get someone to fix this
		  Glitch?: Zen Headbutt is missing its flinch chance, Double Spin is missing its +Atk chance, and Poison Leaf is missing its poison chance (might just be transcription errors)
		  Note: check Magnet Force in Vega; if it lowers the user's stats, fix the Vega description; if it lowers the target's stats, it's bugged in PD
+ 1D6A76 -> 1053960 (repoint): BattleScript_EffectExplosion_New (see movescripts.txt)
  1D6AF6 -> 1053968 (repoint): BattleScript_EffectDreamEater_New (see movescripts.txt)
  1D6F01 -> 1053970 (repoint): BattleScript_EffectRazorWind_New (see movescripts.txt)
  1D6FC8 -> 1053978 (repoint): BattleScript_EffectTrap_New (see movescripts.txt)
  1D6FF9 -> 1053980 (repoint): BattleScript_EffectDoubleHit_New (see movescripts.txt)
  1D7092 -> 1053988 (repoint): BattleScript_EffectRecoil_New (see movescripts.txt)
  1D72A1 -> 10539A8 (repoint): BattleScript_EffectSkyAttack_New (see movescripts.txt)
  1D734D -> 10539B0 (repoint): BattleScript_EffectRage_New (see movescripts.txt)
  1D774D -> 10539C8 (repoint): BattleScript_EffectCurse_New (see movescripts.txt)
  1D78BB -> 10539D0 (repoint): BattleScript_EffectSwagger_New (see movescripts.txt)
  1D7954 (first) -> 10539D8 (repoint): BattleScript_EffectReturn_New (see movescripts.txt)
  1D7954 (second) -> 10539E0 (repoint): BattleScript_EffectFrustration_New (see movescripts.txt)
  1D7A9F -> 1053A00 (repoint): BattleScript_EffectSkullBash_New (see movescripts.txt)
  1D7AEE -> 1053A08 (repoint): BattleScript_EffectTwister_New (see movescripts.txt)
  1D7B13 -> 1053A10 (repoint): BattleScript_EffectEarthquake_New (see movescripts.txt)
  1D7BAE -> 1053A18 (repoint): BattleScript_EffectGust_New (see movescripts.txt)
  1D7BCD -> 1053A20 (repoint): BattleScript_EffectStomp_New (see movescripts.txt)
  1D7BE3 -> 1053A28 (repoint): BattleScript_EffectSolarBeam_New (see movescripts.txt)
  1D7C39 -> 1053A30 (repoint): BattleScript_EffectThunder_New (see movescripts.txt)
  1D7CE1 -> 1053A38 (repoint): BattleScript_EffectSemiInvulnerable_New (see movescripts.txt)
  1D7DDF -> 1053A40 (repoint): BattleScript_EffectFakeOut_New (see movescripts.txt)
  1D7ECD -> 1053A48 (repoint): BattleScript_EffectFlatter_New (see movescripts.txt)
  1D7F2B -> 1053A50 (repoint): BattleScript_EffectWillOWisp_New (see movescripts.txt)
  1D8042 -> 1053A58 (repoint): BattleScript_EffectFacade_New (see movescripts.txt)
  1D8511 -> 1053A78 (repoint): BattleScript_EffectSkyUppercut_New (see movescripts.txt)
		  Implements: adds a duplicate attackcanceler and attackstring to the scripts; this makes two-turn moves display the name on the first turn, but this doesn't explain the rest - only guess is that this is somehow related to the change in atk02_attackstring
		  Note: message scrolls off too soon, maybe add wait
= 1D6ABE, 1D6AD9, 1D6D4A, 1D7663, 1D7B78, 1D7B90, 1D7CDA, 1D839C, 1D94E8, 1D9502, 1D9519: 10 -> 12
  1D6D8F: 02 -> 03
  1D6D98, 1D89A1: 04 -> 05
  1D76C4, 1D8E7E: 0E -> 10
  1D89AA, 1D9AE0, 1D9B0F, 1D9B33, 1D9B55, 1D9B77: 0F -> 11
  1D89D6: 03 -> 04
  1D89D9: 06 -> 07
  1D8E7B: 0B -> 0C
		  Implements: part of moveend refactor
= 1D6BE1 -> 1052DB0 (repoint): BattleScript_EffectAttackDown (see movescripts.txt)
  1D6900 (the one after 1D6BF7) -> 1052470 (repoint): BattleScript_AttackDown_Standard (see movescripts.txt)
		  Implements: Confide, Play Nice, Strength Sap; also refactors into the parameterized script
		  Relies on: BattleScript_ParameterizedStatDown, BattleScript_ParameterizedStatDownPerfectAccuracy
+ 1D6C72 -> 10500E0 (repoint): BattleScript_EffectHaze_New (see movescripts.txt)
		  Implements: Clear Smog
		  Relies on: BattleScript_DamageAndEffect
+ 1D6C83 -> 10500B0 (repoint): BattleScript_EffectBide (see movescripts.txt)
		  Implements: adds an accuracy check to Magic Coat, but it's specified elsewhere to not miss anyway? (also, since when did Magic Coat have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
+ 1D6CB1 -> 10519C0 (repoint): BattleScript_EffectPhaze (see movescripts.txt)
		  Implements: Dragon Tail/Circle Throw
		  Relies on: BattleScript_DamageAndEffect
+ 1D6CCD: 01 60 69 1D 08 -> 00 00 00 00 00 (Roar/Whirlwind have perfect accuracy)
+ 1D6D51, 1D766A: 40 -> 00 (Endure displays the pokemon getting hit and enduring all hits of multihit moves, not the old behavior of it hitting once then getting endured)
+ 1D6D9D -> 10502D0 (repoint): BattleScript_EffectFreeze (see movescripts.txt)
		  Implements: removes Conversion entirely, adds new effect for moves that freeze without doing damage (aka Hypnosis for freeze)
= 1D6F99 -> 1053760 (repoint): BattleScript_EffectSetDamageOrMove29F (see movescripts.txt)
		  Implements: [move29F] does regular damage with two exceptions: it bypasses Levitate, and it uses an altered type chart where Water is weak to Ice and Poison and Flying is neutral to Ground; condenses Sonic Boom into Dragon Rage's effect slot to free up space
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), BattleScript_UseGem (e1FD42, j1F552), HasItemWithTypeEffect, AteAbilityConversionTable (j168CB4), gChosenActionByBattler changed to something else
		  Relies on: AlternateTypeCalc (j1833D0)
		  Glitch: AteAbilityConversionTable ptr is wrong, currently points to j168CA4; fix when importing (not like it matters)
		  Glitch?: the Levitate bypassing is done by temporarily swapping abilities, which means if used on a target with Levitate, [move29F] doesn't receive the effects of the user's Adaptability, Normalize, Tinted Lens, or Klutz (as in, Expert Belt actually works despite Klutz); the target receives the effects of the user's Solid Rock, Filter, and Wonder Guard; and if both mons have Levitate, the target is still immune to the move
		  Note: change Sonic Boom's effect byte first
+ 1D7011: BattleScript_EffectRecoilIfMiss (see movescripts.txt)
		  Implements: [High] Jump Kick crashes through Ghost-types, always does half HP recoil
		  Relies on: atk80_manipulatedamage changes
= 1D70F8 -> 105039D (repoint): BattleScript_EffectConfuseAndLowerEvasion (see movescripts.txt)
		  Implements: removes +2 Atk effect entirely (folded into +1 Atk), adds new effect for confuse + -1 evasion
		  Glitch?: Stench and Oblivious block this move entirely?
		  Relies on: BattleScript_Parameterized (to not break existing +2 Atk)
= 1D7103 -> 10527C0 (repoint): BattleScript_EffectSpAtkOrSpeedUpHit (see movescripts.txt)
		  Implements: removes +2 Def effect entirely (folded into +1 Def), adds new effect for (if target moved first, damage with chance to raise speed; otherwise, damage with chance to raise sp. atk)
		  Relies on: BattleScript_Parameterized (to not break existing +2 Def)
= 1D710E -> 1053998 (repoint): BattleScript_EffectPaybackAndHitsSteelDouble (see movescripts.txt)
		  Implements: removes +2 Speed effect entirely (folded into +1 Speed), adds new effect for (Payback that always doubles power vs Steel-types)
		  Relies on: BattleScript_Parameterized (to not break existing +2 Speed)
= 1D7142 -> 1052500 (repoint): BattleScript_EffectPowerSwap (see movescripts.txt)
		  Implements: removes -2 Atk effect entirely (folded into -1 Atk), adds new effect for Power Swap
		  Relies on: BattleScript_Parameterized (to not break existing -2 Atk)
= 1D714D -> 1052520 (repoint): BattleScript_EffectGuardSwap (see movescripts.txt)
		  Implements: removes -2 Def effect entirely (folded into -1 Def), adds new effect for Guard Swap
		  Relies on: BattleScript_Parameterized (to not break existing -2 Def)
= 1D7158 -> 1052540 (repoint): BattleScript_EffectReflectType (see movescripts.txt)
		  Implements: removes -2 Speed effect entirely (folded into -1 Speed), adds new effect for Reflect Type
		  Relies on: BattleScript_Parameterized (to not break existing -2 Speed)
= 1D7163 -> 1050590 (repoint): BattleScript_EffectFoulPlay (see movescripts.txt)
		  Implements: removes -2 Sp. Def effect entirely (folded into -1 Sp. Def), adds new effect for Foul Play/[move27B]
		  Relies on: BattleScript_Parameterized (to not break existing -2 Sp. Def)
+ 1D71F6: Part of BattleScript_EffectParalyze (see movescripts.txt)
		  Implements: Electric-type paralysis immunity (Thunder Wave)
= 1D7296 -> 1052F40 (repoint): BattleScript_EffectAccuracyDownHit (see movescripts.txt)
		  Implements: [move29E], also refactors into the parameterized script
		  Relies on: BattleScript_ParameterizedEffectHit
= 1D741B -> 10539B8 (repoint): BattleScript_EffectDoubleDamageOnStatus (see movescripts.txt)
		  Implements: removes Psywave effect entirely, adds new effect for (does double damage to poisoned targets (but NOT toxiced targets)), Hex, and moves that cure status and double damage when they do so (Smelling Salts is moved into this effect, plus options for Wake-Up Slap, (double damage if it cures infatuation), (double damage if it cures burn), (double damage if it cures freeze), and (double damage if it cures poison))
		  Relies on: changes at 0x20F00
		  Note: Since it just displays status cure msg in real games, rewrite this code for correct msg
+ 1D7433 -> 10539C0 (repoint): BattleScript_EffectCounter_New (see movescripts.txt)
		  Implements: [move2A7]
		  Note: message scrolls off too soon, maybe add wait
+ 1D749C -> 1050AA0 (repoint): BattleScript_EffectUsableWhileAsleep (see movescripts.txt)
		  Implements: condenses Sleep Talk into Snore's effect slot to free up space
+ 1D74D6 -> 1050AC0 (repoint): BattleScript_EffectVenomDrench (see movescripts.txt)
		  Implements: removes Conversion 2 entirely, adds new effect for Venom Drench/[move2A3]
		  Relies on: BattleScript_DamageAndEffect, BattleScript_LowerOneOfMultipleStats
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+ 1D7581, 1D81B5, 1D82AB, 1D8417: 00 -> 26 (certain moves skip pointless Surf check, this doesn't actually do anything)
+ 1D75E6 -> 1052250 (repoint): BattleScript_EffectBestow (see movescripts.txt)
		  Implements: removes Triple Kick entirely, adds new effect for Bestow
+ 1D76C9 -> 1052620 (repoint): BattleScript_EffectThief (see movescripts.txt)
		  Implements: Unclear, only change seems to be that the Sticky Hold message is different
		  Relies on: BattleScript_DoDamageFunction
+ 1D76D4 -> 1053AD0 (repoint): BattleScript_EffectEscapePrevention (see movescripts.txt)
		  Implements: Spirit Shackle, etc.; Ghost-type immunity to trapping
+ 1D7747: 17 -> 27 (Minimize +1 -> +2 evasion)
+ 1D7938 -> 1052B20 (repoint): BattleScript_EffectFailsOnSameGender (see movescripts.txt)
		  Implements: Captivate, [move2A6]
		  Relies on: atk97_tryinfatuating changes
		  Glitch?: Mold Breaker is done by swapping abilities, meaning Simple targets (and probably others) won't work right?
+ 1D7995 -> 10539E8 (repoint): BattleScript_EffectSwitchOutMove (see movescripts.txt)
		  Implements: U-Turn/Volt Switch
		  Note: "went back to" is missing, fix later
= 1D79CD -> 10539F0 (repoint): BattleScript_EffectPunishment (see movescripts.txt)
		  Implements: removes Sonic Boom effect entirely (folded into Dragon Rage), adds new effect for Punishment
		  Relies on: BattleScript_EffectSetDamageOrMove29F (to not break existing Sonic Boom)
		  Note: "failed" should probably be "missed"
		  Note: This isn't how Punishment works at all?
= 1D7A31 -> 1697DA0 (repoint): BattleScript_EffectBurnUserAndTarget (see movescripts.txt)
		  Implements: removes -Def chance effect entirely (folded into something else), adds new effect that burns user and target
		  Relies on: BattleScript_Parameterized (to not break existing -Def chance)
= 1D7A3C -> 1697D00 (repoint): BattleScript_EffectPoisonUserAndTarget (see movescripts.txt)
		  Implements: removes -Atk chance effect entirely (folded into something else), adds new effect that poisons user and target
		  Relies on: BattleScript_Parameterized (to not break existing -Atk chance)
= 1D7BF5: 60 -> 30 (part of weather refactor - sun)
+ 1D805C -> 1052E60 (repoint): BattleScript_EffectMustFocus (see movescripts.txt)
		  Implements: some move that does +2 Def/+2 Sp. Def but only if the user isn't attacked
		  GLITCH!: crashes if Defense is at +6 but Sp. Def isn't
= 1D806E -> 1053A60 (repoint): BattleScript_EffectPlusSpeedDoubleDamageMinusSpeedNoDamage (see movescripts.txt)
		  Implements: removes Smelling Salts effect entirely (folded into DoubleDamageOnStatus), adds new effect for (double damage on target with speed boosts, does no damage to target with speed drops)
		  Relies on: BattleScript_EffectDoubleDamageOnStatus (to not break Smelling Salts)
+ 1D80B6 -> 11BA88C (repoint): BattleScript_EffectCharge_New (see movescripts.txt)
		  Implements: Charge Sp. Def boost
		  Relies on: changes at 1D80BA
		  Note: Code is hideously broken, fix later
+ 1D80BA: 09 0A -> 00 00
		  Implements: removes Charge animation (moved to BattleScript_EffectCharge_New)
		  Relies on: BattleScript_EffectCharge_New
+ 1D80F8 -> 1055D80 (repoint): BattleScript_EffectTrick (see movescripts.txt)
		  Implements: Trick no longer fails when used by the AI
		  Note: Sticky Hold message scrolls off too soon, maybe add wait
+ 1D8126 -> 1050440 (repoint): BattleScript_EffectAbilityTransfer (see movescripts.txt)
		  Implements: Entrainment; condenses Skill Swap into Role Play's effect slot to free up space
= 1D8189 -> 1050480 (repoint): BattleScript_EffectMagicCoat (see movescripts.txt)
		  Implements: adds an accuracy check to Magic Coat, but it's specified elsewhere to not miss anyway? (also, since when did Magic Coat have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
+ 1D82A9 -> 1053A70 (repoint): BattleScript_EffectHPScaled (see movescripts.txt)
		  Implements: Wring Out/Crush Grip
		  Relies on: atkD9_scaledamagebyhealthratio changes
+ 1D82AF -> 1051160 (repoint): BattleScript_EffectChangeTargetAbility (see movescripts.txt)
		  Implements: Gastro Acid, Worry Seed, Simple Beam
= 1D82CB -> 10504A0 (repoint): BattleScript_EffectImprison (see movescripts.txt)
		  Implements: adds an accuracy check to Imprison, but it's specified elsewhere to not miss anyway? (also, since when did Imprison have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
= 1D830C -> 10504C0 (repoint): BattleScript_EffectSnatch (see movescripts.txt)
		  Implements: adds an accuracy check to Snatch, but it's specified elsewhere to not miss anyway? (also, since when did Snatch have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
= 1D8415 -> 1051220 (repoint): BattleScript_EffectWeatherDependent (see movescripts.txt)
		  Implements: Raid, weather ball animation in sandstorm is set to the animation in hail
		  Relies on: weather refactor
= 1D841B -> 1053B60 (repoint): BattleScript_EffectStatTwoDownHit (see movescripts.txt)
		  Implements: [move289]
		  Relies on: BattleScript_Parameterized, BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
= 1D8A72: 02 -> 01 (part of DoFieldEndTurnEffects changes)
= 1D8B6E: Part of BattleScript_LeechSeedTurnDrain (see movescripts.txt)
		  Implements: Magic Guard (vs Leech Seed)
		  Relies on: script at j17D18
		  Note: implementation is actually caused by atk88_negativedamage changes, this just enables that to work on Leech Seed
		  Note: Looks broken for Magic Guard vs Liquid Ooze case
+ 1D8C10 -> 1051B20 (repoint): BattleScript_SuccessForceOut (see movescripts.txt)
		  Implements: if the move used to force out was above ID 0x200, don't play the move animation (presumably for dragon tail, etc.)
+ 1D9015 -> 1052EE0 (repoint): BattleScript_FocusPunchSetUp (see movescripts.txt)
		  Implements: [move2A7] prints string 0x217 instead of "tightening its focus"; need more info
		  Note: it doesn't actually do this, some other change probably needed
+ 1D90B1 -> 018539 (repoint): BattleScript_MoveUsedFlinched (10 4A 00 12 40 00 1E 01 50 4B 85 01 08 28 4E 69 1D 08 2E DE 3F 02 02 13 89 41 4E 69 1D 08 29 00 87 3E 02 02 02 4E 69 1D 08 47 45 01 01 D4 3F 02 02 10 A2 01 12 40 00 28 4E 69 1D 08) (implements steadfast)
+ 1D9366: 1C -> 16 (resets the statchanger, needed for Intimidate to keep working after addition of Defiant)
+ 1D9444 -> 1050260 (repoint): BattleScript_ObliviousPreventsAttraction (see 57disasm)
		  Implements: Oblivious changed from "prevents romance" to "made [MOVE] useless", EXCEPT for move ID 0x257 ("prevents romance" presumably replaced with new msg)
		  Note: more coding needed to re-add "prevents romance"
= 1D9C1C: ptr ED BC 1D 08 -> 30 C0 1F 09 (add new AI table entry for script at 11FC030)
		  Implements: New level of smart AI (enough stuff to warrant breaking the usual format)
		  * Won't use Explosion
		  * Won't use status moves on Substitute (unless Infiltrator or sound move)
		  * At full HP with Focus Sash, won't use status moves if it could be brought down to its sash
		  * Won't use moves that would be blocked by immunity abilities
		  * At full HP with Focus Sash, tries to use priority if the target is faster and it could be brought down to its sash
		  * If target just used Sucker Punch, tries to use status moves
		  * Tries to use a move that can KO
		  * If it can KO, tries to use the most powerful move it has
		  * If it can KO and isn't choiced, tries to use moves with 100% accuracy
		  * If it can KO and isn't choiced, tries to use moves with perfect accuracy
		  * If it can KO and isn't choiced and the target is faster, tries to use priority
		  * If its party has an average Speed of lower than 100 (or higher than 100 in Trick Room), tries to use Trick Room (and tries not to if not)
		  * If choiced and has no living teammates, won't use moves with less than 5 power (aka status and variable BP)
		  * If choiced and has no living teammates, won't use moves that anyone on the target's team is immune to
		  * Won't use Trick on a Substitute
		  * Tries to use Foul Play if the target last used a physical move
		  * (something, glitched) to Foul Play if the target last used a special move, or last used a status move but has higher Sp. Atk
		  * Tries to use [move27B] if the target last used a special move
		  * (something, glitched) to [move27B] if the target last used a physical move, or last used a status move but has higher Attack
		  * Tries to use Baton Pass if it has living teammates and it has a type advantage
		  * Won't use Sucker Punch if the target is slower
		  * Won't use Sucker Punch if it has a type advantage
		  * If target doesn't have active Focus Sash and can be OHKOed, tries to use Sucker Punch
		  * If target just used an attack, tries to use Sucker Punch
		  * If target is offensive and choiced, tries to use Sucker Punch
		  * If target is offensive, uses Sucker Punch less often if the move has low PP
		  * If target is offensive, the move has low PP, and the user can be KOed, tries to use Sucker Punch
		  * If target is defensive and just used a status move, won't use Sucker Punch
		  * Tries not to use Rest unless it has a berry or Hydration in rain
		  * Tries to use Pursuit if it has a type advantage
		  * (effect list for below: +Atk, +Spe, (+2 Atk +2 Def -1 Spe), Quiver Dance, Coil, Shell Smash, (+Atk +Spe +evasion), (+Spe +evasion), Hone Claws, Focus Punch, OHKO)
		  * Tries to use effectlist moves if behind Substitute
		  * Tries to use effectlist moves if it has a type advantage
		  * Tries to use effectlist moves if Focus Sash active
		  * Won't use effectlist moves if it can be OHKOed
		  * Tries to use effectlist moves in general
		  * Tries to heal if target slower and not at full HP
		  * Won't heal if target slower and at more than 70% HP
		  * Tries to heal if target doesn't have Snatch
		  * Tries to heal even if target has Snatch, if at less than half HP
		  * Tries to use Protect or Substitute with Speed Boost or Moody
		  * Won't use Protect or Substitute twice in a row
		  * Tries to use Substitute (or Protect, oversight) if has pinch berry
		  * Tries to use Protect or Substitute if poisoned with Poison Heal
		  * Tries not to use Protect or Substitute if poisoned without Poison Heal
		  * Tries to use Protect or Substitute with Ice Body or Snow Cloak in hail
		  * Tries to use Protect or Substitute with Rain Dish in rain
		  * Tries to use Protect or Substitute with Sand Veil in sand
		  * Tries to use Taunt if target is defensive
		  * Tries to use Taunt if target just used a status move
		  Required knowledge: j0203B970, j0203D500
		  Requires in future: IsMoveBlockedByAbility (j251DA0)
		  Glitch?: Foul Play logic has cases that loop back to the start of the AI function, this may cause infinite loops
		  Glitch?: [move27B] checks if a move isn't special to determine that it is physical - but it could be status too; fix this by moving the status move check above that
		  Glitch?: sub encouragement for berries only checks Lansat (?)
= 1D9C74 -> 1005000 (repoint): AI_CheckBadMove
		  Implements: enough stuff to warrant breaking the usual format
		  * Bugfixes: checks for "ultra effective" as well against Wonder Guard instead of strictly exactly 2x SE
		  * Other improvements: Safeguard, Curse, Yawn, and Taunt are now checked; Sky Attack counts as a risky move; Curse isn't used when at less than half HP at the start of the turn; AI will now use Knock Off on itemless foes (due to buff)
		  * New mechanics that old scripts are updated for: electric-type paralysis immunity, dark-type Prankster immunity, grass-type powder immunity, Lightning Rod (immunity), Motor Drive, Poison Heal, Magic Guard, Leaf Guard, Storm Drain, Overcoat, Big Pecks, Sap Sipper, Aroma Veil, Sweet Veil, Bulletproof, Dazzling, Queenly Majesty
		  * Moves that bypass AI restrictions: burn moves that aren't Will-O-Wisp (this only bypasses the Fire-type check); trapping moves that aren't Mean Look / Block (aka Spirit Shackle, etc); switch-out moves that aren't Baton Pass (aka U-Turn/Volt Switch); stat-resetting moves that aren't Haze (aka Clear Smog); phazing moves that aren't Roar / Whirlwind (aka Dragon Tail/Circle Throw)
		  * New moves: Captivate, 0x2A6 (factored into Attract script)
		  * New move effects: freeze, (confuse and lower evasion), Power Swap, Guard Swap, Reflect Type, Synchronoise, (poison or paralysis, chooses one at random), Venom Drench, Tailwind, (burn user and target), (poison user and target), Work Up, Dizzy Whirl, (overwrites a random one of the target's moves with [move240]), (lowers Sp. Atk and Sp. Def), (+2 Attack +2 Defense -1 Speed to user), Quiver Dance, Coil, Shell Smash, (boosts Attack, Speed, and evasion), (boosts Speed and evasion), Hone Claws
		  Relies on: new AI script commands
		  Glitch?: due to misaligned goto, only will-o-wisp is checked for prankster immunity
		  Glitch?: looks like thunder wave is checked against electric-types twice instead of electric and ground (might be a transcription error? test this)
		  Glitch?: freeze effect (1E) checks Flame Body instead of Magma Armor
		  Glitch?: Reflect Type -> Synchronoise -> Power Swap is fallthrough
		  Glitch?: [move2A3] won't be used if Venom Drench would have no effect, despite also doing damage
= 1DA445 -> 1005C00 (repoint): AI_CheckViability
		  Implements: enough stuff to warrant breaking the usual format
		  * Bugfixes: won't use a speed-lowering move like Mud Shot if the target is immune; no longer inexplicably encourages Toxic when it has a +SpDef move; no longer inexplicably discourages Protect/encourages Snatch when the opponent has specifically Defense Curl; Protect/Snatch correctly factors in all healing moves instead of just vanilla Recover-types; sandstorm and hail are no longer the wrong way around in the Fly script; Facade correctly checks the user for status instead of the target; Brick Break is encouraged vs Light Screen, not just Reflect
		  * Other improvements: instead of a bizarre mix of moves, Mirror Move tries to prioritize any copiable move; doesn't discourage recovery when the user is faster; encourages OHKO moves after use of Mind Reader; Mean Look (because Spirit Shackle uses the same effect byte), Dragon Dance (why?), and Knock Off are no longer encouraged to be Encored; Teleport and +Sp. Def are encouraged to be Encored; instead of encouraging stealing a short list of items, Thief is encouraged for all items that don't have a downside; Chlorophyll users prioritize Sunny Day; Volt Absorb, Water Absorb, Soundproof, Thick Fat, Flame Body, and Shell Armor are considered "good" abilities; "bad" abilities (to avoid/get rid of) are also listed
		  * New mechanics that old scripts are updated for: p/s split (also includes removing the discouraging of, for example, -Atk moves or Reflect on a water-type since it can have physical STAB now), new Lightning Rod, Dry Skin, Hydration, Solar Power, Leaf Guard, Flower Gift, [ability8B], Choice items, Assault Vest, Lagging Tail
		  * New moves: 0x22D, 0x27C (factored into Eruption script); 0x161, Hex, Wake-Up Slap, 0x265, 0x266, 0x267, 0x283 (factored into double-damage-on-status script); 0x258, 0x272, 0x27A (factored into Brine script); Hone Claws (factored into (does double damage if used immediately after Hone Claws) script)
		  * New move effects: (confuse and lower evasion), (Payback that always doubles power vs Steel-types), Power Swap, Guard Swap, Synchronoise, (poison or paralysis, chooses one at random), double-damage-on-status effects, Venom Drench, Trick Room, Work Up, Hammer Arm, Close Combat, V-Create, Hurricane, Brine, (removes Reflect/Light Screen from the user's side, but does double damage when it does), (does double damage if used immediately after Hone Claws), (lowers Sp. Atk and Sp. Def), (+2 Attack +2 Defense -1 Speed to user), Quiver Dance, Coil, Shell Smash, (boosts Attack, Speed, and evasion), (boosts Speed and evasion), Hone Claws, Payback, Psycho Shift, Acrobatics, Metal Burst
		  Relies on: new AI script commands
		  Glitch?: due to misaligned goto, Substitute will fall through into the Hyper Beam logic under certain circumstances
		  Glitch?: due to misaligned goto, (Payback that always doubles power vs Steel-types) will probably crash
		  Glitch?: might cause inexplicable use of recovery moves at full HP, this might be a misreading though (test)
		  Glitch?: Destiny Knot is considered a "bad" item for Thief?
		  Glitch?: an AI script for Sandstorm is fully implemented but not actually accessed
		  Glitch?: Psycho Shift -> Acrobatics is fallthrough
		  Glitch?: Venom Drench uses Lock-On's AI script
+ 1DBA8D -> 1007300 (repoint): AI_SetupFirstTurn
		  Implements: changes which moves the AI counts as setup (removes every +2/-2, Conversion; adds sleep, Toxic, (confuse and lower evasion), (poison or paralysis, chooses one at random), (burn user and target), (poison user and target), Charge, Work Up, Dragon Dance, Dizzy Whirl, (lowers Sp. Atk and Sp. Def), (+2 Attack +2 Defense -1 Speed to user), Quiver Dance, Coil, Shell Smash, (boosts Attack, Speed, and evasion), (boosts Speed and evasion), Hone Claws)
		  GLITCH!: This actually does nothing at all due to a misplaced pointer
+ 1DBB3B -> 1007380 (repoint): AI_Unknown
		  Implements: AI layer that discourages supereffective moves for some reason
+ 1DD0C9: C5 -> CC (no idea what this does (m4a))
+ 1E3B27: D0 -> E0 (no idea what this does (isagbprn))
! 1EA14C+: [text and data, go through here thoroughly later; jp 1D9634+]


= ?????? (j20E550): Move_Shadow_Claw (see animscripts.txt)
		  Implements: Shadow Claw animation
= ?????? (j20E5A0): Move_Dark_Cutter (see animscripts.txt)
		  Implements: Dark Cutter animation
= ?????? (j221B78): movement action function 0xC2
  ?????? (j221B94): movement action function 0xC3
  ?????? (j221BB0): movement action function 0xC4  
  ?????? (j221BCC): movement action function 0xC5 (see 271disasm)
		  Implements: works like regular walking, but the directions are different (south/west = southwest, north = northwest, east = southeast)
= ?????? (j221BE8): movement action function 0xC6
  ?????? (j221C04): movement action function 0xC7
  ?????? (j221C20): movement action function 0xC8
  ?????? (j221C3C): movement action function 0xC9 (see 272disasm)
		  Implements: works like regular walking, but the directions are different (north/east = northeast, south = southeast, west = northwest)
= ?????? (j221D08): movement action function 0xD2
  ?????? (j221D24): movement action function 0xD3
  ?????? (j221D40): movement action function 0xD4
  ?????? (j221D5C): movement action function 0xD5 (see 273disasm)
		  Implements: works like regular running, but the directions are different (south/west = southwest, north = northwest, east = southeast)
= ?????? (j221D78): movement action function 0xD6
  ?????? (j221D94): movement action function 0xD7
  ?????? (j221DB0): movement action function 0xD8
  ?????? (j221DCC): movement action function 0xD9 (see 274disasm)
		  Implements: works like regular running, but the directions are different (north/east = northeast, south = southeast, west = northwest)
= ?????? (j221F88): movement action function 0xDA
  ?????? (j221FA4): movement action function 0xDB
  ?????? (j221FC0): movement action function 0xDC
  ?????? (j221FDC): movement action function 0xDD (see 275disasm)
		  Implements: works like regular "ministep" speed 1 (?), but the directions are different (south/west = southwest, north = northwest, east = southeast)
= ?????? (j221FF8): movement action function 0xDE
  ?????? (j222014): movement action function 0xDF
  ?????? (j222030): movement action function 0xE0
  ?????? (j22204C): movement action function 0xE1 (see 276disasm)
		  Implements: works like regular "ministep" speed 1 (?), but the directions are different (north/east = northeast, south = southeast, west = northwest)
= ?????? (j222068): movement action function 0xCA
  ?????? (j222084): movement action function 0xCB
  ?????? (j2220A0): movement action function 0xCC
  ?????? (j2220BC): movement action function 0xCD (see 277disasm)
		  Implements: works like regular "ministep" speed 0 (?), but the directions are different (south/west = southwest, north = northwest, east = southeast)
= ?????? (j2220D8): movement action function 0xCE
  ?????? (j2220F4): movement action function 0xCF
  ?????? (j222110): movement action function 0xD0
  ?????? (j22212C): movement action function 0xD1 (see 278disasm)
		  Implements: works like regular "ministep" speed 0 (?), but the directions are different (north/east = northeast, south = southeast, west = northwest)
= ?????? (j222358): movement action function 0xBE
  ?????? (j22237E): movement action function 0xBF
  ?????? (j2223A4): movement action function 0xC0
  ?????? (j2223CA): movement action function 0xC1 (see 279disasm)
		  Implements: works like regular jumping (speed 0), but in the opposite direction
= ?????? (j222404): movement action function 0xBA
  ?????? (j22242A): movement action function 0xBB
  ?????? (j222450): movement action function 0xBC
  ?????? (j222478): movement action function 0xBD (see 280disasm)
		  Implements: works like regular jumping (speed 2), but in the opposite direction
= ?????? (j222630): movement action function 0xB6
  ?????? (j22264C): movement action function 0xB7
  ?????? (j222668): movement action function 0xB8
  ?????? (j222684): movement action function 0xB9 (see 281disasm)
		  Implements: works like regular walking (speed 1), but in the opposite direction
= ?????? (j2226B0): movement action function 0xB2
  ?????? (j2226CC): movement action function 0xB3
  ?????? (j2226E8): movement action function 0xB4
  ?????? (j222704): movement action function 0xB5 (see 282disasm)
		  Implements: works like regular walking (speed 0), but in the opposite direction
= ?????? (j222818): movement action function 0xAE
  ?????? (j222832): movement action function 0xAF
  ?????? (j22284C): movement action function 0xB0
  ?????? (j222866): movement action function 0xB1 (see 283disasm)
		  Implements: works like regular slow-walking, but in the opposite direction
= ?????? (j22292C): movement action function 0xAA
  ?????? (j222946): movement action function 0xAB
  ?????? (j222960): movement action function 0xAC
  ?????? (j22297A): movement action function 0xAD (see 284disasm)
		  Implements: works like regular slow-walking (again? maybe this is wrong), but in the opposite direction
+ 814082: Move_Flare_Blitz (see animscripts.txt)
		  Implements: Flare Blitz animation
+ 8B6040: Move_Sludge_Wave (see animscripts.txt)
		  Implements: Sludge Wave animation
= E27BA0: ItemUseOutOfBattle_Honey (see 286disasm)
		  Implements: field function for Honey
		  Required knowledge: j02039910, j0203BFF0
= E2E640: ItemUseOutOfBattle_EVReduction (see 285disasm)
		  Implements: field function for EV-reduction berries
		  Required knowledge: j03005EE8
+ EB7E00: atkF8_doubledamageatlowhp (see 263disasm)
		  Implements: new battle script command that doubles damage if the given mon is at less than half HP
+ EB7E60: atkF9_setmondata (see 264disasm)
		  Implements: new battle script command that sets any given data for the given mon
+ EB7EB0: atkFA_swaporcopymondata (see 265disasm)
		  Implements: new battle script command that swaps, copies, or averages any given data for the attacker and target, depending on case (0 = average the two and set both to that average; 1 = swap the two; 2 = set the attacker's to the target's; 3 = set the target's to the attacker's)
+ EB7F70: atkFB_swapdataonmon (see 266disasm)
		  Implements: new battle script command that swaps the two given values for the given mon
		  Glitch?: first param controls data size and battler index, second param is never read; obviously one of those is meant for the second param
+ EB7FC0: atkFC_jumpifitem (see 267disasm)
		  Implements: new battle script command that jumps if the held item comparison is true, depending on case (0 = equal, 1 = not equal, 2 = less than, 3 = greater than)
+ EB8030: atkFD_jumpifnocommontype (see 268disasm)
		  Implements: new battle script command that jumps if the attacker and target don't share any types
+ EB8090: atkFE_statbooststomovepower (see 269disasm)
		  Implements: new battle script command that either counts the stat boosts (case 0) or counts the boosted stats (case 1), then adds that to the base power
		  Note: this isn't the way it works in the actual games, stat drops should subtract from the number (for case 0, what even is case 1?)
+ EB8100: atkFF_exec (see 270disasm)
		  Implements: new battle script command that executes the given ASM function then continues running the battle script
= FE5000: ItemUseOutOfBattle_AbilityChange (see 287disasm)
		  Implements: field function for Ability Capsule
		  Required knowledge: j03005EE8
		  Glitch?: looks like it's using the old ability name table, easily fixed for en
+1051320: BattleScript_EffectAllStatsDownHit (see movescripts.txt)
		  Implements: (move that has a chance to lower all of the target's stats, aka Ancient Power in reverse)
		  Note: stat boost anim was wrong, see movescripts.txt
		  Note: fixed to end move instead of "stats can't be lowered", see movescripts.txt
+1051480: BattleScript_EffectDoubleDamageAtLowHP (see movescripts.txt)
		  Implements: Brine/(one other move), [move272]
+10514A0: BattleScript_EffectChangeTargetType (see movescripts.txt)
		  Implements: Soak/[move227]/[move277]/[move279]
+1051580: BattleScript_EffectGiveTargetMove240 (see movescripts.txt)
		  Implements: (move that overwrites a random one of the target's moves with [move240])
+1051700: BattleScript_EffectRemoveOwnScreensForDoubleDamage (see movescripts.txt)
		  Implements: (move that removes Reflect/Light Screen from the user's side, but does double damage when it does)
		  Note: Also added in the Brick Break changes from my battle message overhaul
+1051790: BattleScript_EffectDamageFromDefense (see movescripts.txt)
		  Implements: (move that does damage based on the user's Defense stat instead of its Attack stat)
+10517C0: BattleScript_EffectBoostedBySharpClaws (see movescripts.txt)
		  Implements: (move that does double damage if used immediately after Hone Claws)
		  Note: message scrolls off too soon, maybe add wait
+1051840: BattleScript_EffectRevelationDance (see movescripts.txt)
		  Implements: Revelation Dance
		  Relies on: SetTypeToBattlerType1 (jEB8340, e1EB8340)
=1051850: BattleScript_EffectSpreadStatDownHit (see movescripts.txt)
		  Implements: Bulldoze, Sandblast
		  Relies on: moveend refactor
		  Glitch?: might hit underwater foes, check
=1051870: BattleScript_EffectSpreadStatusHit (see movescripts.txt)
		  Implements: Discharge, Lava Plume, Sludge Wave
		  Relies on: moveend refactor
		  Glitch?: might hit underwater foes, check
+1051910: BattleScript_EffectSpAtkSpDefDown (see movescripts.txt)
		  Implements: (move that lowers Sp. Atk and Sp. Def)
		  Relies on: BattleScript_LowerOneOfMultipleStats
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1051970: BattleScript_EffectHoneClaws (see movescripts.txt)
		  Implements: Hone Claws
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1051C50: BattleScript_EffectPsychoShift (see movescripts.txt)
		  Implements: Psycho Shift
		  GLITCH!: Poison and Sleep cases are reversed
		  Note: Removes status before checking for most failures, is that how it works?
		  Note: Messages might be different than gen 7, check
+1051D00: BattleScript_EffectPowerTrick (see movescripts.txt)
		  Implements: Power Trick, [move291]
+1051D40: BattleScript_EffectAcrobatics (see movescripts.txt)
		  Implements: Acrobatics
+1051D50: BattleScript_EffectMetalBurst (see movescripts.txt)
		  Implements: Metal Burst
=1051D80: BattleScript_EffectCalcWithExtraBoosts (see movescripts.txt)
		  Implements: (move that calculates damage as if any Defense boosts were added to Sp. Atk, then has a 20% chance to raise Def and Sp. Atk); [moveDD]
		  Required knowledge: whether the area around gStringVar4 is the same in en
		  Note: on paper, it looks like stat drops are factored in inconsistently (only if one stat is above +0) - for example ([moveDD]), +0 Atk/-2 Sp. Atk results in +0 Atk, -3 Atk/-2 Sp. Atk results in -3 Atk, and +3 Atk/-2 Sp. Atk results in +1 Atk
		  Glitch?: Might crash if combined boosts are greater than +6 (or less than +0 if one of them is positive)
		  Glitch?: [moveDD] crashes if Atk is at +6 but Sp. Atk isn't
+1052D20: BattleScript_EffectChangeAbilityToMegaLauncherThenHit (see movescripts.txt)
		  Implements: (move that changes the user's ability to Mega Launcher and then does damage)
+1053940: BattleScript_EffectUseExplosionInstead (see movescripts.txt)
		  Implements: (move that just uses Explosion instead)
+1053A90: BattleScript_EffectVCreate (see movescripts.txt)
		  Implements: V-Create/Nova Inferno
+1053AA0: BattleScript_EffectBlizzard (see movescripts.txt)
		  Implements: Blizzard has its own effect byte that it shares with Starfreeze, unclear why
=1053AA8: BattleScript_EffectSuckerPunch (see movescripts.txt)
		  Implements: Sucker Punch
		  Required knowledge: whether the area around gStringVar4 is the same in en
=1053AB8: BattleScript_EffectPayback (see movescripts.txt)
		  Implements: Payback
		  Required knowledge: whether the area around gStringVar4 is the same in en
+1053CB0: BattleScript_EffectHammerArm (see movescripts.txt)
		  Implements: Hammer Arm
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
+1053CE0: BattleScript_EffectCloseCombat (see movescripts.txt)
		  Implements: Close Combat
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1053D30: BattleScript_EffectDefensiveStatAlwaysDownHit (see movescripts.txt)
		  Implements: Diamond Blast, Giga Spark
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
+1053DB0: BattleScript_EffectTyphoon (see movescripts.txt)
		  Implements: Typhoon
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1053E90: BattleScript_EffectDizzyWhirl (see movescripts.txt)
		  Implements: Dizzy Whirl
		  Relies on: BattleScript_PlayStatChangeAnim
+1053EE0: BattleScript_EffectUserAtkDefUp2SpeedDown (see movescripts.txt)
		  Implements: (move that gives +2 Attack +2 Defense -1 Speed to user)
		  Relies on: BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1055600: BattleScript_EffectCoil (see movescripts.txt)
		  Implements: Coil
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1055670: BattleScript_EffectQuiverDance (see movescripts.txt)
		  Implements: Quiver Dance
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+10556E0: BattleScript_EffectShellSmash (see movescripts.txt)
		  Implements: Shell Smash
		  Relies on: BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+10557E0: BattleScript_EffectAtkSpeedEvasionUp (see movescripts.txt)
		  Implements: (move that boosts Attack, Speed, and evasion)
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1055850: BattleScript_EffectSpeedEvasionUp (see movescripts.txt)
		  Implements: (move that boosts Speed and evasion)
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+10558A0: BattleScript_EffectPartiallyBypassProtect (see movescripts.txt)
		  Implements: (a Ground-type move that if used on Protect, does half damage and harshly lowers user's Sp. Atk), [move23A]
+11AADD0: Move_Zen_Headbutt (see animscripts.txt)
		  Implements: Zen Headbutt animation
+11BA7EF: BattleScript_EffectTripleHit (see movescripts.txt)
		  Implements: (move that hits 3 times)
+1300090: Move_Moonblast (see animscripts.txt)
		  Implements: Moonblast animation
+1300110: Move_Fairy_Wind (see animscripts.txt)
		  Implements: Fairy Wind animation
-1300490: Move_Power_Up_Punch (see animscripts.txt)
		  Implements: Power-Up Punch animation
-13004E8: Move_??? (see animscripts.txt)
		  Implements: [move21F] animation
-1300890: Move_Play_Nice (see animscripts.txt)
		  Implements: Play Nice animation
-13008D8: Move_Nuzzle (see animscripts.txt)
		  Implements: Nuzzle animation
=1300A10: Move_??? (see animscripts.txt)
		  Implements: 
-1300B80: Move_Trick_Room (see animscripts.txt)
		  Implements: Trick Room animation
-1301028: Move_??? (see animscripts.txt)
		  Implements: [move221] animation
-13014F8: Move_??? (see animscripts.txt)
		  Implements: [move210] animation
-1301880: Move_??? (see animscripts.txt)
		  Implements: [move219] animation
-1302028: Move_??? (see animscripts.txt)
		  Implements: [move220] animation
-1302280: Move_??? (see animscripts.txt)
		  Implements: [move218] animation
-1302550: Move_Confide (see animscripts.txt)
		  Implements: Confide animation
-1302910: Move_Hex (see animscripts.txt)
		  Implements: Hex animation
-1302E58: Move_??? (see animscripts.txt)
		  Implements: [move222] animation
-1303098: Move_Chatter (see animscripts.txt)
		  Implements: Chatter animation
-1303360: Move_??? (see animscripts.txt)
		  Implements: [move21C] animation
!13037E0: Move_Power_Whip (see animscripts.txt)
		  Implements: Power Whip animation
		  GLITCH!: game crash
-13038E8: Move_Tailwind (see animscripts.txt)
		  Implements: Tailwind animation
-13039D0: Move_??? (see animscripts.txt)
		  Implements: [move20C] animation
-1303DD0: Move_Eerie_Impulse (see animscripts.txt)
		  Implements: Eerie Impulse animation
-1303E58: Move_??? (see animscripts.txt)
		  Implements: [move205] animation
-13040D8: Move_Baby_Doll_Eyes (see animscripts.txt)
		  Implements: Baby-Doll Eyes animation
+13041C8: Move_Possess (see animscripts.txt)
		  Implements: Possess animation
-1304450: Move_??? (see animscripts.txt)
		  Implements: [move209] animation
-13044C0: Move_??? (see animscripts.txt)
		  Implements: [move21B] animation
-1304AD8: Move_??? (see animscripts.txt)
		  Implements: [move21D] animation
+13053F0: Move_Disarming_Voice (see animscripts.txt)
		  Implements: Disarming Voice animation
-1305570: Move_??? (see animscripts.txt)
		  Implements: [move216] animation
-13057C0: Move_??? (see animscripts.txt)
		  Implements: [move20B] animation
-13059F0: Move_??? (see animscripts.txt)
		  Implements: Petal Blizzard animation
		  Glitch?: Typo in script causes incorrect bg scrolling?
+1306150: Move_Dazzle_Powder (see animscripts.txt)
		  Implements: Dazzle Powder animation
+1306328: Move_Avalanche (see animscripts.txt)
		  Implements: Avalanche animation
+13064B0: Move_Poison_Jab (see animscripts.txt)
		  Implements: Poison Jab animation
-13065F0: Move_??? (see animscripts.txt)
		  Implements: [move20D] animation
-1306648: Move_Head_Smash (see animscripts.txt)
		  Implements: Head Smash animation
+1306BF0: Move_Leaf_Storm (see animscripts.txt)
		  Implements: Leaf Storm animation
+1306F58: Move_Cross_Poison (see animscripts.txt)
		  Implements: Cross Poison animation
+1306FE8: Move_Leaf_Tornado (see animscripts.txt)
		  Implements: Leaf Tornado animation
+13071E8: Move_Inferno (see animscripts.txt)
		  Implements: Inferno animation
!1307478: Move_Fire_Fang (see animscripts.txt)
		  Implements: Fire Fang animation
		  GLITCH!: game crash
+1307510: Move_Thunder_Fang (see animscripts.txt)
		  Implements: Thunder Fang animation
+1307600: Move_Ice_Fang (see animscripts.txt)
		  Implements: Ice Fang animation
+1307950: Move_Rock_Climb (see animscripts.txt)
		  Implements: Rock Climb animation
+1307D70: Move_Shell_Smash (see animscripts.txt)
		  Implements: Shell Smash animation
+1307F70: Move_Aqua_Jet (see animscripts.txt)
		  Implements: Aqua Jet animation
+13080C0: Move_Gastro_Acid (see animscripts.txt)
		  Implements: Gastro Acid animation
-1308238: Move_??? (see animscripts.txt)
		  Implements: [move223] animation
+1308368: Move_Focus_Blast (see animscripts.txt)
		  Implements: Focus Blast animation
+13083D0: Move_Gunk_Shot (see animscripts.txt)
		  Implements: Gunk Shot animation
+13087A8: Move_Shadow_Sneak (see animscripts.txt)
		  Implements: Shadow Sneak animation
!1308970: Move_Icicle_Crash (see animscripts.txt)
		  Implements: Icicle Crash animations
		  GLITCH!: gamecicle crash
+1308DC0: Move_Psycho_Cut (see animscripts.txt)
		  Implements: Psycho Cut animation
!1308F80: Move_Raze_Earth (see animscripts.txt)
		  Implements: Raze Earth animation
		  GLITCH!: game crash
+13091A0: Move_Rock_Wrecker (see animscripts.txt)
		  Implements: Rock Wrecker animation
-1309278: Move_??? (see animscripts.txt)
		  Implements: [move21E] animation
		  Note: This move has different sprites for player and opponent sides, but the similar Pound doesn't - look into this
+1309350: Move_Aura_Sphere (see animscripts.txt)
		  Implements: Aura Sphere animation
+1309598: Move_Energy_Ball (see animscripts.txt)
		  Implements: Energy Ball animation
!1309E68: Move_Poison_Leaf (see animscripts.txt)
		  Implements: Poison Leaf animation
		  GLITCH!: game crash
+1309F90: Move_Bug_Noise (see animscripts.txt)
		  Implements: Bug Noise animation
+130A078: Move_Tone_Deaf (see animscripts.txt)
		  Implements: Tone-Deaf animation
!130A1CB: Move_Wave_Splash (see animscripts.txt)
		  Implements: Wave Splash animation
		  GLITCH!: game crash
+130A350: Move_Hammer_Arm (see animscripts.txt)
		  Implements: Hammer Arm animation
+130A3A0: Move_Dazzling_Gleam (see animscripts.txt)
		  Implements: Dazzling Gleam animation
+130A5C0: Move_Hone_Claws (see animscripts.txt)
		  Implements: Hone Claws animation
+130A6F0: Move_Seed_Bomb (see animscripts.txt)
		  Implements: Seed Bomb animation
+130A828: Move_??? (see animscripts.txt)
		  Implements: [move1A0] animation
+130A950: Move_X_Scissor (see animscripts.txt)
		  Implements: X-Scissor animation
+130A9D0: Move_Raid (see animscripts.txt)
		  Implements: Raid animation
-130AA80: Move_Play_Rough (see animscripts.txt)
		  Implements: Play Rough animation
+130ABB0: Move_Mud_Bomb (see animscripts.txt)
		  Implements: Mud Bomb animation
+130ADA0: Move_Psyburn (see animscripts.txt)
		  Implements: Psyburn animation
+130B0B0: Move_Metal_Pincer (see animscripts.txt)
		  Implements: Metal Pincer animation
+130B130: Move_Typhoon (see animscripts.txt)
		  Implements: Typhoon animation
+1340000: Move_Wood_Hammer (see animscripts.txt)
		  Implements: Wood Hammer animation
+13C4910: Move_Iron_Head (see animscripts.txt)
		  Implements: Iron Head animation
+13C4990: Move_Soul_Break (see animscripts.txt)
		  Implements: Soul Break/[move1D8] animation
+13C49C0: Move_Power_Gem (see animscripts.txt)
		  Implements: Power Gem animation
+140CEA0: Move_Lava_Plume (see animscripts.txt)
		  Implements: Lava Plume animation
+140CF90: Move_Guardian_Leaf (see animscripts.txt)
		  Implements: Guardian Leaf animation
+140D086: Move_Double_Hit (see animscripts.txt)
		  Implements: Double Hit/Double Shot animation
+140D0F6: Move_Defend_Order (see animscripts.txt)
		  Implements: Defend Order animation
+140D14C: Move_Attack_Order (see animscripts.txt)
		  Implements: Attack Order animation
+140D18A: Move_Heal_Order (see animscripts.txt)
		  Implements: Heal Order animation
+140D296: Move_Angry_Swarm (see animscripts.txt)
		  Implements: Angry Swarm
+140D316: Move_Mirror_Shot (see animscripts.txt)
		  Implements: Mirror Shot/Shine Bomb animation
+140D430: Move_Sonic_Sand (see animscripts.txt)
		  Implements: Sonic Sand animation
		  Note: background goes the wrong direction when used by ai
+140D632: Move_Rapid_Growth (see animscripts.txt)
		  Implements: Rapid Growth animation
+140D820: Move_Defog (see animscripts.txt)
		  Implements: Defog animation
!140D880: Move_Drain_Punch (see animscripts.txt)
		  Implements: Drain Punch animation
		  GLITCH!: game crash
+140D906: Move_Wild_Growth (see animscripts.txt)
		  Implements: Wild Growth animation
!140DA56: Move_Dizzy_Whirl (see animscripts.txt)
		  Implements: Dizzy Whirl animation
		  GLITCH!: There's nothing here?
+140DA7C: Move_Corner (see animscripts.txt)
		  Implements: Corner animation
!140DAC8: Move_Earth_Power (see animscripts.txt)
		  Implements: Earth Power animation
		  GLITCH!: game crash
+140DB3C: Move_Gravity_Wave (see animscripts.txt)
		  Implements: Gravity Wave animation
+140DC08: Move_Magnum_Punch (see animscripts.txt)
		  Implements: Magnum Punch animation
+140DCAC: Move_Diamond_Blast (see animscripts.txt)
		  Implements: Diamond Blast animation
+140DE22: Move_Flash_Cannon (see animscripts.txt)
		  Implements: Flash Cannon animation
+140DF20: Move_Magnet_Force (see animscripts.txt)
		  Implements: Magnet Force animation
+140DFC0: Move_Paleobreath (see animscripts.txt)
		  Implements: Paleobreath animation
+140E074: Move_Close_Combat (see animscripts.txt)
		  Implements: Close Combat animation
+1429760: Move_Stardust (see animscripts.txt)
		  Implements: Stardust animation
+14297E0: Move_Devastate (see animscripts.txt)
		  Implements: Devastate animation
+1429870: Move_Metal_Blast (see animscripts.txt)
		  Implements: Metal Blast animation
+1429A60: Move_Vacuum_Wave (see animscripts.txt)
		  Implements: Vacuum Wave animation
+1429A90: Move_Aqua_Tail (see animscripts.txt)
		  Implements: Aqua Tail animation
+1429B80: Move_Icy_Kiss (see animscripts.txt)
		  Implements: Icy Kiss animation
+142A090: Move_Night_Slash (see animscripts.txt)
		  Implements: Night Slash animation
+142A0D4: Move_Deep_Yawn (see animscripts.txt)
		  Implements: Deep Yawn animation
+142A128: Move_Dark_Pulse (see animscripts.txt)
		  Implements: Dark Pulse animation
+142A175: Move_Double_Spin (see animscripts.txt)
		  Implements: Double Spin animation
+142A20C: Move_Switcheroo (see animscripts.txt)
		  Implements: Switcheroo animation
+142A78E: Move_Hypnopulse (see animscripts.txt)
		  Implements: Hypnopulse animation
+142A7F0: Move_Bullet_Punch (see animscripts.txt)
		  Implements: Bullet Punch animation
+142A888: Move_Aqua_Bolt (see animscripts.txt)
		  Implements: Aqua Bolt animation
+142A96E: Move_Raging_Flame (see animscripts.txt)
		  Implements: Raging Flame animation
+142BCB8: Move_Smogscreen (see animscripts.txt)
		  Implements: Smogscreen animation
+142BEEC: Move_Icicle_Punch (see animscripts.txt)
		  Implements: Icicle Punch animation
+142BF8A: Move_Toxin_Spray (see animscripts.txt)
		  Implements: Toxin Spray animation
+142BFFE: Move_Dark_Hand (see animscripts.txt)
		  Implements: Dark Hand animation
+142C1A0: Move_Dark_Roar (see animscripts.txt)
		  Implements: Dark Roar animation
+142C1BE: Move_Dragon_Beat (see animscripts.txt)
		  Implements: Dragon Beat animation
+142C2AA: Move_Frostbite (see animscripts.txt)
		  Implements: Frostbite animation
+142C316: Move_Ice_Shard (see animscripts.txt)
		  Implements: Ice Shard animation
+142C3B0: Move_Starfreeze (see animscripts.txt)
		  Implements: Starfreeze animation
+142C4A8: Move_Nasty_Plot (see animscripts.txt)
		  Implements: Nasty Plot animation
+142C4CC: Move_Ominous_Wind (see animscripts.txt)
		  Implements: Ominous Wind animation
+142C612: Move_Dark_Resolve (see animscripts.txt)
		  Implements: Dark Resolve animation
+142C660: Move_Megashock (see animscripts.txt)
		  Implements: Megashock animation
+142C7AC: Move_Deluge (see animscripts.txt)
		  Implements: Deluge animation
+142C800: Move_Discharge (see animscripts.txt)
		  Implements: Discharge animation
+142CB10: Move_Giga_Spark (see animscripts.txt)
		  Implements: Giga Spark animation
+142CDC0: Move_Shadow_Clamp (see animscripts.txt)
		  Implements: Shadow Clamp animation
+142CE84: Move_Latent_Power (see animscripts.txt)
		  Implements: Latent Power animation
+142CFD8: Move_Giga_Impact (see animscripts.txt)
		  Implements: Giga Impact animation
+1696040: Move_Charge_Beam (see animscripts.txt)
		  Implements: Charge Beam animation
+1697F80: BattleScript_EffectHurricane (see movescripts.txt)
		  Implements: Hurricane
+1699D70: Move_Psycho_Punch (see animscripts.txt)
		  Implements: Psycho Punch animation
+1699DCA: Move_Glide (see animscripts.txt)
		  Implements: Glide animation
+1699E26: Move_Dragon_Pulse (see animscripts.txt)
		  Implements: Dragon Pulse animation
+1699EE0: Move_Draco_Meteor (see animscripts.txt)
		  Implements: Draco Meteor animation
+169A040: Move_Geo_Impact (see animscripts.txt)
		  Implements: Geo Impact animation
+169A19A: Move_Psygatling (see animscripts.txt)
		  Implements: Psygatling animation
+169A20A: Move_Magnet_Bomb (see animscripts.txt)
		  Implements: Magnet Bomb animation
+169A3A0: Move_Brave_Bird (see animscripts.txt)
		  Implements: Brave Bird animation
+169A4F0: Move_Burrow (see animscripts.txt)
		  Implements: Burrow animation
+16B40F0: Move_Acid_Spray (see animscripts.txt)
		  Implements: Acid Spray animation
+16B42A0: Move_Quiver_Dance (see animscripts.txt)
		  Implements: Quiver Dance animation
+16B4320: Move_Heart_Stamp (see animscripts.txt)
		  Implements: Heart Stamp animation
+16B43A0: Move_Sharpshoot (see animscripts.txt)
		  Implements: Sharpshoot animation
+16B4420: Move_Steamroller (see animscripts.txt)
		  Implements: Steamroller animation
+16B4510: Move_Scald (see animscripts.txt)
		  Implements: Scald animation
+16B4580: Move_Struggle_Bug (see animscripts.txt)
		  Implements: Struggle Bug animation
+16B4B20: Move_Work_Up (see animscripts.txt)
		  Implements: Work Up animation
+16B4B60: Move_Wild_Charge (see animscripts.txt)
		  Implements: Wild Charge animation
+16B4C70: Move_Electroweb (see animscripts.txt)
		  Implements: Electroweb animation
+1E24E80: Move_Nova_Inferno (see animscripts.txt)
		  Implements: Nova Inferno animation
+1E29CA0: Move_??? (see animscripts.txt)
		  Implements: [move1A3] animation
+1E29FF0: Move_??? (see animscripts.txt)
		  Implements: [move1EE] animation