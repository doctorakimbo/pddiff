ignore the following (pe):
00 30 A2 08
F0 30 A2 08
00 00 E4 08
00 7A EB 08
90 89 EB 08
00 00 00 09
00 00 01 09
04 00 01 09
00 00 03 09
A0 0B 06 09
00 50 06 09
00 00 0B 09
00 D0 3F 09
00 F0 3F 09

(stench actual desc: 71D9FE)
("the pkmn" -> "it"; if "it" would be at the beginning, skip it)
abilities:
+ 0x4C = Tangled Feet
+ 0x4E = Motor Drive
+ 0x4F = Rivalry
+ 0x50 = Steadfast
+ 0x51 = Snow Cloak
+ 0x52 = Gluttony
+ 0x53 = Anger Point
+ 0x54 = Unburden
+ 0x55 = Heatproof
+ 0x56 = Simple
+ 0x57 = Dry Skin
+ 0x58 = Download
= 0x59 = Iron Fist/Reckless (boosts extraFlags & 0x10 moves by 20%)
+ 0x5A = Poison Heal
+ 0x5B = Adaptability
+ 0x5C = Skill Link
+ 0x5D = Hydration
+ 0x5E = Solar Power
+ 0x5F = Quick Feet
+ 0x60 = Normalize
+ 0x61 = Sniper
+ 0x62 = Magic Guard
+ 0x63 = No Guard
+ 0x64 = Stall
+ 0x65 = Technician
+ 0x66 = Leaf Guard
+ 0x67 = Klutz
+ 0x68 = Mold Breaker
+ 0x69 = Super Luck
+ 0x6A = Aftermath
+ 0x6B = Anticipation
+ 0x6C = Forewarn
+ 0x6D = Unaware
+ 0x6E = Tinted Lens
= 0x6F = Solid Rock/Filter
+ 0x70 = Slow Start
+ 0x71 = Scrappy
+ 0x72 = Storm Drain
+ 0x73 = Ice Body
= 0x74 = Filter/Solid Rock
+ 0x75 = Snow Warning
+ 0x76 = Honey Gather
+ 0x77 = Frisk
= 0x78 = Reckless/Iron Fist (boosts extraFlags & 0x80 moves by 20%)
+ 0x7A = Flower Gift
+ 0x7D = Sheer Force
+ 0x7E = Contrary
+ 0x7F = Unnerve
+ 0x81 = Defeatist
+ 0x82 = Cursed Body
+ 0x83 = Healer
+ 0x84 = Friend Guard
+ 0x85 = Weak Armor
+ 0x88 = Multiscale
+ 0x89 = Toxic Boost
+ 0x8A = Flare Boost
+ 0x8C = Telepathy
+ 0x8D = Moody
+ 0x8E = Overcoat
+ 0x8F = Poison Touch
+ 0x90 = Regenerator
+ 0x91 = Big Pecks
+ 0x92 = Sand Rush
= 0x93 = (lowers moves with typeFlags2 & 4 to 60% accuracy)
+ 0x94 = Analytic
+ 0x96 = Imposter
+ 0x97 = Infiltrator
+ 0x98 = Mummy
+ 0x99 = Moxie
+ 0x9A = Justified
+ 0x9B = Rattled
+ 0x9C = Magic Bounce
+ 0x9D = Sap Sipper
+ 0x9E = Prankster
+ 0x9F = Sand Force
+ 0xA0 = Iron Barbs
+ 0xA2 = Victory Star
= 0xA3 = Turboblaze/Teravolt
= 0xA4 = Teravolt/Turboblaze
+ 0xA5 = Aroma Veil
+ 0xA6 = Aura Break
+ 0xA8 = Tough Claws
= 0xAA = Mega Launcher/Strong Jaw (boosts extraFlags & 0x20 moves by 50%)
+ 0xAC = Grass Pelt
+ 0xAD = Sweet Veil
+ 0xAE = Aerilate
+ 0xAF = Dark Aura
+ 0xB0 = Gooey
+ 0xB2 = Gale Wings
+ 0xB3 = Fur Coat
+ 0xB4 = Fairy Aura
+ 0xB5 = Pixilate
+ 0xB6 = Flower Veil
+ 0xB7 = Refrigerate
+ 0xB8 = Protean
+ 0xB9 = Bulletproof
+ 0xBA = Cheek Pouch
= 0xBC = Strong Jaw/Mega Launcher (boosts extraFlags & 0x40 moves by 20%)
+ 0xC0 = Stamina
+ 0xC3 = Compaction
+ 0xCA = Slush Rush
+ 0xCB = Long Reach
+ 0xCE = Galvanize
= 0xD6 = Dazzling/RegalMajesty
= 0xDB = RegalMajesty/Dazzling
+ 0xDD = TanglingHair

(old kid: 16F8C4, old item: 0x125, route 4, fix wildmons route15)
item effects:
+ typebooster IDs: (if effectparam = 0, type-resist berries; if effectparam >= 30, Gems; otherwise typeboosters as normal)
+ 0x18 = Macho Brace if effectparam is 0, otherwise Power item (effectparam = stat ID)
+ 0x1D = "Polkadot Bow"
+ 0x2B = Leftovers if effectparam is 0xFF, otherwise Black Sludge (effectparam = type that heals)
+ 0x43 = Focus Sash
+ 0x44 = Choice Specs
+ 0x45 = Choice Band
+ 0x46 = Choice Scarf
+ 0x47 = Wide Lens
+ 0x48 = Muscle Band (effectparam = % boost)
+ 0x49 = Wise Glasses (effectparam = % boost)
+ 0x4A = Lagging Tail
+ 0x4B = weather rocks (effectparam = weather ID)
+ 0x4C = Expert Belt
+ 0x4D = Safety Wear
+ 0x4E = Grip Claw
+ 0x4F = Binding Band
+ 0x50 = Light Clay
+ 0x51 = Big Root
+ 0x52 = Assault Vest
+ 0x53 = Eviolite
+ 0x54 = Life Orb (effectparam = 1/X HP lost)
+ 0x57 = Destiny Knot

item IDs:
= 0x72 = (key item, increases the chances of something personality-value related to 1/256 instead of 1/65536)
+ 0x1AE = Honey

move IDs:
(Mirror Move, Assist, "Conversion?", "Aeroblast?", and "Sacred Fire?" can't be called by metronome)
= 0x181 = (can't be called by metronome)
= 0x1BA = (can't be called by metronome)
= 0x1E6 = (can't be called by metronome)
= 0x207 = (can't be copied by mimic or called by metronome)
+ 0x208 = Trick Room
= 0x23A = (can't be called by metronome)
= 0x253 = (can't be called by metronome)
= 0x254 = (can't be called by metronome)
= 0x255 = (can't be called by metronome)
= 0x256 = (can't be called by metronome)
= 0x257 = (special message in atk97_tryinfatuating)
= 0x25E = (can't be called by metronome)
= 0x25F = (can't be called by metronome)
= 0x260 = (can't be called by metronome)
= 0x261 = (can't be called by metronome)
= 0x262 = (can't be called by metronome)
= 0x26C = (can't be called by metronome)
= 0x26D = (can't be called by metronome)
= 0x28C = Magma Storm/Infestation
= 0x28E = Infestation/Magma Storm
= 0x294 = (can't be called by metronome)
= 0x2A4 = (can't be called by metronome)
= 0x2A5 = (can't be called by metronome)
= 0x2A7 = (can't be called by metronome)
= 0x2A8 = (can't be called by metronome)

move effects:
= 0x37 = (won't miss)
= 0x38 = (won't miss)
= 0x3F = (won't miss)
= 0x68 = (won't miss)
= 0xE1 = Frost Breath
= 0xEE = Hurricane

itemdata:
all prices divided by 10
shards: items pocket -> key items pocket (PDONLY)
cheri-belue: mystery byte 02 = 01-23
liechi-enigma: mystery byte 02 = 36-3D
pomeg-tamato: type = other -> out of battle
pomeg-tamato: battle usage = 0 -> 1
pomeg-tamato: extra byte = 1A, 1B, 1C, 1E, 1F, 1D
sitrus: effparam = 30 -> 0xFE
typeboosters: effparam = 10 -> 20
leftovers: effparam = 10 -> 0xFF
sea incense: effparam = 5 -> 20
lax incense: effparam = 5 -> 10
changed fieldscriptptrs: pomeg-tamato
changed battlescriptptrs: choice band, stick

pokeball types:
+ 0x01 = Ultra Ball -> Master Ball
+ 0x02 = Great Ball -> Ultra Ball
+ 0x03 = Poke Ball -> Great Ball
+ 0x04 = Safari Ball -> Poke Ball
+ 0x05 = Net Ball -> Safari Ball
+ 0x06 = Dive Ball -> Net Ball
+ 0x07 = Nest Ball -> Dive Ball
+ 0x08 = Repeat Ball -> Nest Ball
+ 0x09 = Timer Ball -> Repeat Ball
+ 0x0A = Luxury Ball -> Timer Ball
+ 0x0B = Premier Ball -> Luxury Ball
+ 0x0C = Premier Ball
+ 0x0D = Quick Ball
+ 0x0E = Dusk Ball
+ 0x0F = Park Ball
+ 0x10 = Heal Ball
+ 0x11 = Cherish Ball
+ 0x12 = Moon Ball
+ 0x13 = Friend Ball
+ 0x14 = Heavy Ball
+ 0x15 = Level Ball
+ 0x16 = Love Ball
+ 0x17 = Lure Ball
+ 0x18 = Fast Ball

metatiles:
0x08: (cave battle background)
0x1A: (pond battle background)
0x1B: (pond battle background)
0x1F: (Strength boulders can be moved onto this tile, after which the boulder disappears; also some unknown functionality which is shared with ice tiles)
0xB0: (moving west off the tile results in northwest, moving east results in southeast)
0xB1: (moving west off the tile results in northwest)
0xB2: (moving east off the tile results in southeast)
0xB3: (moving west off the tile results in southwest, moving east results in northeast)
0xB4: (moving east off the tile results in northeast)
0xB5: (moving west off the tile results in southwest)
0xD1: (grass battle background)
0xE0: (IsSandOrDeepSand (? unsure) returns TRUE; cave battle background)
0xE1: (underwater battle background)
0xE2: (IsSandOrDeepSand (? unsure) returns TRUE; underwater battle background)
0xE3: (runs script_68277E_J (msgbox 8B 70 46 0A 1A FE 8B 70 44 00 02 50 4B 02 AB FF) when examined)
0xE4: (runs script_682787_J (msgbox 87 5B 8B 5F B0 AB FE 15 06 1A 00 8B 70 00 46 50 06 28 AB FF) when examined)

battle strings (ADD 9 TO ALL, 0D77C8 = num):
! 0xC2 = "[PKMN]'s [ABILITY] [CHANGED] its [STAT]!" <DON'T ADD 9> <REFACTOR LATER>
! 0xC8 = (special message for move ID 257?) <DON'T ADD 9> <probably refactor later to not remove the old C8, "prevents romance">
! 0xD5 = "drastically " <DON'T ADD 9>
! 0xD6 = "severely " <DON'T ADD 9> (what happens to the old D5 and D6?)
! 0xEB = "[PKMN]'s [ABILITY] made it hail! (placeholder)" <DON'T ADD 9>
= 0x180 = "[PKMN]'s [ABILITY] nullified the effects of weather!" <ADD THIS AFTER IMPORTING ABILITYBATTLEEFFECTS>
= 0x181 = "[PKMN]'s [ITEM] let it move first!"
! 0x183 = "The [ITEM] weakened [MOVE]'s power!"
! 0x184 = "[PKMN] is not affected by [MOVE] thanks to its [ITEM]!"
! 0x185 = "[PKMN] breaks the mold!"
! 0x186 = "[PKMN] is exerting its pressure!"
! 0x187 = "[PKMN] can't get it going because of its [ABILITY]!"
! 0x188 = "[PKMN] finally got its act together!"
! 0x189 = "[PKMN]'s [ABILITY] alerted it to [MOVE]!"
! 0x18A = "[PKMN]'s [ABILITY] made it shudder!"
! 0x18B = "[ATTACKER] frisked [DEFENDER] and found its [ITEM]!"
! 0x18C = "[Your/The opposing] team was protected by [PKMN]'s [ABILITY]! (placeholder)"
! 0x18D = "[PKMN]'s [ABILITY] makes [your/the opposing] team too nervous to eat Berries! (placeholder)"
! 0x18F = "The twisted dimensions returned to normal!"
! 0x191 = "[Your/The opposing] team's Tailwind petered out!"
! 0x192 = "[PKMN]'s [ABILITY] maxed its Attack! (placeholder)"
! 0x193 = "[DEFENDER]'s [ABILITY] disabled [ATTACKER]'s [MOVE]! (placeholder)"
! 0x194 = "[PKMN]'s Ability became Mummy!"
! 0x195 = "[DEFENDER]'s [ABILITY] hurt [ATTACKER]! (placeholder)"
! 0x196 = "[DEFENDER]'s [ABILITY] lowered [ATTACKER]'s [STAT]! (placeholder)"
= 0x197 = (typeboost bcs 1E effect)
+ 0x198 = "The effects of the [ITEM] prevent status moves from being used!"
+ 0x199 = "[PKMN]'s [ABILITY] raised its [STAT]! (placeholder)" <REFACTOR LATER>
+ 0x19B = "[PKMN]'s [ABILITY] bounced [MOVE] back! (placeholder)"
! 0x19C = "[PKMN]'s [ABILITY] blocks the use of [MOVE]! (placeholder)"
! 0x19D = "[PKMN] restored HP using its [ABILITY]! (placeholder)"
! 0x19E = "[PKMN] is hurt by its [ITEM]!"
= 0x20E = "[PKMN] became trapped by swirling magma!"/"[DEFENDER] has been afflicted with an infestation by [ATTACKER]!"
= 0x20F = "[DEFENDER] has been afflicted with an infestation by [ATTACKER]!"/"[PKMN] became trapped by swirling magma!"

grafics:
= 3BF58C (3860F0 old, 783890 new)
= 3CD5E8 (395324 old, 90C190 new)
= 3CE5FC (396334 old, 396D18 new)
= 3CE738 (3964D0 old, 396394 new)
= 3CE758 (3964F0 old, 3963B4 new)
= D0051C (C0051C old, EB8990 new)
= E9C3D8 (3964B0 old, 396374 new)
= E9C3F8 (396470 old, 396334 new)
= E9C418 (396490 old, 396354 new)
= E9C438 (396510 old, 396470 new)
= E9CAEC (396BD0 old, 39CE04 new)
= EAB6C4 (3835A4 old, D97800 new)
= EAB8C4 (383604 old, F00000 new)
= EAD390 (385018 old, 8E0B00 new)
= EAD5E8 (385228 old, F03730 new)
= EAD608 (385248 old, 8E38A0 new)
= EADEE4 (385B24 old, F03460 new)
= EAE094 (385CD8 old, F03020 new)
= EAE0B4 (385CF8 old, F01A00 new)
= EAE374 (385FDC old, F03050 new)

+ expand rom to 2x
+ expand 1C68F4 (move animations) from 356 entries to 680 (1030000) 
+ expand 1C6EA8 (misc animations) from 23 entries to 24 (24th entry is 1C9989 - whirlwind animation) (104FF00)
+ expand 1D65A8 (move scripts) from 214 entries to 256 (1065000)
= expand 245EE0 (species names) from 10 per to 12 per (1060BA0?)
= expand 247094 (move names) from 355 entries/12 per to 680 entries/16 per (1000000)
= expand 24F1A0 (type names) from 18 entries/7 per to 19 entries/9 per (j411E1C, e1411E1C)
+ expand 24FB08 (ability descriptions) from 78 entries to 232 (13FD000)
= expand 24FC40 (ability names) from 78 entries/12 per to 232 entries/16 per (13FF000)
+ expand 25011C (battle script commands) from 248 entries to 256 (EB7A00)
= expand 2507E8 (uncopiable moves) from 4 entries (mimic) / 19 entries (metronome) to 5 entries (mimic) / 44 entries (metronome) (j20CA40, eUNKNOWN)
+ expand 250848 (pickup table) from 16 entries to 10 subtables of varying size (1528150)
+ expand 250C04 (move data) from 355 entries to 680 (1010000)
+ expand 2539D4 (cry ids) to encompass all ids (865DE0)
+ expand 25EF0C (egg moves) from 0x8E8 bytes to 0xFC4 bytes (8B6630)
+ expand 26056C (ball sprites) from 12 entries to 26 (A23000)
+ expand 2605CC (ball sprite palettes) from 12 entries to 26 (A230F0)
+ expand 2606F4 (ball sprite templates) from 12 entries to 26 (A23380)
! expand 399388 (battle anim sprites???) to [BROKEN] (11ECA80)
! expand 399C90 (battle anim palettes???) to [BROKEN] (11EDD80)
+ expand 39FDB0 (field object graphics info pointers) from 174 entries to 256 (j4EFDA0, e14EFDA0)
! expand 3A65BC (movement action functions) from 170 entries to 226 (j221550, eUNKNOWN)
- expand 3ACC08 (battle anim sprites) from 289 entries to 462 (1200300)
	- also set 3AD048 (gBattleAnimPicTable[136]) to 1200740
- ???
	! also set 3AD950 (gBattleAnimPaletteTable[136]) to 1201A40
- expand 3ADE18 (battle anim backgrounds) from 27 entries to 100 (11FF000)
- expand 3D3740 (raw mon icon palette data) from 3 entries to 6 (ONLY FIRST PTR) (EE4E00?)
+ expand 3D4038 (mon icon palettes) from 6 entries to 16 (jE40000, e1E40000)
+ expand 3DB028 (item data) from 375 entries to 435 (10B0000)
+ expand 3FE5A0 (trapping messages) from 6 entries to 8 (1053700)
+ expand 3FE664 (trapping moves) from 6 entries to 8 (1303552)

= repoint 02A3C8 -> j168F08 (atkAA_setdestinybond) - need part at destination removed first + ASM can't be repointed without decompilation + do it itself later
= repoint 02C670 ->  EB8130 (atkD9_scaledamagebyhealthratio) - ASM can't be repointed without decompilation + do it itself later
+ repoint 1D8C10 -> 1051B20 (BattleScript_SuccessForceOut) - do it itself later
+ repoint 1D9015 -> 1052EE0 (BattleScript_FocusPunchSetUp) - do it itself later
! repoint 1D9444 -> 1050260 (BattleScript_ObliviousPreventsAttraction) - script done, import during atk97_tryinfatuating

= 006884: ptr 217818 (gUnusedJapaneseFireRedLeafGreenMaleFontGlyphs - emerald name) -> 207500 (gFont2JapaneseGlyphs)
= 0069F0: ptr 227B30 (gUnusedJapaneseFireRedLeafGreenFemaleFontGlyphs - emerald name) -> 207500 (gFont2JapaneseGlyphs)
		  (wait until playthrough - is this the equivalent of removing gender colors?)
= 008CF8, 008D2C: 0A -> 0C (pkmnnamelength)
= 00960C: 36 -> 33 (some sort of link-related graphics function?, see 1disasm)
= 00D311: 68 -> 47
  00D320: 4C 2B 02 02 -> XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j252400, see 02disasm))
		  Implements: need more info
		  Required knowledge: j0203B900, j0203C00D, j0203D500
= 011357: 20 08 40 88 21 8A 46 00 28 -> 31 09 06 09 0E 8A 46 02 E0 (something about personality values + trainer gender)
= 0113E0, 0113F2, 011466, 011478, 011526, 011538, 0115BA, 0115CC: 0B -> 10 (pkmnnamelength)
= 011688: 0E 49 -> 10 47
  0116C8: 4C 2B 02 02 -> XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2FD90, see 03disasm))
		  Implements: pkmnnamelength, something else - need more info
		  Required knowledge: j020385E2, unknown data table at j1400000
= 0124EB: 80 -> 60 (store weather as fullword)
= 014CD8: Entirety of GetWhoStrikesFirst (+GetSpeedStat, GetPriority, GetAbilityValues) (see 04disasm/04disasm2)
		  Implements: Unburden (effect), Quick Feet, Stall, Klutz (speed items), Slow Start (Speed reduction), Sand Rush, Prankster, Gale Wings [gen 6], Slush Rush, Choice Scarf (speed boost), Lagging Tail, Tailwind (effect), Trick Room (effect), 1/4 -> 1/2 paralysis speed cut, removal of badge 3 bonus
		  Relies on: weather refactor, BattleMove refactor, returns 0 sometimes instead of 1 or 2
		  Glitch: Stall and Trick Room are in wrong order, Stall goes first in Trick Room (probably doesn't matter in P/D itself)
= 015910: Entirety of HandleEndTurn_FinishBattle (see 05disasm)
		  Implements: EVs recalculated per battle (?)
		  Requires in future: extra fn j207370
= 015CA0: Entirety of HandleAction_UseMove (+CheckSwitchToSpreadMoveScript, BattleScript_EffectSpreadMove) (see 06disasm)
		  Implements: Storm Drain (redirection), Mold Breaker+ (vs redirection)
		  Relies on: gChosenActionByBattler changed to something else
		  Note: test deeply - incomprehensible code
= 016460: 0C 29 1B D8 0B 4A 0C 49 -> 00 00 00 00 0B 4A 97 46
  016494: 74 3D 02 02 -> E0 31 A2 08 (jumps (mov) to fn at A231E0, then back; see 07disasm)
		  Implements: new pokeballs (throw action)
		  Required knowledge: gLastUsedItemType (j0203FE00)
		  Relies on: pokeball ID changes
		  Glitch?: Cherish Ball uses SafariBallThrow (not relevant since it should be unobtainable)
+ 017594: Entirety of TrySetCantSelectMoveBattleScript (see 08disasm)
		  Implements: Klutz (move restriction items), Choice Specs (locking), Choice Scarf (locking), Assault Vest (move prevention)
		  Relies on: Choice Band effect ID change
+ 0177C8: C8 8D AF 28 0E D1 06 4A F9 00 C8 1B 80 00 80 18 C0 79 00 90 0F E0 -> 08 1C 20 30 00 78 67 28 0C D1 00 20 10 E0 00 00 00 00 00 00 00 00
  0177E8: B4 3E 02 02 -> 00 00 00 00
  01783C, 01785C, 017878, 01790A, 01792A: 20 06 04 0E -> 00 00 00 00
  0178BA: 20 06 04 0E 2F 48 40 44 C0 7C 00 07 00 28 10 D0 10 20 18 40 00 28 0C D0 2F 4A 29 88 48 00 40 18 80 00 80 18 40 78 00 28 03 D1 30 68 04 43 20 06 04 0E -> 00 00 00 00 00 9A 52 2A 05 D0 2D 48 40 44 C0 7C 00 07 00 28 0D D0 10 20 18 40 00 28 09 D0 2D 4A 29 88 0C 20 48 43 80 18 40 78 00 28 01 D1 30 68 04 43
  01791C: 07 -> 05
  017924: 03 -> 01
  017930: 1D 2A 0D D1 01 98 01 88 00 29 09 D0 15 48 81 42 06 D0 2A 88 91 42 03 D0 30 68 04 43 20 06 04 0E -> 44 2A 0D D3 46 2A 0B D8 01 98 01 88 00 29 07 D0 14 48 81 42 04 D0 2A 88 91 42 01 D0 30 68 04 43
		  Implements: Klutz (choice item locking), Choice Specs (locking), Choice Scarf (locking)
		  Relies on: Choice Band effect ID change
= 017BE0: D4 80 01 08 44 81 01 08 9C 81 01 08 -> 8A 80 01 08 50 81 01 08 E6 81 01 08
  01801C: 48 46 00 28 00 D0 06 E1 62 46 11 68 C8 78 01 30 C8 70 FC E0 -> A0 E7 10 9A 01 12 40 00 3E 10 98 01 12 40 00 3E 00 00 00 00
  018050: Large part of DoFieldEndTurnEffects (+unknown battlescript) (see 09disasm)
		  Implements: Tailwind (upkeep), Trick Room (upkeep), permahail
		  Relies on: weather refactor; BattleScript_SandStormHailEnds/BattleScript_DamagingWeatherContinues work with sun; params are changed (6 = rain -> tailwind, 7 = sand -> trick room, 8 = sun -> all weather, 9 = hail -> nop)
		  Glitch?: check if tailwind works on both sides, code's weird
+ 018308: FA 83 01 08 78 84 01 08 C0 84 01 08 40 85 01 08 88 85 01 08 EC 85 01 08 34 86 01 08 -> E2 83 01 08 3A 84 01 08 76 84 01 08 94 85 01 08 D4 85 01 08 1E 86 01 08 58 86 01 08
  018344: E2 83 01 08 -> C6 83 01 08
  01834C: Large part of DoBattlerEndTurnEffects (+unknown battlescript) (see 10disasm)
		  Implements: Heatproof (burn damage), Poison Heal, Magic Guard (end-of-turn status damage), Klutz (the item effects here), Binding Band, Big Root (ingrain), 1/8 -> 1/16 burn damage, 1/16 -> 1/8 wrap damage
		  GLITCH!: Poison Heal still doesn't work, some other change probably needed
+ 0194E0: 16 49 17 4F 38 78 58 26 70 43 0D 1C 4C 35 40 19 00 68 20 21 08 40 00 28 42 D0 2B F0 E5 FC 00 04 00 0C 05 21 CB F1 BE F8 00 04 04 0C 00 2C 23 D0 0C 4A 0D 48 01 88 48 00 40 18 80 00 80 18 00 78 7D 28 00 D1 0F E2 09 49 09 48 08 60 09 4A 10 68 80 21 89 00 08 43 10 60 1E E0 00 00 -> 16 4D 17 4F 38 78 58 26 70 43 40 19 C0 6C 20 21 08 40 00 28 44 D0 2B F0 E7 FC 04 21 CB F1 C2 F8 00 28 29 D0 0F 4A 10 48 01 88 0C 20 48 43 80 18 00 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 7D 28 00 D1 0E E2 08 49 09 48 08 60 09 4A 10 68 80 21 89 00 08 43 10 60 1D E0
  019558: 38 78 02 1C 72 43 52 19 10 68 21 21 49 42 08 40 10 60 FD F7 EB FF 06 49 06 48 08 60 06 48 44 71 -> 3A 78 72 43 52 19 D0 6C 21 21 49 42 08 40 D0 64 FD F7 EC FF 06 49 07 48 08 60 07 49 00 20 48 71
		  Implements: 20% -> 25% thaw chance
+ repoint 1D90B1 -> 18539 (BattleScript_MoveUsedFlinched) (10 4A 00 12 40 00 1E 01 50 4B 85 01 08 28 4E 69 1D 08 2E DE 3F 02 02 13 89 41 4E 69 1D 08 29 00 87 3E 02 02 02 4E 69 1D 08 47 45 01 01 D4 3F 02 02 10 A2 01 12 40 00 28 4E 69 1D 08) (implements steadfast)
+ 019814: Part of AtkCanceller_UnableToUseMove (see 11disasm)
		  Implements: 50% -> 33% confusion hit chance
= 019DAC: Entirety of CastformDataTypeChange (+added mysteryfunc, +GetAbilityUserOnSameSide) (see 12disasm)
          Implements: part of weather refactor
		  Glitch?: Might cause castform/terubim to "change" when sand starts/ends; might have done it wrong, check if rain=ice and hail=water accidentally
= 01A088: Most of AbilityBattleEffects (see 13disasm)
		  Implements: Stench flinch chance, Lightning Rod boost/immunity, Pressure message, Motor Drive, Anger Point, Unburden (activation), Dry Skin (rain/water healing/immunity), Download, Hydration, Magic Guard (vs contact damage abilities), Klutz (the item effects here), Mold Breaker (message), Mold Breaker+ (vs move-subset immunities/absorbing immunities), Aftermath, Anticipation, Forewarn, Slow Start (upkeep), Storm Drain (boost/immunity), Ice Body, Snow Warning, Frisk, Unnerve (message), Cursed Body, Healer, Weak Armor, Moody, Overcoat (vs powder), Poison Touch, Imposter, Infiltrator (getting affected by hit-reaction abilities when hitting through Substitute), Mummy, Justified, Rattled, Sap Sipper, Iron Barbs, Aroma Veil, Sweet Veil, Gooey, Flower Veil (vs Gooey/Tangling Hair), Bulletproof, Stamina, Water Compaction, Dazzling, Queenly Majesty, Tangling Hair, weather rocks (on abilities), Safety Goggles (vs powder), grass-type powder immunity, dark-type prankster immunity, user affected by hit-reaction abilities when its sound moves hit through Substitute
		  Relies on: weather refactor, BattleMove refactor, cloud nine/intimidate id change????, gSpecialStatuses[battler].intimidatedMon?
		  Requires in future: GetAbilityUserOnSameSide, GetWeatherTurns, CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Note: Check Weak Armor vs Psyshock, might be wrong
= 01BC68: Entirety of ItemBattleEffects (+ CheckUnnerve, IsAffectedBySheerForce, GetPinchThreshholdFromParam, GetMoveWithNoPP, GetPartyIndex, CheckAndRunCheekPouch) (see 14disasm)
		  Implements: Magic Guard (Life Orb), Klutz (berries, Amulet Coin, Leftovers, White Herb, Mental Herb, Shell Bell, the item effects here), Sheer Force (Life Orb/Shell Bell glitch), Unnerve (Gen3 berries), modern Sitrus Berry, Black Sludge, Life Orb, status cure items/white herb consumed immediately
		  Required knowledge: j0203B950
		  Requires in future: GetPinchThreshhold (j207450), PushScriptInstr (j207470)
		  Glitch?: white herb/amulet coin might not work unless unnerve IS active
! 01D402: 97 -> FC (PDONLY, makes mew not disobey)
+ 01D760: Entirety of atk00_attackcanceler (see 15disasm)
		  Implements: Magic Bounce, Protean, Mold Breaker+ (vs Magic Bounce)
		  Glitch: If the Magic Bounce user has Magic Coat, Magic Bounce activating against a Pressure user will deduct 1 PP from Magic Coat
= 01DC7C: Entirety of AccuracyCalcHelper (see 16disasm)
		  Implements: No Guard, the following not missing: Toxic from poison-types, Stomp on Minimize, Hurricane in rain, Blizzard in hail, Struggle, Bide, Mimic, Pain Split, Lock-On, Foresight, Role Play, Yawn, Imprison, Magic Coat (?), Snatch (?), (effect37), (effect38), (effect3F), (effect68)
		  Relies on: weather refactor
= 01DDC4 -> 01DE30 (repoint): Entirety of atk01_accuracycheck (see 17disasm)
		  Implements: Keen Eye ignoring evasion, Tangled Feet, Snow Cloak, Klutz (acc/evasion items), Mold Breaker+ (vs acc/evasion), Unaware (acc/evasion), (ability93), Victory Star, Wide Lens, Hurricane acc- in sun, removes some first-battle code
		  Relies on: weather refactor, BattleMove refactor, GetAbilityUserOnSameSide
		  Required knowledge: j0203B950
		  Glitch?: (ability93) might not work unless Victory Star is active on the other side
		  Note: Check Hustle accuracy vs Psyshock, might be wrong
= 01E1D8: Shift entirety of atk02_attackstring down one line to make call to extra func j207790 first (see 18disasm)
		  Implements: Possibly tracks number of times each of player's moves are used?
		  Required knowledge: j0203B970
+ 01E408: Entirety of atk04_critcalc (see 19disasm) (ALSO 250530: 10 00 08 00 04 00 03 00 02 00 -> 18 00 08 00 02 00 01 00 01 00)
		  Implements: Klutz (crit boost items), Mold Breaker+ (vs Shell Armor), Super Luck, Frost Breath, modern crit stages; removes Poison Tail/Blaze Kick crit+ (now unused?)
		  Removes (now unused?): Poison Tail/Blaze Kick crit+
= 01E59C: Entirety of atk05_damagecalc (see 20disasm)
		  Implements: Sniper, 2x -> 1.5x crit damage; removes gBattleScripting.dmgMultiplier, Charge boost, Helping Hand boost (moved to CalculateBaseDamage)
		  Relies on: above being moved to CalculateBaseDamage
= 01E848: Entirety of atk06_typecalc (see 21disasm) (ALSO 25DEEE: 00 00 -> 1D 09)
		  Implements: Adaptability, Normalize (type change), Klutz (the item effects here), Mold Breaker+ (vs Levitate, Wonder Guard, Filter/Solid Rock), Tinted Lens, Solid Rock, Filter, Scrappy, Aerilate (type change), Pixilate (type change), Refrigerate (type change), Galvanize (type change), Expert Belt, (typeboost items with param bcs 1E), ice immunity to sheer cold
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), script_1F552_J (e1FD42), gChosenActionByBattler changed to something else
		  Requires in future: HasItemWithTypeEffect, AteAbilityConversionTable (j168CB4)
		  Note: check wonder guard vs canceled se (elec on water/ground, fire on rock/grass)
= 01EDF4: Entirety of TypeCalc (see 22disasm)
		  Implements: Lightning Rod (immunity), Motor Drive (immunity), Dry Skin (immunity), Adaptability, Normalize (type change), Klutz (the item effects here), Mold Breaker+ (vs Filter/Solid Rock), Tinted Lens, Solid Rock, Filter, Scrappy, Storm Drain (immunity), Unnerve (type-resist berries), Overcoat (vs powder), Sap Sipper (immunity), Aroma Veil, Aerilate (type change), Pixilate (type change), Refrigerate (type change), Bulletproof, Galvanize (type change), Dazzling, Queenly Majesty, Expert Belt, type-resist berries, grass-type powder immunity
		  Relies on: battleMove refactor
		  Requires in future: RunTypeEffectivenessBasedAbilities (j2076B0), IsMoveBlockedByAbility (j251DA0), AteAbilityConversionTable (j168CB4)
		  Glitch?: Solid Rock might be 3/4 to ALL damage
= 01EFCC: Entirety of AI_TypeCalc (see 23disasm)
		  Implements: Lightning Rod (immunity), Motor Drive (immunity), Dry Skin (immunity), Storm Drain (immunity), Overcoat (vs powder), Sap Sipper (immunity), Aroma Veil, Bulletproof, Dazzling, Queenly Majesty, grass-type powder immunity
		  Relies on: battleMove refactor
		  Requires in future: IsMoveBlockedByAbility (j251DA0)
		  Notes: Of the three, only atk06_typecalc contains the Mold Breaker functionality (besides vs Solid Rock)/Sheer Cold immunity/(bcs 0x1E items), only TypeCalc contains the Hidden Power calc/non-Levitate ability immunities/type-resist berries, and AI_TypeCalc doesn't have anything but the immunity abilities (no Mold Breaker even); not sure what this implies
= 01F104: Entirety of atk07_adjustnormaldamage (+HasItemWithTypeEffect, GetWeatherTurns) (see 24disasm)
		  Implements: modern Sturdy, Klutz (Focus Band, the item effects here), Mold Breaker+ (vs Sturdy), Unnerve (type-resist berries), Infiltrator (foe can endure when hit through Substitute), Focus Sash, type-resist berries, foe can endure when hit by sound moves through Substitute
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), BattleScript_ConsumeDamageReductionBerry (e1FD33, j1F543), BattleMove refactor
		  Requires in future: ClearFocusBand (j168C88), SetFocusBand (j168C9C), AteAbilityConversionTable (j168CB4)
		  Glitch: Pointer to AteAbilityConversionTable (j168CB4) instead points to j168CA4
= 01F2B4 -> 01F394 (repoint): Entirety of atk08_adjustnormaldamage2 (see 25disasm)
		  Implements: modern Sturdy, Klutz (enduring (Focus) items), Mold Breaker+ (vs Sturdy), Infiltrator (foe can endure when hit through Substitute), Focus Sash, foe can endure when hit by sound moves through Substitute
		  Relies on: atk07_adjustnormaldamage, BattleMove refactor
		  Note: Actually just calls atk07_adjustnormaldamage with gCurrentMove set to 0
= 01F5A8: Entirety of atk0B_healthbarupdate (see 26disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute
		  Relies on: BattleMove refactor
		  Note: Removes 10000 hard damage limit, might break something?
= 01F684 -> 01F6A0 (repoint): Entirety of atk0C_datahpupdate (see 27disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute, (j0203B950?)
		  Relies on: BattleMove refactor
		  Required knowledge: j0203B950
		  Glitch?: special moves might not be set properly (moveType >= 8 when moveType is now a P/S signifier)
= 01FBA0: Entirety of atk0F_resultmessage (+ConsumeItem, BattleScript_ConsumeDamageReductionBerry, script_1F552_J) (see 28disasm)
		  Implements: Focus Sash (consumption on use)
		  Relies on: gChosenActionByBattler changed to something else
= 01FF20: Parts of SetMoveEffect (see 29disasm)
		  Implements: Leaf Guard (vs secondary effects), Mold Breaker (vs Shield Dust), Infiltrator (secondary effects working through Substitute), Sweet Veil (vs secondary effects), Flower Veil (vs secondary-effect status), secondary effects of sound moves working through Substitute
		  Relies on: BattleMove refactor, changes at 0206A2
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Note: check moves like Superpower when user has sub, appears to be removed
= 020376: 60 -> 30 (weather refactor - sun)
+ 0203E4: (see 29disasm)
		  Implements: electric-type immunity to paralysis secondary effects
+ 020596: 0B 4A 0B 49 0B 78 58 21 4B 43 4C 32 9B 18 03 21 01 40 02 31 18 68 08 43 18 60 16 E0 -> 03 21 A8 F1 FC FB 83 1C 15 E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
		  Implements: max sleep turns 5 -> 4
= 0206A2: 4B 46 19 78 58 20 41 43 40 46 50 30 09 18 0A 4A F3 78 98 00 80 18 09 68 00 68 01 40 00 29 01 D0 00 F0 13 FD D8 -> 00 00 4B 46 19 78 58 20 48 43 41 46 0B 18 0A 49 F2 78 90 00 40 18 19 6D 00 68 01 40 00 29 01 D0 00 F0 13 FD D0
		  Implements: extension of changes at 01FF20
+ 0207A4: ptr 0A 11 02 08 -> 8C 0F 02 08
		  Implements: 50% recoil effect
		  Relies on: changes at 020F78
! 02082C: (see 29disasm)
		  Implements: Mold Breaker+ (vs Inner Focus)
		  Note: decompilation mistake on my end? mold breaker mons would be unable to flinch foe (check once below is fixed)
		  GLITCH!: Flinching stopped working completely, some other change probably needed
+ 0208B8: (see 29disasm)
		  Implements: nothing?
! 020A20: (see 29disasm)
		  Implements: Grip Claw, Klutz (Grip Claw), wrapping moves duration 3-6 -> 5-6
		  Note: check if wrap still works (check once below is fixed)
		  GLITCH!: Wrap stopped working completely, some other change probably needed
! 020AEC: (see 29disasm)
		  Implements: Modern Struggle
		  Relies on: changes at 020F78
		  GLITCH!: Struggle has 100% HP recoil, some other change probably needed
= 020B70, 020BF8: ptr D1 6B 1D 08 -> XX XX XX 08 (j0229DE)
= 020BB4, 020C3C: ptr 62 6C 1D 08 -> XX XX XX 08 (j0229EF)
		  Implements: need more info
		  Requires in future: script_229DE_J, script_229EF_J
= 020F00: (see 29disasm)
		  Implements: Smelling Salts now does...something (need more info)
! 020F78: (see 29disasm) (last part of SetMoveEffect)
		  Implements: Magic Guard (move recoil)
		  GLITCH!: Rock Head stopped working completely/Magic Guard doesn't work, some other change probably needed
= 021124: Entirety of atk15_seteffectwithchance (see 30disasm)
		  Implements: Sheer Force (secondary effect removal)
		  Relies on: BattleMove refactor
+ 0212AC: Large part of atk19_tryfaintmon (see 31disasm)
		  Implements: Moxie
= 021640: Entirety of atk1C_jumpifstatus (see 32disasm)
		  Implements: Makes room for expanded atk1D_jumpifstatus2
		  Requires in future: fn_20EFE_J
= 0216B8 -> 021624 (repoint): Entirety of atk1D_jumpifstatus2 (+fn_20EFE_J) (see 33disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute
		  Relies on: BattleMove refactor
= 021730: Entirety of atk1E_jumpifability (see 34disasm)
		  Implements: Leaf Guard, Flower Veil (vs status)
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
+ 021818: Entirety of atk1F_jumpifsideaffecting (see 35disasm)
		  Implements: Infiltrator (vs Safeguard)
+ 022FCE: 20 -> 80
  022FD0: 0D D0 -> 06 DA
  022FD4: 04 DC -> 0B DA
  022FE7: D0 -> DA
		  Implements: Correct stat animations for drastically/severely
= 02301C: Entirety of atk48_playstatchangeanimation (+BattleScript_FlowerVeilProtects) (see 36disasm)
		  Implements: Mold Breaker+ (vs stat-reduction prevention abilities), Contrary, Big Pecks, Infiltrator (vs Mist), Flower Veil (vs stat reduction)
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Glitch: 0x68 (Mold Breaker) is instead 0x97, test mold breaker vs clear body
= 023366, 023BC0, 023BD6, 023BE0, 023BEC: 11 -> 13
  02337C: C4 33 02 08 A0 34 02 08 5C 35 02 08 80 35 02 08 98 35 02 08 C0 35 02 08 E4 35 02 08 8C 36 02 08 02 37 02 08 38 37 02 08 D8 37 02 08 CC 36 02 08 EC 36 02 08 1C 38 02 08 60 38 02 08 40 3A 02 08 28 3B 02 08 B4 3B 02 08 2D 4E 2E 4D 2B 78 58 27 -> CC 33 02 08 44 34 02 08 C0 34 02 08 DC 34 02 08 F8 34 02 08 14 35 02 08 34 35 02 08 E4 35 02 08 4C 36 02 08 02 37 02 08 38 37 02 08 D8 37 02 08 7A 36 02 08 96 36 02 08 AE 36 02 08 1C 38 02 08 60 38 02 08 40 3A 02 08 28 3B 02 08 B4 3B 02 08
  0233C4 -> 0233CC (repoint): Large part of atk49_moveend (see 37disasm)
  023B28: Another part of atk49_moveend (see 37disasm2)
		  Implements: Stench flinch chance, Klutz (choice item locking), Poison Touch, Choice Specs (locking), Choice Scarf (locking), non-hardcoded spread moves
		  Relies on: AbilityBattleEffects/ItemBattleEffects new cases, Choice Band effect ID change, gChosenActionByBattler changed to something else, CheckSwitchToSpreadMoveScript (j1588C, e16078), BattleScript_EffectSpreadMove (j158B0, e1609C)
		  Notes: Inert call to ItemBattleEffects (arg 2)?
= 023E88: Entirety of atk4B_returnatktoball (see 38disasm)
		  Implements: need more info
		  Required knowledge: j0203B960
		  Requires in future: extra fn j2058E0
= 023ED8: Entirety of atk4C_getswitchedmondata (see 39disasm)
		  Implements: need more info
		  Required knowledge: gWasMonShown (j0203B964)
+ 024EC0: 08 1C 21 30 00 78 02 28 5E D0 08 1C 22 30 00 78 02 28 59 D0 08 1C 20 30 00 78 1A 28 54 D0 -> 20 31 48 78 02 28 5F D0 88 78 02 28 5C D0 08 78 1A 28 59 D0 62 28 57 D0 00 00 00 00 00 00
		  Implements: Magic Guard (vs Spikes)
+ 025A0E: 05 -> 06 (+1 max digits for money)
= 025FE0: Entirety of atk69_adjustsetdamage (see 40disasm)
		  Implements: modern Sturdy, Klutz (enduring (Focus) items), Mold Breaker+ (vs Sturdy), Focus Sash
		  Requires in future: ClearFocusBand (j168C88), SetFocusBand (j168C9C)
		  Notes: False Swipe appears to be removed, check; check that infiltrating set-damage moves hit through sub
= 02615C: Entirety of atk6A_removeitem (see 41disasm)
		  Implements: Cheek Pouch
		  Relies on: CheckAndRunCheekPouch (j1C5FC, e1CDEC), BattleScript_CheekPouchHeals (j1C728)
		  Requires in future: PushScriptInstr (j207470)
		  Glitch?: .item is off by 20, items aren't removed???
= 027220: Entirety of atk7A_jumpifnexttargetvalid (see 42disasm)
		  Implements: Telepathy
		  Relies on: GetAbilityUserOnSameSide
= 0274A8: Entirety of atk7D_setrain (see 43disasm)
		  Implements: Damp Rock (manual rain), Klutz (Damp Rock manual rain)
		  Relies on: GetWeatherTurns, weather refactor
+ 0274FC: Entirety of atk7E_setreflect (see 44disasm)
		  Implements: Light Clay (Reflect), Klutz (Light Clay on Reflect)
+ 027688: Entirety of atk80_manipulatedamage (see 45disasm)
		  Implements: Magic Guard (blocks unknown effect), modern High Jump Kick, others not known yet
		  Note: script_1D694E loaded but never used
= 027830: Entirety of UproarWakeUpCheck (see 46disasm)
		  Implements: Makes room for expanded atk84_jumpifcantmakeasleep
= 0278CC -> 0278A8 (repoint): Entirety of atk84_jumpifcantmakeasleep (see 47disasm)
		  Implements: Leaf Guard (sleep), Sweet Veil, Flower Veil (sleep)
		  Relies on: GetAbilityUserOnSameSide
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Glitch?: Leaf Guard doesn't prevent Rest
= 027AE4: Entirety of atk87_stockpiletohpheal (see 48disasm)
		  Implements: Makes room for expanded atk88_negativedamage
= 027BC8 -> 027B78 (repoint): Entirety of atk88_negativedamage (see 49disasm)
		  Implements: Magic Guard (vs Liquid Ooze), Big Root (draining moves), Klutz (Big Root on draining moves)
		  Note: something about the above two causes a crash, figure out later
= 027BFC: Entirety of ChangeStatBuffs (+CheckLeafGuardAndFlowerVeil) (see 50disasm)
		  Implements: Simple, Mold Breaker+ (vs stat-reduction prevention abilities), Contrary, Big Pecks, Infiltrator (vs Mist), "drastically/severely"
		  Relies on: BattleScript_FlowerVeilProtects (j22A00, e23200)
		  Glitch?: Flower Veil msg called at wrong time
+ 028190: Entirety of atk8C_confuseifrepeatingattackends (see 51disasm)
		  Implements: Makes room for expanded atk8D_setmultihitcounter
+ 0281D0 -> 0281C8 (repoint): Entirety of atk8D_setmultihitcounter (see 52disasm)
		  Implements: Skill Link
+ 02883C: Entirety of atk92_setlightscreen (see 53disasm)
		  Implements: Light Clay (Light Screen), Klutz (Light Clay on Light Screen)
= 028908: Entirety of atk93_tryKO (see 54disasm)
		  Implements: Klutz (enduring (Focus) items vs OHKO moves), Mold Breaker+ (vs Sturdy for OHKO moves), Focus Sash (OHKO moves), Sheer Cold lower accuracy from non-Ice-types
		  Requires in future: ClearFocusBand (j168C88), SetFocusBand (j168C9C)
		  Glitch?: Subtracting 0x10 instead of 10 means Sheer Cold is 14% accuracy when used by non-Ice-types, should be 20% (check online, maybe wrong)
= 028C98: Entirety of atk95_setsandstorm (see 55disasm)
		  Implements: Smooth Rock (manual sand), Klutz (Smooth Rock manual sand)
		  Relies on: GetWeatherTurns, weather refactor
= 028CF0: Entirety of atk96_weatherdamage (see 56disasm)
		  Implements: Snow Cloak (hail immunity), Dry Skin (sun HP loss), Solar Power (HP loss), Magic Guard (vs weather damage), Ice Body (hail immunity), Overcoat (vs weather), Sand Rush (sand immunity), Sand Force (sand immunity), Slush Rush (hail immunity), Safety Goggles (vs weather), Klutz (Safety Goggles vs weather)
		  Relies on: weather refactor
		  Note: Test heavily, incomprehensible code
= 028E90: Entirety of atk97_tryinfatuating (see 57disasm)
		  Implements: refactors to include extra param (if set to 1, skip actually infatuating) - makes it usable as a JumpIfCantInfatuate(); unknown message for move ID 257
		  Relies on: battlescripts change to accomodate above
+ 02975C: B1 -> FF (allows Metronome to select moves up to 0x1FF - Note: there are even more moves than that)
+ 0297E1: 01 -> 03 (allows Metronome to select from up to 0x3FF moves - but only up to 0x1FF can be selected, see above)
+ 029B40: 02 32 -> 04 22
  029B58: CB 7A -> 05 23 (Disable always lasts 4 turns)
+ 029C79: 32 -> 22
  029C90: 8B 7B -> 04 23 (Encore always lasts 3 turns)
= 02A240: 60 -> 30 (weather refactor - sun)
+ 02A566: 8E 1C -> 04 26 (Spite always removes 4 PP)
= 02B2D4: Entirety of atkBB_setsunny (see 58disasm)
		  Implements: Heat Rock (manual sun), Klutz (Heat Rock manual sun)
		  Relies on: GetWeatherTurns, weather refactor
= 02B5F2: 60 -> 30 (weather refactor - sun)
+ 02B678: Entirety of atkC1_hiddenpowercalc (see 59disasm)
		  Implements: Hidden Power = 60 power, Hidden Power Fairy (!)
= 02B774: Entirety of atkC2_selectfirstvalidtarget (see 60disasm)
		  Implements: Telepathy
		  Relies on: GetAbilityUserOnSameSide
= 02BC74: Entirety of atkC8_sethail (see 61disasm)
		  Implements: Icy Rock (manual hail), Klutz (Icy Rock manual hail)
		  Relies on: GetWeatherTurns, weather refactor
+ 02BFC4: Part of atkD0_settaunt (see 62disasm)
		  Implements: Oblivious Taunt immunity, Taunt 2->3 turns
+ 02CCC0: Entirety of atkE2_switchoutabilities (see 63disasm)
		  Implements: Regenerator
+ 02CD3C: Entirety of atkE3_jumpifhasnohp (see 64disasm)
		  Implements: Makes room for expanded atkE2_switchoutabilities
+ 02CE48: Entirety of atkE5_pickup (see 65disasm)
		  Implements: Honey Gather, modern pickup tables
+ 02CFD8: Entirety of atkE8_settypebasedhalvers (+ uncalled mysteryfunc) (see 66disasm)
		  Implements: Makes room for mysteryfunc
= 02D0D0: 07 -> 03
  02D0EC: 18 -> 0C
  02D100: 60 -> 30
  02D114: 80 -> C0 (part of weather refactor)
= 02D500, 02D6A0, 02D71C: 68 3D 02 02 -> 00 FE 03 02 (see 67disasm)
		  Implements: Need more info
		  Required knowledge: gLastUsedItemType (j0203FE00)
= 02D508: Part of atkEF_handleballthrow (+ add part at A23260_J) (see 67disasm)
		  Implements: Quick Ball (gen 6), Dusk Ball (gen 6), Park Ball, Heal Ball (catch rate), Cherish Ball, Moon Ball, Friend Ball, Heavy Ball, Level Ball, Love Ball, Lure Ball (gen 6), Fast Ball, ensures ball thrown in Safari Zone is Safari Ball
		  Required knowledge: gLastUsedItemType (j0203FE00), j02023FE0, j02023FF8, j0202429C, j02026D6C, j03005542
		  Relies on: 02D500, etc
		  Note: Fast Ball has manual table (A24300), different for base patch and P/D
		  Note: Check again - Heal Ball currently has secondaryId of 0, making it never work
		  Glitch?: Love Ball is boosted if pkmn are different genders, but "genderless" is counted as a third gender
		  Glitch?: Level Ball might check the level of the second pkmn in player's party
		  Glitch?: Cherish Ball uses the Moon Ball formula (not relevant since it should be unobtainable)
= 02D636: 19 49 -> AF 46
  02D698: E4 3B 02 02 -> 54 AB EE 08 (jumps (mov) to fn at EEAB54, then back; see 67disasm)
  02D764: 28 88 -> AF 46
  02D7B8: 68 3D 02 02 -> 30 AB EE 08 (jumps (mov) to fn at EEAB30, then back; see 67disasm)
		  Implements: critical capture
		  Relies on: 02D500, etc
		  Required knowledge: gLastUsedItemType (j0203FE00), gCritCapture (j0203FE04)
! 02EA10: Entirety of HandleInputChooseMove (see 68disasm)
		  Implements: Removes the "switch which?" text when moving moves in battle with SELECT
= 02EF58: Entirety of HandleMoveSwitching (see 69disasm)
		  Implements: Need more info
		  Required knowledge: j0203BF40
= 030830: Entirety of MoveSelectionDisplayMoveNames (see 70disasm)
		  Implements: Need more info (possibly displays the type icons in the info box)
		  Required knowledge: j02020024, j0203BF30, j0203BF40, j0203BF70, j0203D300, j0203D340, j0203D380, j0203D480
		  Requires in future: fn_1833C0_J
! 0308B8: A7 F0 80 FF -> 00 00 00 00
		  Implements: Removes "PP" for battle move summary (replaced by functionality in 030830); in JP, also makes "Move Type/" -> "Type/", but that's already true
! 030924: A7 F0 4A FF -> 00 00 00 00
		  Implements: Removes PP numbers for battle move summary (replaced by functionality in 030830)
= 030990: 09 1A -> 09 18
  0309A0: A7 F0 0C FF -> 00 00 00 00
		  Implements: Removes "Type/" + type names for battle move summary (replaced by functionality in 030830)
		  Relies on: expanded type names
! 0309CC: Entirety of MoveSelectionCreateCursorAt (see 71disasm)
		  Implements: Removes move selection cursor (replaced by functionality in 030830)
! 030A14: Entirety of MoveSelectionDestroyCursorAt (see 71disasm)
		  Implements: Removes move selection cursor (replaced by functionality in 030830)
= 034D26: 0B -> 10 (pkmnnamelength)
= 038744: Entirety of OpponentHandleChoosePokemon (see 72disasm)
		  Implements: New level of smart AI for switching choice (prioritizes mon with Trick Room if team is slow, prioritizes best Trick Room attacker during Trick Room, prioritizes weather setter when weather runs out, prioritizes mon with best type matchup)
		  Relies on: new AI value
		  Required knowledge: j020385E2, gWasMonShown (j0203B964), j0203BFF4
		  Requires in future: GetSideParty (j205D8A), GetFirstAllowableSwitchin (j205D96), GetBestTrickRoomAttacker (j2060FC), GetAvailableWeatherSetter (j206164), ChooseBestSwitchinNewAI (j2061DC), GetMatchupScore (j206292), ShouldUseTrickRoom (j206334), IsTeamSlow (j2063A4), CanUseNewAI (j20649C), GetBestMatchupScore (j2066CC), GetTypeMatchup (j252248)
+ 03937C: Entirety of FindMonThatAbsorbsOpponentsMove (see 73disasm)
		  Implements: AI understands new absorbing abilities (Lightning Rod, Motor Drive, Dry Skin, Storm Drain, Sap Sipper)
= 039A80: Entirety of ShouldSwitch (see 74disasm)
		  Implements: New level of smart AI for when to switch (switches if: has Regenerator, locked into resisted move, cursed, yawned, has a good Trick Room attacker under Trick Room, weather setter is in battle when weather runs out, weather setter isn't in battle when weather runs out, has a mon that's immune when existing mon might get double-targetted, or has a good stallmon under good stall conditions), locks switching for better type matchups behind the new level of smart AI
		  Relies on: GetSpeedStat (j1456A, e14D4A), new AI value
		  Required knowledge: gBackupMonData (j0203D48), j0203B960, j0203B965
		  Requires in future: ShouldSwitchIfMightBeDoubleTargeted (j205058), CopyMonToBattleMon (j205B0C), GetMonThatCanWithstandBiggestAttack (j205C80), GetGoodStallMon (j205CF6), GetSideParty (j205D8A), GetFirstAllowableSwitchin (j205D96), CanDoSevereDamage (j205E14), IsMonFasterThan (j205EE8), ShouldSwitchIfTrickRoom (j205F48), ShouldSwitchIfWeatherTeam (j205FDE), GetAITarget (j2060C0), GetBestTrickRoomAttacker (j2060FC), GetAvailableWeatherSetter (j206164), GetSlowMonWithLowHP (j20621C), IsMoveSuperEffective (j206418), CanUseNewAI (j20649C), ShouldSwitchIfStallMon (j2064C6), HasHealingMove (j2065CC), HasDamagingStatusThatWorks (j206600), GetBestMatchupScore (j2066CC), ShouldSwitch_NewAI (j251E40), ShouldSwitchIfLockedMoveOrRegenerator (j251E8C), ShouldSwitchIfCurseOrYawn (j251FD0)
		  Glitch?: (ShouldSwitchIfWeatherTeam) accidentally checks if it can KO the AI's left slot instead of the player's right
		  Glitch?: (ShouldSwitchIfMightBeDoubleTargeted) checks ITEM_FOCUS_SASH in GetHoldEffectParam, not GetHoldEffect
		  Glitch?: (GetAITarget) in doubles with both mons alive, it does checks on the AI's right slot instead of choosing a random player slot
		  Glitch?: in general, uses raw stats when I assume they meant base stats
= 03A4E8: Part of ShouldUseItem (see 75disasm)
		  Implements: AI use of X Sp. Def and X Evasion
		  Relies on: new table entries for gItemEffectTable
= 03DD98: Entirety of CreateMonWithNature (see 76disasm) - more accurately now CreateMonWithRandomNature
		  Implements: Synchronize overworld effect, Cute Charm overworld effect, (item72), need more info (something to do with personality values)
		  Required knowledge: var_403E
		  Requires in future: GetNature_CheckSynchronize (j251B30), fn_251B58_J, fn_251BA4_J, CuteCharmOverworldEffect (j251CB6), fn_251CF4_J, fn_3915EC_J
! 03E564, 03E73C: 2F 01 -> FC 00 (PDONLY, changes shedinja index to #252)
= 03E192: Part of GiveBoxMonInitialMoveset (see 77disasm)
		  Implements: Part of gLevelUpLearnsets refactor
= 03EAFE, 03EB2E: 40 -> 80
  03EB52: 40 00 40 18 01 88 0D 48 08 40 -> 80 00 40 18 40 88 00 00 00 00
		  Implements: Part of gLevelUpLearnsets refactor
= 03ECEC: Entirety of CalculateBaseDamage (see 78disasm)
		  Implements: modern Plus/Minus, Rivalry, Heatproof (fire moves), Dry Skin (fire moves), Iron Fist, Solar Power (boost), Normalize (boost), Technician, Klutz (damage-boosting items), Mold Breaker (damage-reduction abilities, Unaware), Unaware (atk/def/spa/spd), Slow Start (Attack reduction), Reckless, Flower Gift (stat boosts), Sheer Force (boost), Defeatist, Friend Guard, Multiscale, Toxic Boost, Flare Boost, Analytic, Infiltrator (dual screens), Sand Force, Aura Break, Tough Claws, Mega Launcher, Grass Pelt, Aerilate (boost), Dark Aura, Fur Coat, Fairy Aura, Pixilate (boost), Refrigerate (boost), Strong Jaw, Galvanize (boost), "Polkadot Bow", Gems (gen 5 boost), Choice Specs (boost), Muscle Band, Wise Glasses, Assault Vest (boost), Eviolite, Life Orb (boost), Wonder Room (effect), sandstorm Rock SpDef boost, modern spread reduction
		  Relies on: weather refactor, BattleMove refactor, GetAbilityUserOnSameSide, HasItemWithTypeEffect
		  Requires in future: AteAbilityConversionTable (j168CB4)
		  Note: is that how spread reduction works? (only reduced if max targets exist)
= 03FD64: Part of GetBoxMonData (see 79disasm)
		  Implements: nothing???
		  Requires in future: fn_206776_J, fn_206784_J
= 0400B6: 40 05 04 -> 80 05 44
  0400BE: 5C -> 0B
		  Implements: part of BoxPokemon refactor (extra bit for pokeball)
= 040855: F8 -> FC
  04085A: 0F -> 1F
  04085E: C9 -> 89
  040862: 79 -> 7D
		  Implements: part of BoxPokemon refactor
= 040B15: B5 A5 F1 B5 F9 01 BC -> 4B 9F 46 E0 3A A2 08 (jumps (mov) to fn at A23AE0, then back; see 80disasm)
		  Implements: Heal Ball
		  Required knowledge: gLastUsedItemType (j0203FE00)
= 040B90: Entirety of SendMonToPC (see 81disasm)
		  Implements: Part of CompressedBoxPokemon refactor, allowing 14->22 boxes
		  Requires in future: CopyMonToBox (j3C5FA0)
= 040FA0: Entirety of IsPokemonStorageFull (see 82disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 040FE2: 0B -> 10 (pkmnnamelength)
= 0415D0: B0 16 04 08 44 17 04 08 -> 6C 16 04 08 98 16 04 08
  0415F6: 29 48 29 -> 42 48 42
  04160C: 25 -> 3E
  041622: 21 -> 3A
  041636: 1B 49 1C -> 34 49 35
  041668: Part of PokemonUseItemEffects (+fn_41714_E) (see 83disasm)
		  Implements: X Sp. Def, X Evasion (effects)
		  Relies on: new table entries for gItemEffectTable
+ 041C46: Part of PokemonUseItemEffects (see 84disasm)
		  Implements: Revive case 0xFC - restores 1/4 HP (new item?)
		  Note: needs testing when item itself implemented
= 042D50-042DA4: Completely removed (replaced with fn_41714_E)
= 042DA4: Entirety of sub_8042DA4 (see 85disasm)
		  Implements: Messages for X Sp. Def and X Evasion
		  Relies on: fn_41714_E
= 042EC4: Entirety of GetEvolutionTargetSpecies (see 86disasm)
		  Implements: new evolution methods (day/night happiness for FRLG, single-gender levelup, location-based, specific move, specific move type, level during day/night, level during day/night with item, specific mon in party, specific type in party, single-gender stone, trade for specific mon, overworld weather), allows species 0 to have 20 branched evolutions (??? need more info)
		  Optional knowledge: e02031DA4
		  Required knowledge: j03005540
+ 043214: CD 24 64 -> FF 24 A4 (410 -> 1020 maximum pkmn species?)
+ 043304: Entirety of SpeciesToCryId (see 87disasm)
		  Implements: Allows forbiddenmons to get individual cries
= 0435A6: 0B -> 10 (pkmnnamelength)
+ 043890: Entirety of MonGainEVs (see 88disasm)
		  Implements: Power items, EV per-stat limit 255->252
= 043A70: Entirety of CheckPartyPokerus (see 89disasm)
		  Implements: need more info (reads only last bit of MON_DATA_POKERUS instead of last 4 bits)
= 043C84: Entirety of GetMoveRelearnerMoves (see 90disasm)
		  Implements: max level-up moves 20 -> 24, need more info (gLevelUpLearnsets -> *j02021D10)
		  Required knowledge: j02021D10
= 043DEE: 0E 48 84 46 -> 00 00 00 00
  043E02: 1A 88 60 46 10 40 08 80 02 -> 58 88 00 00 00 00 08 80 04
		  Implements: Part of gLevelUpLearnsets refactor
= 043E2C: Entirety of GetNumberOfRelearnableMoves (see 91disasm)
		  Implements: need more info (gLevelUpLearnsets -> *j02021D10)
		  Required knowledge: j02021D10
+ 043FA6: 97 2C 04 D9 -> 00 00 04 E0
		  Implements: species is always valid even before natdex
! 044034: 62 40 04 08 5C 40 04 08 62 40 04 08 62 40 04 08 5C 40 04 08 62 40 04 08 62 40 04 08 54 40 04 08 -> 54 40 04 08 5C 40 04 08 D8 32 85 08 D0 32 85 08 30 8F 8D 08 E0 64 86 08 58 00 74 08 A0 0F 8C 08 (changes table to point to other scripts, see 92disasm)
		  Implements: PDONLY, more trainer music
		  Requires in future: all the pointed-to scripts
= 04442C: 99 18 88 89 C9 89 88 42 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2EAD0, see 93disasm))
		  Implements: Compound Eyes overworld effect
+ 044EC8: Entirety of Random (see 94disasm)
		  Implements: New random function (unclear why)
= 04555C: Entirety of StorePokemonInEmptyDaycareSlot (see 95disasm)
		  Implements: Part of BuildEggMoveset changes
		  Required knowledge: gDaycareParentMoves (j0203C2AC)
		  Requires in future: fn_4539C_J (e45DD8)
= 045704: 09 06 09 0E -> 00 F0 7C FB
		  Implements: Part of BuildEggMoveset changes
		  Required knowledge: gDaycareParentMoves (j0203C2AC)
		  Requires in future: fn_453C4_J (e45E00)
+ 045AC0: Entirety of InheritIVs (see 96disasm)
		  Implements: Power item IV inheritance, Destiny Knot IV inheritance
		  Glitch: Power items are checked twice for mother and never for father
		  Note: If IV checking exists, test this
+ 045CA6: 09 -> 31
		  Implements: 10 -> 50 max egg moves per mon
+ 045CC4: 71 04 -> DE 07
		  Implements: increased egg move list size
= 045CD0: Entirety of BuildEggMoveset (+fn_4539C_J/fn_45DD8, fn_453C4_J/fn_45E00) (see 97disasm)
		  Implements: either parent passing down egg moves; removes tm/hm inheritance
		  Required knowledge: gDaycareParentMoves (j0203C2AC), sHatchedEggLevelUpMoves_New (j0203D600), j0203D664, sHatchedEggEggMoves_New (j0203D674)
+ 045FA0: Entirety of AlterEggSpeciesWithIncenseItem (see 98disasm)
		  Implements: No actual change, but allows new incenses to be added easily (table at j455AE/e45FEA)
+ 046000: Entirety of DetermineEggSpeciesAndParentSlots (see 99disasm)
		  Implements: Allows NidoranM+ and Volbeat to have female offspring when breeding with Ditto
! 046024, 0460A6: 84 -> B7 (PDONLY, changes ditto index to #183)
= 046112: FF F7 DD FD -> ?? ?? ?? ?? (changes call to BuildEggMoveset to instead call fn at j2072F0 (this calls BuildEggMoveset inside it anyway), see 101disasm)
		  Implements: modern ability inheritance
= ??????: 84 -> B7 (PDONLY, changes ditto index to #183)
! 046120: 2D 21 FA F7 2B F9 09 48 -> 00 49 08 47 01 89 EE 08 (jumps (bx) to fn at EE8900, then back; see 101disasm)
		  Implements: modern pokeball inheritance
		  GLITCH!: Crashes upon receiving egg
= 046216: 14 1C 2D 04 2D 0C FE F7 54 FE -> 00 48 00 47 XX XX XX 08 00 00 (jumps (bx) to extra fn at XXXXXX, then back (jE2EA00, see 102disasm))
		  Implements: Everstone nature inheritance
= 04623E: 05 22 20 23 F7 F7 07 -> 01 22 20 23 ?? ?? ?? ?? (instead of calling CreateMon(..., 5, ...), calls CreateMonWithNature_New(..., 1, ...); see 102disasm)
		  Implements: egg hatch level 5 -> 1, (item72), need more info (something to do with personality values)
		  Requires in future: fn_251B58_J, fn_251B8C_J, fn_251BA4_J, CreateMonWithNature_New (j251D2A)
= 046390: 01 38 00 90 -> ?? ?? ?? ?? (calls new fn at j251AE0, see 103disasm)
		  Implements: Magma Armor/Flame Body overworld effect
		  Glitch?: Magma Armor doesn't work
+ 046CBE: 05 -> 01 (egg hatch level 5 -> 1)
= 046D46: 30 1C 29 1C -> ?? ?? ?? ?? (calls new fn at j207344, see 104disasm)
		  Implements: needed for modern pokeball inheritance; something involving alt ability
+ 046DDA: F9 F7 CF FA -> 00 00 00 00 (needed for modern pokeball inheritance)
= ~048440: Unclear how to translate this to English rom (minidisasm12)
		  Implements: Moves in-battle level/gender display for opponents right by two characters (one in Japanese) to make room for name
= ~0496C0: Unclear how to translate this to English rom (minidisasm13pt2)
		  Implements: name length in the battle boxes (the ones with the HP in them)
= 049718: 1D 28 01 D0 20 28 09 D1 -> 0C E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32)
= 049720: 0B -> 10 (pkmnnamelength)
= ?????? (j48EBA): Unclear how to translate this to English rom (minidisasm13pt3)
		  Implements: Moves name in battle boxes for player mons left by two characters (one in Japanese) to make room
+ 04A2F0: Entirety of CalcNewBarValue (see 105disasm)
		  Implements: HP and EXP bars go twice as fast
		  Note: Also makes the function not use its toAdd parameter, amount to add is calculated inside the function
+ 04B5AA: 0B -> 1F (max pokeball types 12 -> 32)
+ 04BF24: 0B 2C 01 DC -> 00 00 00 00
		  Implements: Certain gfx aren't loaded for Dive Ball and everything starting at Luxury Ball; this is now fully independent of number of ball types
+ 04C058: Entirety of SetSaveBlocksPointers (see 106disasm)
		  Implements: nothing?
= 04C320: Entirety of LoadPlayerBag (see 107disasm)
		  Implements: Copies something into something else (extra bag space?)
		  Required knowledge: j0203BB00, j0203C010
= 04C440: Entirety of SavePlayerBag (see 108disasm)
		  Implements: Copies something into something else, reverse of LoadPlayerBag (extra bag space?)
		  Required knowledge: j0203BB00, j0203C010
= 04EF5E: 0D -> 20 (movenamelength)
= ?????? (j4E8A2): Unclear how to translate this to English rom (minidisasm15)
		  Implements: Removes gender symbol somewhere, seems to be removed in english already
= 053AB0, 053B16: 0B -> 10 (pkmnnamelength)
! 054A00: 06 -> 04 (PDONLY, moves starting position in new game two tiles north)
= 054A68: 39 4E 31 68 39 48 80 46 -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2DF50, see 109disasm))
		  Implements: need more info (clear save data)
! 055238: 00 04 09 04 03 4A 80 0B 80 18 00 68 89 0B 09 18 -> 00 04 09 04 03 4A 89 0B 80 0B 80 18 00 68 09 18 (does nothing?) (BREAKS ADVANCEMAP!!!)
= 05550C: Entirety of sub_805550C (see 110disasm)
		  Implements: need more info (some kind of warp, already prevented in map group 1, is now also prevented in map group 0x2501)
= 055D6C: Entirety of sub_8055D6C (see 111disasm)
		  Implements: possibly allows music to be dynamically changed
		  Required knowledge: j0203CB18
= 055F88: Entirety of music_something (see 112disasm)
		  Implements: Need more info
		  Required knowledge: j0203C00D
+ 059F34: Entirety of sub_8059F34 (see 113disasm)
		  Implements: Makes room for changes at 059F4C
+ 059F4C: Entirety of sub_8059F4C (see 113disasm)
		  Implements: Not completely sure, but possibly implements RSE's MetatileBehavior_IsLongGrass() for FRLG
= 05A9BC: 01 28 25 D0 01 28 02 DC 00 28 51 D0 -> 03 28 7E D8 00 4B 18 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j183100, see 114disasm))
		  Implements: Unsure, but DrawMetatile(1, ...) and DrawMetatile(2, ...) swapped functionality and there's a new DrawMetatile(3, ...) that uses all available resources at once
= 05B3E0: Entirety of player_step (see 115disasm)
		  Implements: Need more info, something about semi-forced steps
		  Required knowledge: j02030C00D
		  Requires in future: SoftForceDirection (j2074A0)
= 05B4D4: Entirety of MovePlayerAvatarUsingKeypadInput (see 116disasm)
		  Implements: Need more info, extra requirement for bike
		  Required knowledge: j02030C00D
= 05B9D4: Entirety of PlayerNotOnBikeMoving (see 117disasm)
		  Implements: running always-on toggle, something else
		  Required knowledge: j02030C00D
= 05BB5C: 30 1C 01 A9 22 1C 07 F0 -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222A70, see 118disasm))
		  Implements: forced movement for metatiles 0xB0-0xB5
+ 05BCEC: Entirety of sub_805BCEC (see 119disasm)
		  Implements: Strength boulders able to be moved onto metatile 0x1F
= 05C104: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222AE0, see 120disasm))
		  Implements: player walk animations for metatiles 0xB0-0xB5
= 05C11C: Entirety of PlayerGoSpeed2 (see 121disasm)
		  Implements: player fast-walk animations for metatiles 0xB0-0xB5
		  Requires in future: GetWalkFastMovementAction_New (j2074F0)
= 05C14C: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222CD0, see 120disasm mostly))
		  Implements: player fastest-walk animations for metatiles 0xB0-0xB5
= 05C164: Entirety of PlayerRun (see 121disasm mostly)
		  Implements: player run animations for metatiles 0xB0-0xB5
		  Requires in future: GetPlayerRunMovementAction_New (j207524)
= 05C17C: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j222BA0, see 120disasm mostly))
		  Implements: player ??? animations for metatiles 0xB0-0xB5 (seems to be FRLG-exclusive)
= 05C438: Entirety of PlayCollisionSoundIfNotFacingWarp (see 122disasm)
		  Implements: Need more info
		  Required knowledge: j02030C00D
+ 05F2E0: 97 -> FF (152 -> 255 max object graphics ids)
= 067D44: F1 F7 0A FF -> ?? ?? ?? ?? (changes call to sub_8059B5C to instead call fn at j183380, see 123disasm)
		  Implements: Not certain, possibly IsSandOrDeepSand; adds metatiles 0xE0 and 0xE2 to whatever check this is
= 06BCAA, 06BCF2: 0B -> 10 (pkmnnamelength)
= 06BE72: 0D -> 20 (movenamelength)
= 06CAC8: Entirety of sub_806CAC8 (see 124disasm)
		  Implements: Need more info (possibly two-speed bike and multi-registration SELECT)
		  Required knowledge: j0203C00D, j0203CB54, j0203D2E0, j0203D2E1, j0203D2E2, j0203D2E4, j0203D2EC, j0203D2ED, j0203D2EE, j0203D2F9, j0203D2FA, j0203D2FF
		  Requires in future: fn_99F4A_J, ShiftListElementsLeft (j99F54), fn_183A90_J, fn_EE5000, fn_EE51C0, fn_EE540C, fn_EE543E, fn_EE54D6, fn_EE5510, fn_EE5528, fn_EE561C, fn_EE5654, fn_EE56BC
= 06D1F0: Entirety of GetInteractedMetatileScript (see 125disasm)
		  Implements: scripts for metatiles 0xE3 and 0xE4, makes it easier to add more scripted metatiles
		  Requires in future: script_68277E_J, script_682787_J
+ 06DE28: Entirety of sub_806DE28 (see 126disasm)
		  Implements: Strength boulders disappear when moved onto metatile 0x1F
+ 06DE70: Entirety of sub_806DE70 (see 127disasm)
		  Implements: Unclear, metatile 0x1F behavior brought closer to that of MB_ICE
= 06E5C0: Entirety of GetFlagPointer (see 128disasm)
		  Implements: flags above 0xF000
		  Required knowledge: j0203CB58
= 06F01C: Entirety of InitStartMenuStep (+ add parts at E9D3D4_J, E9D48C_J, E9D4E2_J) (see 129disasm)
		  Implements: Need more info (something about START menu)
		  Required knowledge: j0203CB27, j0203D2FF, j0203D380
		  Requires in future: fn_E9D53C_J, fn_E9D586_J
= 06F280: Entirety of ProcessMenuInput (+ add part at E9D4A2_J) (see 130disasm)
		  Implements: possibly retools START menu into 3x2 grid
		  Required knowledge: j0203CB27, j0203D380
		  Requires in future: fn_E9D53C_J, fn_E9D586_J
! 06FEA0: Entirety of HideStartMenuWindow (see 131disasm)
		  Implements: changes menu close sfx from SE_SELECT to (sound_0x200)
= 06FFBC: Entirety of sub_806FFBC (see 132disasm)
		  Implements: Need more info
		  Relies on: Possible metatileAttributes refactor
		  Required knowledge: j02037B14
		  Requires in future: fn_939620_J, fn_9396A8_J, fn_939728_J
! 07004E: 73 F1 AB FD -> 00 00 00 00
		  Implements: Removes tileset 1 animations (replaced by functionality in 06FFBC)
! 07008A: 73 F1 8D FD -> 00 00 00 00
		  Implements: Removes tileset 2 animations (replaced by functionality in 06FFBC)
= 07049A: 0C 48 03 60 61 7A 03 20 08 40 -> 01 48 87 46 C0 46 XX XX XX 08 (jumps (mov) to fn at XXXXXX, then back; (jE9D320, see 133disasm))
		  Implements: Something palette-related
		  Required knowledge: j0203D2FF
! 070682: 73 F1 6F FA -> 00 00 00 00
		  Implements: Removes something palette-related (replaced by functionality in 07049A)
! 078A6E: F7 F7 BD FC -> 00 00 00 00
		  Implements: never fades in the green palette on title screen (still does if intro skipped), not yet clear what this means
= 078BFC: 00 23 C1 5E 06 48 -> 07 49 08 47 08 BC
  078C1C: 8B 0A 00 00 -> XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (j385250, see 134disasm))
		  Implements: almost certainly title screen silhouette fading
		  Required knowledge: j020370C0
! 0791EE: 06 -> FC (PDONLY, title screen cry charizard -> (species252))
+ 079282: C0 0F -> 01 20 (sound will always become stereo when game loaded from title screen)
= 0793DA: Part of sub_80792C8 (+ add part at 2075E0_J) (see 135disasm)
		  Implements: Need more info (title screen animation related)
		  Required knowledge: j0203712C
		  Requires in future: fn_2075E0_J
- 07A294: Entirety of ApplyGammaShift (+ add part at F1C000, +table_F10000) (see 136disasm)
		  Implements: RSE Drought weather capability
! 07ABCC: 80 -> 98 (shifts weather palettes over by +0x30, don't touch yet)
- 07AC14: Entirety of LoadDroughtWeatherPalettes (see 137disasm)
		  Implements: RSE Drought weather capability, note it's a bit different than actual RSE code
- 07FC5C: Entirety of BattleSetup_GetTerrainId (+table_7AF530) (see 138disasm)
		  Implements: various new metatiles' battle terrain, plus makes it easier to add more
! 080008: 5A -> 53 (PDONLY, "Champion" battle intro happens for trainer class 0x5A -> 0x53)
= 080650: 0D -> 7F
  08066C: 70 06 08 08 -> XX XX XX 08 (expands the possible trainer encounter musics from 14 to 128; new switch table at jE2E040 (currently only 3/14 in FR and 16/128 in PD are used); see minidisasm16)
= 081C0A: 0E 49 38 7E 00 07 80 0E 04 38 -> 01 49 08 47 00 00 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE300F0, see 139disasm))
		  Implements: Need more info
		  Required knowledge: j03005548
= 0829FC: Entirety of sub_80829FC (see 140disasm)
		  Implements: Need more info (something to do with personality values)
		  Relies on: CreateMonWithNature changed params ("CreateMonWithoutNature")
		  Requires in future: fn_251B58_J, fn_251BA4_J, fn_251BBA_J, fn_251BE4_J, ForceUnownFormOnPersonality (j251C92)
= 0830B8: Entirety of UpdateRepelCounter (see 141disasm)
		  Implements: new repel system, (something else)
		  Required knowledge: j0203ACA8
		  Requires in future: EventScript_RepelWoreOffUseAnother (jE2FF90), fn_E2FFE0_J
= 083119: 04 -> 06 (checks last byte of VAR_REPEL_STEP_COUNT instead of last two bytes, related to changes at 830B8)
= 0832EC: 00 06 00 0E -> ?? ?? ?? ?? (calls new fn at j251AC0, see 142disasm)
		  Implements: Unclear, possibly makes water tiles only cause encounters when player is surfing (is there a possibility of standing on water tiles otherwise?)
+ 088B9E: C0 0F -> 01 20 (sound will always become stereo no matter what options menu says)
= 089088: Entirety of sub_8089088 (see 143disasm)
		  Implements: When backing out of (trainer card?), implement possibility that it returns to some mysteryfunc enormous menu instead of the START menu (need A LOT more info)
		  Required knowledge: j0203D51F, (needed for fn_E9EA00_J: j0203CB1C, j0203CB24, j0203CB26, j0203CB28, j0203D100, j0203D200, j0203D500, j0203D502, j0203D504, j0203D50A, j0203D51E, j0203D51F, j0203D520, j0203D528, j0203D52A, gMysteryFuncWindows (j0203D530), j0203D550, j0203D552, j0203D560, j0203D561, j0203D562, j0203D570, j0203D571, gMysteryFuncUnknownListSize (j0203D580), gMysteryFuncUnknownList (j0203D582), j0203D680, j0203D681, j0203D682, j0203D690)
		  Requires in future: fn_E9E980_J, fn_E9EA00_J (and all subfunctions: fn_168900_J, fn_42BE70_J, fn_E9EA40_J, fn_E9EAA4_J, fn_E9EB36_J, fn_E9EBB0_J, fn_E9EF98_J, fn_E9F056_J, fn_E9F204_J, fn_E9F272_J, fn_E9F398_J, fn_E9F478_J, fn_E9F6F4_J, fn_E9F8B0_J, fn_E9F92C_J, fn_E9F966_J, fn_E9FA12_J, fn_E9FC04_J, fn_E9FC28_J, fn_E9FE26_J, fn_E9FE5A_J, AddElementToUnknownList (jE9FE82), SortUnknownListNumerically (jE9FEA8), fn_E9FED4_J, fn_E9FFDC_J, fn_EA00EA_J, fn_EA0110_J, fn_EA0158_J, fn_EA0540_J, fn_EA05F4_J, fn_EA06C6_J, fn_EA06E8_J, fn_EA0B60_J)
- 08A006: 06 -> 07
  08A028: 7A -> 72
  08A090: 76 -> 6E
		  Implements: extra money digit on trainer card display
		  Notes: unclear if this is the correct way to translate to english rom (see minidisasm17)
- 08B92A: 08 -> 02 (changes something from palette slot 8 to palette slot 2) (test this)
= 08BA06: 0D -> 16 (part of box refactor)
= 08BA18: Entirety of GetBoxMonDataFromAnyBox (see 144disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), SetBoxMonDataToCompressedBoxMonData (j3C5DC2), GetCompressedBoxMonData (j3C5DDE), GetCompressedBoxMonFromBox (j3C5F84)
= 08BA5C: Entirety of SetBoxMonDataFromAnyBox (see 145disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), GetCompressedBoxMonFromBox (j3C5F84), CopyMonToBox (j3C5FA0)
= 08BB2C: Entirety of SetBoxMonNickFromAnyBox (see 146disasm)
		  Implements: Part of CompressedBoxPokemon refactor, pkmnnamelength
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BB6C: Entirety of GetAndCopyBoxMonDataFromAnyBox (see 147disasm)
		  Implements: Part of CompressedBoxPokemon refactor, pkmnnamelength
		  Requires in future: GetCompressedBoxMonData (j3C5DDE), GetCompressedBoxMonFromBox (j3C5F84)
= 08BBB4: Entirety of CopyBoxMonFromAnyBox (see 148disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: CopyMonToBox (j3C5FA0)
= 08BCB4: Entirety of ClearMonInBox (see 149disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BCF0: Entirety of sub_808BCF0 (see 150disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), GetCompressedBoxMonFromBox (j3C5F84)
= 08BD30: Entirety of GetBoxedMonPtr (see 151disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BD6C: Entirety of GetBoxNamePtr (see 152disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08BD94: Entirety of sub_808BD94 (see 153disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08BDBC: Entirety of SetBoxWallpaper (see 154disasm)
		  Implements: Part of CompressedBoxPokemon refactor, no longer limited to 16 wallpapers
= 08BDE8: Entirety of sub_808BDE8 (see 155disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08C0D4: Entirety of CountMonsInBox (see 156disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08C108: Entirety of GetFirstFreeBoxSpot (see 157disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08C808, 08C82C, 08C844, 08CC26, 08CC60, 08D476, 08D4B2, 08DED4: 0D -> 16 (part of CompressedBoxPokemon refactor)
- 08C95C: Entirety of sub_808C95C (see 158disasm)
		  Implements: Eliminates the delay on something in the PC (test!)
= 08C9C4: Entirety of sub_808C9C4 (+ add part at EEA2C0_J) (see 159disasm)
		  Implements: need more info
		  Required knowledge: j02036FFC
= 08CBA4: Entirety of sub_808CBA4 (see 160disasm)
		  Implements: need more info
		  Required knowledge: j02036FFC
= 08CC74: Entirety of sub_808CC74 (+ add part at EEA33C_J) (see 161disasm)
		  Implements: need more info (possibly box summary images on scroll)
		  Required knowledge: j02036FFC
		  Requires in future: jEEA4E2, GetStringLength (jEEA53E), jEEA554
= 08E8D8: 88 42 5B DB 15 28 59 DC -> 00 4A 10 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2A46E, see 162disasm))
  08E958: 05 20 E3 F7 B7 FC 01 F0 -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2A4B8, see 162disasm))
		  Implements: Need more info (adds cases 0x7D, 0x7E, and 0x7F to data_020397B0->0x790)
- 08F4CC, 08F550: 06 -> 08 (? moves x value of some printer over by two, j is 0 -> 2; test first)
- 08F4E4, 08F566: 02 -> 00 (? changes font of some printer (same one as above))
= 08FD34: 00 B5 05 F0 37 F8 12 20 -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2A400, see 163disasm))
		  Implements: Need more info (extra call to fn_94DEC with case 0x7F)
= 08FD68: 01 2C 16 D0 01 2C 02 DC -> 00 48 00 47 XX XX XX 08 (jumps (bx) to extra fn at XXXXXX, then back (jE2A432, see 164disasm))
		  Implements: 
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  


curr: j8F7A4 (8byte)
next: j8F890