"beloved cowboyish daughter" (IMPORTANT!!!)

Sharpshoot has Snipe Shot's jp name
Shadow Clamp has Jaw Lock's jp name
Up-Grade -> Upgrade


altair/sirius bugs: "brendan"/"may" somewhere in birch's lab scripts; Sirius needs Fang Fossil -> Dark Fossil in Desert Underpass; Pidgeot statue in Move Tutor's house is missing pretty stone; check the fishing/surfing encounters in the Sphere Ruins

check pokecommunity PMs - "Procyon/Deneb English logos + other stuff"

ignore the following (pe):
00 30 A2 08
F0 30 A2 08
00 00 E4 08
00 7A EB 08
90 89 EB 08
00 00 00 09
00 00 01 09
04 00 01 09
00 00 03 09
A0 0B 06 09
00 50 06 09
00 00 0B 09
00 D0 3F 09
00 F0 3F 09

Setoguni region -> Strelan region
Shirahana Town -> Astera Town [white]
Tsuyukusa Town -> Commelina Town [blue]
Taisha City -> Hemati City [reddish brown]
Hisoku City -> Hisoko City [sky blue]
Arazome City -> Cartham City [pink]
Kokutan City -> Ebonwood City [black]
Hashibami City -> Hazella City [light brown]
Urumi City -> Vercas City [gray]
Ryokuou City -> Chartru City [greenish yellow]
Futaai Town -> Persica Town [purple]
Sango Town -> Anthozo Town [orange]
Kihadashi City -> Amur City [yellow]
Suou Island -> Brazeil Island [reddish purple]
Rokushou Island -> Verdigri Island [green]
Kaihaku Island -> Pallidin Island [off-white]


Japanese name~Japanese root word~Japanese name overly-literal meaning~English name~English root word~English name meaning~Notes
Masara Town~malsara~a red pigment~Malsara Town~malsara~a red pigment~Pallet Town
Tokiwa City~tokiwa[iro]~eternal~Everlas City~everlasting~''~Viridian City
Nibi City~nibi[iro]~dull~Dulsa City~dull~''~Pewter City
Hanada City~hanada[iro]~light blue~~~light blue~Cerulean City
Kuchiba City~kuchiba[iro]~decayed leaves~~~~Vermilion City
Tamamushi City~tamamushi[iro]~jewel beetle~Dishima City~Chrysocroa fulgidissima~jewel beetle~Celadon City
Shion Town~shion[iro]~Tartarian aster (flower)~Tartara Town~Aster tartaricus~Tartarian aster (flower)~Lavender Town
Sekichiku City~sekichiku[iro]~China pink (flower)~Nensi City~Dianthus chinensis~China pink (flower)~Fuchsia City
Yamabuki City~yamabuki[iro]~yellow rose~Kerria City~Kerria japonica~yellow rose~Saffron City
Guren Island~guren~crimson~Cinnabar Island~cinnabar~a red color~Cinnabar Island (this works under this logic)
Sekiei Plateau~sekiei~quartz~~~~Indigo Plateau
Hakuji Town~hakuji[iro]~white porcelain~Porcelia Town~porcelain~''~
Ayame City~ayame[iro]~iris flower~Junopsis City~Junopsis~former genus of iris flowers~
Miru City~miru[iro]~green sea fingers (a type of seaweed)~Seafin City~green sea fingers~a type of seaweed~
Shiou City~shiou[iro]~"feminine yellow"~Gamboge City~gamboge~a yellow pigment~Incredibly unclear how this happened
Hisui City~hisui[iro]~jade~Nephrite City~nephrite~jade~
Ouni City~ouni~a shade of orange~Orpimence City~orpiment~a mineral used for orange pigment~Incredibly unclear how this happened
Karasuba City~karasuba[iro]~crow feathers~Ravenplume City~crow feathers~''~
Rapisura City~lapis lazuli~a gemstone~Lapizula City~lapis lazuli~a gemstone~
Shakudou Island~shakudou[iro]~shakudo (a copper-gold compound)~Shakudo Island~shakudo~a copper-gold compound~
Shirahana Town~shirahana[iro]~white flowers~Astera Town~Asteraceae~scientific family of daisies~
Tsuyukusa Town~tsuyukusa[iro]~Asiatic dayflower~Commelina Town~Commelina communis~Asiatic dayflower~
Taisha City~taisha[iro]~red ocher (a pigment)~Hemati City~hematite~red ocher (a pigment)~
Hisoku City~hisoku[iro]~a type of Chinese pottery~Hisoko City~hisoku~a type of Chinese pottery~
Arazome City~arazome~safflower dye~Cartham City~Carthamus tinctorius~safflower~
Kokutan City~kokutan~ebony~Ebonwood City~ebony wood~''~
Hashibami City~hashibami[iro]~hazel~Hazella City~hazel~''~
Urumi City~urumi[iro]~cloudy~Vercas City~overcast~''~
Ryokuou City~ryokuou[shoku]~yellow-green~Chartru City~chartreuse~yellow-green~
Futaai Town~futaai[iro]~Japanese indigo (plant)~Persica Town~Persicaria tinctoria~Japanese indigo (plant)~
Sango Town~sango[iro]~coral~Anthozo Town~Anthozoa~scientific class of coral~
Kihadashi City~kihadashi[iro]~amur cork (tree)~Amur City~amur cork~a tree~
Suou Island~suou[iro]~sappanwood dye~Brazeil Island~brazilein~sappanwood dye~
Rokushou Island~rokushou[iro]~verdigris (green pigment)~Verdigri Island~verdigris~green pigment~
Kaihaku Island~kaihaku[shoku]~pallid (pale)~Pallidin Island~pallid~pale~



(stench actual desc: 71D9FE)
("the pkmn" -> "it"; if "it" would be at the beginning, skip it)
abilities:
+ 0x4C = Tangled Feet
+ 0x4E = Motor Drive
+ 0x4F = Rivalry
+ 0x50 = Steadfast
+ 0x51 = Snow Cloak
+ 0x52 = Gluttony
+ 0x53 = Anger Point
+ 0x54 = Unburden
+ 0x55 = Heatproof
+ 0x56 = Simple
+ 0x57 = Dry Skin
+ 0x58 = Download
+ 0x59 = Iron Fist
+ 0x5A = Poison Heal
+ 0x5B = Adaptability
+ 0x5C = Skill Link
+ 0x5D = Hydration
+ 0x5E = Solar Power
+ 0x5F = Quick Feet
+ 0x60 = Normalize
+ 0x61 = Sniper
+ 0x62 = Magic Guard
+ 0x63 = No Guard
+ 0x64 = Stall
+ 0x65 = Technician
+ 0x66 = Leaf Guard
+ 0x67 = Klutz
+ 0x68 = Mold Breaker
+ 0x69 = Super Luck
+ 0x6A = Aftermath
+ 0x6B = Anticipation
+ 0x6C = Forewarn
+ 0x6D = Unaware
+ 0x6E = Tinted Lens
+ 0x6F = Filter
+ 0x70 = Slow Start
+ 0x71 = Scrappy
+ 0x72 = Storm Drain
+ 0x73 = Ice Body
+ 0x74 = Solid Rock
+ 0x75 = Snow Warning
+ 0x76 = Honey Gather
+ 0x77 = Frisk
+ 0x78 = Reckless
+ 0x79 = Multitype
+ 0x7A = Flower Gift
+ 0x7B = Bad Dreams
+ 0x7C = Pickpocket
+ 0x7D = Sheer Force
+ 0x7E = Contrary
+ 0x7F = Unnerve
+ 0x80 = Defiant
+ 0x81 = Defeatist
+ 0x82 = Cursed Body
+ 0x83 = Healer
+ 0x84 = Friend Guard
+ 0x85 = Weak Armor
+ 0x86 = Heavy Metal
+ 0x87 = Light Metal
+ 0x88 = Multiscale
+ 0x89 = Toxic Boost
+ 0x8A = Flare Boost
+ 0x8B = Harvest
+ 0x8C = Telepathy
+ 0x8D = Moody
+ 0x8E = Overcoat
+ 0x8F = Poison Touch
+ 0x90 = Regenerator
+ 0x91 = Big Pecks
+ 0x92 = Sand Rush
+ 0x93 = Wonder Skin
+ 0x94 = Analytic
+ 0x95 = Illusion
+ 0x96 = Imposter
+ 0x97 = Infiltrator
+ 0x98 = Mummy
+ 0x99 = Moxie
+ 0x9A = Justified
+ 0x9B = Rattled
+ 0x9C = Magic Bounce
+ 0x9D = Sap Sipper
+ 0x9E = Prankster
+ 0x9F = Sand Force
+ 0xA0 = Iron Barbs
+ 0xA1 = Zen Mode
+ 0xA2 = Victory Star
+ 0xA3 = Turboblaze
+ 0xA4 = Teravolt
+ 0xA5 = Aroma Veil
+ 0xA6 = Aura Break
+ 0xA7 = Parental Bond
+ 0xA8 = Tough Claws
+ 0xA9 = Competitive
+ 0xAA = Strong Jaw
+ 0xAB = Symbiosis
+ 0xAC = Grass Pelt
+ 0xAD = Sweet Veil
+ 0xAE = Aerilate
+ 0xAF = Dark Aura
+ 0xB0 = Gooey
+ 0xB1 = Stance Change
+ 0xB2 = Gale Wings
+ 0xB3 = Fur Coat
+ 0xB4 = Fairy Aura
+ 0xB5 = Pixilate
+ 0xB6 = Flower Veil
+ 0xB7 = Refrigerate
+ 0xB8 = Protean
+ 0xB9 = Bulletproof
+ 0xBA = Cheek Pouch
+ 0xBB = Magician
+ 0xBC = Mega Launcher
+ 0xBD = Desolate Land
+ 0xBE = Primordial Sea
+ 0xBF = Delta Stream
+ 0xC0 = Stamina
+ 0xC1 = Wimp Out
+ 0xC2 = Emergency Exit
+ 0xC3 = Water Compaction
+ 0xC4 = Merciless
+ 0xC5 = Shields Down
+ 0xC6 = Stakeout
+ 0xC7 = Water Bubble
+ 0xC8 = Steelworker
+ 0xC9 = Berserk
+ 0xCA = Slush Rush
+ 0xCB = Long Reach
+ 0xCC = Liquid Voice
+ 0xCD = Triage
+ 0xCE = Galvanize
+ 0xCF = Surge Surfer
+ 0xD0 = Schooling
+ 0xD1 = Disguise
+ 0xD2 = Battle Bond
+ 0xD3 = Power Construct
+ 0xD4 = Corrosion
+ 0xD5 = Comatose
+ 0xD6 = Queenly Majesty
+ 0xD7 = Innards Out
+ 0xD8 = Dancer
+ 0xD9 = Battery
+ 0xDA = Fluffy
+ 0xDB = Dazzling
+ 0xDC = Soul-Heart
+ 0xDD = Tangling Hair
+ 0xDE = Receiver
+ 0xE0 = Power of Alchemy
+ 0xE1 = Beast Boost
+ 0xE2 = RKS System
+ 0xE3 = Electric Surge
+ 0xE4 = Psychic Surge
+ 0xE5 = Misty Surge
+ 0xE6 = Grassy Surge
+ 0xE7 = Full Metal Body
+ 0xE8 = Shadow Shield
+ 0xE9 = Prism Armor

(old kid: 16F8C4, fix wildmons route15)
item effects:
+ typebooster IDs: (if effectparam = 0, type-resist berries; if effectparam >= 30, Gems; otherwise typeboosters as normal)
+ 0x18 = Macho Brace if effectparam is 0, otherwise Power item (effectparam = stat ID)
+ 0x1D = Fairy Wing
+ 0x2B = Leftovers if effectparam is 0xFF, otherwise Black Sludge (effectparam = type that heals)
+ 0x43 = Focus Sash
+ 0x44 = Choice Specs
+ 0x45 = Choice Band
+ 0x46 = Choice Scarf
+ 0x47 = Wide Lens
+ 0x48 = Muscle Band (effectparam = % boost)
+ 0x49 = Wise Glasses (effectparam = % boost)
+ 0x4A = Lagging Tail
+ 0x4B = weather rocks (effectparam = weather ID)
+ 0x4C = Expert Belt
+ 0x4D = Safety Goggles
+ 0x4E = Grip Claw
+ 0x4F = Binding Band
+ 0x50 = Light Clay
+ 0x51 = Big Root
+ 0x52 = Assault Vest
+ 0x53 = Eviolite
+ 0x54 = Life Orb (effectparam = 1/X HP lost)
= 0x55 = (ai doesn't want to steal this), (ai wants to trick this to the opponent)
= 0x56 = (ai doesn't want to steal this), (ai wants to trick this to the opponent)
+ 0x57 = Destiny Knot

items:
+ 0x34 = Anthozo Dumpling [One of Anthozo Town's famous dumplings. Cures a single Pokemon of any status problems.]
+ 0x36 = Ability Capsule
+ 0x3D = X Sp. Def [Use this item to raise a Pokemon's Sp. Def in battle. The effect disappears after switching out.]
+ 0x3E = X Evasiveness [Use this item to raise a Pokemon's evasiveness in battle. The effect disappears after switching out.]
+ 0x50 = Poke Doll -> Poke Toy
+ 0x57 = Old Gateau
+ 0x58 = Casteliacone
+ 0x59 = Lumiose Galette
+ 0x5A = Shalour Sable
+ 0x5B = Rage Candy Bar
+ 0x5C = Sweet Heart
+ 0x63 = Shiny Stone
+ 0x64 = Dusk Stone
+ 0x65 = Dawn Stone
+ 0x69 = Huge Mushroom [An enormous and rare mushroom. Itâ€™s popular with a certain class of collectors and sought out by them.]
+ 0x70 = Big Nugget
+ 0x72 = Shiny Charm
+ 0x73 = Oval Charm
+ 0xC0 = Deep Sea Tooth -> Analysis Map: "A tooth that raises Clamperl's Sp. Atk when held. It has a sharp silver glow." -> "A forecast map that raises Terubim's Sp. Atk when held. It shows the weather in the past."
+ 0xC1 = Deep Sea Scale -> Forecast Map: "A scale that raises Clamperl's Sp. Def when held. It has a pale pink glow." -> "A weather map that raises Terubim's Sp. Def when held. It shows the weather in the future."
+ 0xE0 = Thick Club -> Pink Soap: "Some sort of hard bone that raises the Attack of Cubone or Marowak when held." -> "A pink orb that raises the Attack of Rivird and Mingola when held."
+ 0xE1 = Stick -> Hula Hoop: "A spring onion that allows Farfetch'd to land critical hits more easily when held." -> "A hula hoop that allows Spinda to land critical hits more easily when held."
+ 0xE2 = Choice Specs
+ 0xE3 = Choice Scarf
+ 0xE4 = Focus Sash
+ 0xE5 = Wide Lens
+ 0xE6 = Muscle Band
+ 0xE7 = Wise Glasses
+ 0xE8 = Lagging Tail
+ 0xE9 = Heat Rock
+ 0xEA = Smooth Rock
+ 0xEB = Damp Rock
+ 0xEC = Icy Rock
+ 0xED = Expert Belt
+ 0xEE = Safety Goggles
+ 0xEF = Grip Claw
+ 0xF0 = Binding Band
+ 0xF1 = Light Clay
+ 0xF2 = Big Root
+ 0xF3 = Assault Vest
+ 0xF4 = Eviolite
+ 0xF5 = Life Orb
+ 0xF6 = Flame Orb
+ 0xF7 = Toxic Orb
+ 0xF8 = Black Sludge
+ 0x10F = Basement Key -> Vega: "A gemstone that allows a certain Pokemon to change form using the power of Lyra."
+ 0x112 = Letter -> Important Letter: "An important sealed letter that contains secrets about legendary Pokemon."
+ 0x118 = Meteorite: "The Aura Stone that fell on Meteor Falls. It overflows with the power of Aura."
+ 0x11E = Root Fossil -> Spike Fossil: "The fossil of an ancient, sea-dwelling Pokemon. It appears to be part of a root." -> "The fossil of an ancient, land-dwelling Pokemon. It appears to be part of a spike. (quill? thorn? depends on actual mon)"
+ 0x11F = Claw Fossil -> Fang Fossil: "The fossil of an ancient, sea-dwelling Pokemon. It appears to be part of a claw." -> "The fossil of an ancient, land-dwelling Pokemon. It appears to be part of a fang."
+ 0x15B = Mysterious Charm [A mysterious charm handed down since ancient times in Strelan. It shines all colors of the rainbow.]
+ 0x15C = Stolen Ball [A Pokemon stolen by Team Cosmic. Return it to the young man in Cartham City.]
+ 0x15D = Oak's Parcel -> Package: "It contains frozen noodles. Deliver it to the child in Hazella City."
+ 0x160 = Bike Voucher -> PokeSeg Voucher: "Take this to the Cycle Shop in Cerulean City to exchange it for a Bicycle." -> "Take this to the PokeSeg Shop in Ebonwood City to exchange it for a PokeSeg."
+ 0x162 = Old Amber -> Dark Fossil: "The fossil of an ancient, land-dwelling Pokemon. It appears to be a clump of pure malice."
+ 0x164 = Lift Key: "The key that operates the elevator in the Rocket Hideout. It bears the Team Rocket logo." -> "The key that operates the elevator in the DH Hideout. It bears the Team DH logo."
+ 0x165 = Dome Fossil -> Unknown [no description]
+ 0x166 = Helix Fossil -> Unknown [no description]
+ 0x168 = Bicycle -> PokeSeg: "An electric-powered vehicle that moves in the direction that the rider's body shifts."
+ 0x175 = Ruby -> Altair: "A gemstone that allows a certain Pokemon to change form using the power of Aquila."
+ 0x176 = Sapphire -> Sirius: "A gemstone that allows a certain Pokemon to change form using the power of Canis Major."
+ 0x177 = Fairy Wing [An item to be held by a PokÃ©mon. It's a beautiful wing that boosts the power of Fairy-type moves.]
+ 0x178 = Normal Gem
+ 0x179 = Grass Gem
+ 0x17A = Fire Gem
+ 0x17B = Water Gem
+ 0x17C = Electric Gem
+ 0x17D = Ice Gem
+ 0x17E = Rock Gem
+ 0x17F = Ground Gem
+ 0x180 = Fighting Gem
+ 0x181 = Flying Gem
+ 0x182 = Bug Gem
+ 0x183 = Poison Gem
+ 0x184 = Psychic Gem
+ 0x185 = Ghost Gem
+ 0x186 = Dragon Gem
+ 0x187 = Dark Gem
+ 0x188 = Steel Gem
+ 0x189 = Fairy Gem
+ 0x18A = Occa Berry
+ 0x18B = Passho Berry
+ 0x18C = Wacan Berry
+ 0x18D = Rindo Berry
+ 0x18E = Yache Berry
+ 0x18F = Chople Berry
+ 0x190 = Kebia Berry
+ 0x191 = Shuca Berry
+ 0x192 = Coba Berry
+ 0x193 = Payapa Berry
+ 0x194 = Tanga Berry
+ 0x195 = Charti Berry
+ 0x196 = Kasib Berry
+ 0x197 = Haban Berry
+ 0x198 = Colbur Berry
+ 0x199 = Babiri Berry
+ 0x19A = Chilan Berry
+ 0x19B = Roseli Berry
+ 0x19C = Power Weight
+ 0x19D = Power Bracer
+ 0x19E = Power Belt
+ 0x19F = Power Lens
+ 0x1A0 = Power Band
+ 0x1A1 = Power Anklet
+ 0x1A2 = Quick Ball
+ 0x1A3 = Dusk Ball
+ 0x1A4 = Park Ball
+ 0x1A5 = Heal Ball
+ 0x1A6 = Cherish Ball
+ 0x1A7 = Fast Ball
+ 0x1A8 = Friend Ball
+ 0x1A9 = Heavy Ball
+ 0x1AA = Level Ball
+ 0x1AB = Love Ball
+ 0x1AC = Lure Ball
+ 0x1AD = Moon Ball
+ 0x1AE = Honey
+ 0x1AF = Destiny Knot

move IDs: [Note: Revisit descriptions on full release to make sure everything is correctly described - and redo Knock Off/Mud Sport/Water Sport if modernized]
(Mirror Move, (unimplemented Fiery Dance), Assist, Switcheroo, (unimplemented Guardian Leaf), Nova Inferno, Chatter, Feint, Rage Powder, (unimplemented Strength Sap), (unimplemented Shell Trap), and the move just after the end of defined moves can't be called by Metronome; Chatter can't be copied by Mimic)
(Removed: Clamp, Barrage, Conversion, Triple Kick, Spider Web, Conversion 2, Aeroblast, Sacred Fire, Arm Thrust, Tail Glow, Luster Purge, Mist Ball, Needle Arm, Doom Desire, Psycho Boost)

DON'T FORGET TO UPDATE MOVE DESCS IF OLD MOVES ARE IMPLEMENTED CORRECTLY (Defog, etc)
ALSO RETEST NEW MOVE EFFECTS ESPECIALLY PARAMETERIZED ONES

+ 0x80 = [Accel Bolt (Speed Bolt?)] (attacking move), (has Mach Volt animation), "Raises the user's Speed if it moved after the foe. If not, it raises Sp. Atk instead."
+ 0x8C = Entrainment
+ 0x98 = Shrimphammer (unfinished)
! 0xA0 = Fiery Dance (not implemented)
+ 0xA7 = [shuukihou (???) (Chakra Blitz?)] (attacking move that lowers user's speed), (animation is white light covering the screen, then Take Down), "The user gathers all of its spiritual energy at a single point, then uses it to hit the foe. It lowers the userâ€™s Speed, however."
+ 0xA9 = Accelerock
+ 0xB0 = Inflammation <card: Spreading Fire> [The user's and foe's bodies both react badly, causing them both to become burned.]
! 0xB1 = [no name yet] (attacking move), (can't be called by metronome), (has Pound animation; not implemented), "The user bashes the foe with a mirror. This may also raise the user's Defense, Sp. Atk, or Sp. Def."
! 0xDD = [no name yet] (attacking move that calculates damage as if any Sp. Atk boosts were added to Attack, then has a 20% chance to raise Atk and Sp. Atk), (can't be called by metronome), (has Pound animation; not implemented), "The foe is skewered with a sword. This may also raise the user's Attack, Sp. Atk, or Speed."
+ 0x124 = Vital Drain [The user absorbs the foe's life force. Restores the user's HP equal to half the damage dealt.]
+ 0x126 = Quick Turn [If the foe is faster than the user, this move does more damage. If the foe is slower, the move fails.]
+ 0x127 = Blessed Wings [The foe is attacked with beautifully sparkling wings. This may also raise the user's Sp. Atk.]
+ 0x128 = Hurricane
+ 0x12E = Severe Poison [If used by a Poison-type, this move may also badly poison. It deals special damage.]
+ 0x161 = Venoshock
+ 0x162 = Gravel Breath [The user blows out a breath that is strong against Steel-types. If the user is slower than the foe, the move does more damage.]
+ 0x163 = Grand Boulder [The foe is covered completely in rocks. This may also make the foe flinch.]
+ 0x164 = Soul Break [The user attacks the foe's soul directly. This may also confuse the foe. This move ignores Protect.]
+ 0x165 = Stardust [Foes are hit with an immense downpour of stardust. This move deals physical damage.]
+ 0x166 = Raze Earth [The user attacks by cracking and shaking the ground. This deals damage to the user as well, and deals physical damage to the foe.]
+ 0x167 = Possess [The user possesses the foe's body for a short time. This may also confuse the foe.]
+ 0x168 = Devastate [The user surrenders to its furious temper and goes on a rampage. This may also lower the foe's Defense stat.]
+ 0x169 = Metal Blast [The user gathers the energy stored in its body and releases it all at once to attack.]
+ 0x16A = Hammer Arm
+ 0x16B = Close Combat
+ 0x16C = Flare Blitz
+ 0x16D = Force Palm
+ 0x16E = Aura Sphere
+ 0x16F = Rock Polish
+ 0x170 = Poison Jab
+ 0x171 = Dark Pulse
+ 0x172 = Night Slash
+ 0x173 = Aqua Tail
+ 0x174 = Seed Bomb
+ 0x175 = Air Slash
+ 0x176 = X-Scissor
+ 0x177 = Bug Buzz
+ 0x178 = Dragon Pulse
+ 0x179 = Dragon Rush
+ 0x17A = Power Gem
+ 0x17B = Drain Punch
+ 0x17C = Vacuum Wave
+ 0x17D = Focus Blast
+ 0x17E = Energy Ball
+ 0x17F = Brave Bird
+ 0x180 = Earth Power
+ 0x181 = Switcheroo
+ 0x182 = Giga Impact
+ 0x183 = Nasty Plot
+ 0x184 = Bullet Punch
+ 0x185 = Avalanche
+ 0x186 = Ice Shard
+ 0x187 = Shadow Claw
+ 0x188 = Shadow Sneak
+ 0x189 = Mud Bomb
+ 0x18A = Psycho Cut
+ 0x18B = Zen Headbutt
+ 0x18C = Mirror Shot
+ 0x18D = Flash Cannon
+ 0x18E = Rock Climb
+ 0x18F = Draco Meteor
+ 0x190 = Discharge
+ 0x191 = Leaf Storm
+ 0x192 = Power Whip
+ 0x193 = Rock Wrecker
+ 0x194 = Gunk Shot
+ 0x195 = Iron Head
+ 0x196 = Magnet Bomb
+ 0x197 = Stone Edge
+ 0x198 = Grass Knot
+ 0x199 = Charge Beam
+ 0x19A = Wood Hammer
+ 0x19B = Aqua Jet
+ 0x19C = Attack Order
+ 0x19D = Defend Order
+ 0x19E = Heal Order
+ 0x19F = Double Hit
+ 0x1A0 = Psyshock
+ 0x1A1 = Straight Shot <card: Linear Attack> [MAKE THIS BALLISTIC] [The user strikes with a head-on blow using all of its power. Critical hits land more easily.]
+ 0x1A2 = Magma Rush [The user attacks while cloaked in blazing magma. This may also sharply raise the user's Speed stat.]
+ 0x1A3 = Wormhole [Foes are ejected into a dimension outside all known spacetime. This may cause confusion.]
+ 0x1A4 = Ominous Wind
+ 0x1A5 = Cross Poison
+ 0x1A6 = Thunder Fang
+ 0x1A7 = Ice Fang
+ 0x1A8 = Fire Fang
+ 0x1A9 = Crash Impact [The user crashes its massive body into the foe, confusing the user afterwards.]
+ 0x1AA = Spin Tail [The user spins its tail around to hit the foe. This may also raise the user's Speed stat.]
+ 0x1AB = Double Spin [The user hits twice in a row while spinning around. This may also raise the user's Attack stat.]
+ 0x1AC = Tone-Deaf [The user attacks by singing an off-key tune. This may also lower the foe's Sp. Def stat or confuse it.]
+ 0x1AD = Dizzy Whirl (animation is broken) [Dizzies the foe, sharply raising the user's evasiveness and raising its Speed stat, but lowering its accuracy.]
+ 0x1AE = Deep Yawn [The user yawns unusually deeply, enticing drowsiness that causes the foe to immediately fall asleep.]
+ 0x1AF = Raging Flame [The user attacks using flames created from sheer rage. This may also cause the user to become confused.]
+ 0x1B0 = Magma Ring [The user attacks while surrounding the foe with magma. The target becomes unable to flee.]
+ 0x1B1 = Wave Splash [Water is stirred up to create waves. This may also raise the user's evasiveness.]
+ 0x1B2 = Deluge [The foe is attacked with an enormous, violent wave, harshly lowering the user's Sp. Atk stat afterwards.]
+ 0x1B3 = Aqua Bolt [The foe is attacked with water containing traces of electricity. This may also leave the foe with paralysis.]
+ 0x1B4 = Giga Spark [A high-voltage attack. This may also harshly lower the user's Defense stat.]
+ 0x1B5 = Shine Bomb [An intensely shining explosion. This may also lower the foe's accuracy.]
+ 0x1B6 = Megashock [An intense electric shock. This may also harshly lower the foe's Defense stat.]
+ 0x1B7 = Mach Volt [A supersonic shockwave is fired at the foe. This move always goes first.]
+ 0x1B8 = Energize [The user infuses its entire body with electric current, raising its Attack and Sp. Atk stats.]
+ 0x1B9 = Wild Growth [The surrounding foliage is made to grow rapidly. This may also lower the foe's Speed stat.]
! 0x1BA = Guardian Leaf (not implemented) [The user attacks while bolstering its defense with foliage. This may also raise the user's Defense stat.]
+ 0x1BB = Poison Leaf [Poisonous leaves that may also poison the foe. This move is super effective on Water types.]
+ 0x1BC = Rapid Growth [The user suddenly grows and attacks the foe. This may also raise the user's Sp. Atk stat.]
+ 0x1BD = Dazzle Powder [Large amounts of a perplexing powder are scattered on the foe, which causes it to become confused.]
+ 0x1BE = Starfreeze [The user fires cold, star-shaped objects to attack. This may also leave the foe with paralysis.]
+ 0x1BF = Icicle Punch [The user strikes with a fist as cold and sharp as an icicle. This may also lower the foe's evasiveness.]
+ 0x1C0 = Frostbite [Incredibly cold methane crystals are blown at the foe. This may also raise the user's Sp. Atk stat.]
+ 0x1C1 = Icy Kiss [A kiss that may also lower the user's Defense stat or freeze it. It deals physical damage.]
+ 0x1C2 = Magnum Punch [A bullet-like punch attack. This may also lower the user's Defense stat or make it flinch.]
+ 0x1C3 = Double Shot [The user shoots bullets out of its body twice in a row. This may also raise the user's accuracy.]
+ 0x1C4 = Toxin Spray [The user attacks by spraying a dangerous toxin from deep inside its body. This may also badly poison the foe.]
+ 0x1C5 = Smogscreen [The user attacks with poisonous smoke. This may also lower the foe's accuracy or poison it.]
+ 0x1C6 = Burrow [The user attacks from under the foe's feet. This may also harshly lower the foe's Speed stat.]
+ 0x1C7 = Sonic Sand [Sand is thrown at supersonic speeds to attack. This may also harshly lower foes' Sp. Def stats.]
+ 0x1C8 = Sandblast [The user blows wind carrying countless fine grains of sand. This may also lower the accuracy of those hit. (CHECK LAVA PLUME)]
+ 0x1C9 = Glide [The user attacks the foe by flying with wings spread wide. This may also raise the user's accuracy.]
+ 0x1CA = Typhoon [The user attacks with a blade of wind. This may also randomly raise or lower the user's stats.]
+ 0x1CB = Psygatling [Bullets made of spiritual energy are fired at the foe. This may also leave the user with a burn.]
+ 0x1CC = Psycho Punch [The user strikes with a fist infused with mystical power. This may also confuse the foe.]
+ 0x1CD = Psyburn [The foe is incinerated using mysterious powers. This may also raise the user's Sp. Def stat.]
+ 0x1CE = Latent Power [The user attacks by emitting a strange energy, which also sharply raises the foe's evasiveness.]
+ 0x1CF = Hypnopulse [The user shoots a pulse that induces drowsiness at the foe. This may also cause the foe to fall asleep.]
+ 0x1D0 = Gravity Wave [The user manipulates gravity to fling the foe around. This deals more damage the more the foe weighs.]
+ 0x1D1 = Bug Noise [The user flies around emitting a high-pitched shriek. This may also leave the user with paralysis.]
+ 0x1D2 = Angry Swarm <card: Disturbance Dive> [The user flies around to disrupt the air currents. This may also lower the foe's accuracy or confuse it. (FIX NAME/CHECK TRANSLATION LATER)]
+ 0x1D3 = Rock Tumble [The user rolls into the foe repeatedly over five turns, stronger each time.]
+ 0x1D4 = Diamond Blast [The foe is attacked with a blast that sparkles like diamonds. This may also lower the user's Sp. Def stat.]
+ 0x1D5 = Paleobreath [The user blows out an ancient breath. This may also raise the user's Sp. Atk stat.]
+ 0x1D6 = Shadow Clamp [The user persistently bites the foe. This may also cause the foe to fall asleep or become confused.]
+ 0x1D7 = Cursed Wrath [A curse is laid on the foe. This becomes more powerful the less HP the user has.]
+ 0x1D8 = Life Drain [A restrained attack that always leaves the foe with at least 1 HP.]
+ 0x1D9 = Dragon Beat [The user attacks in a steady rhythm. However, it may also sharply raise the foe's Attack stat.]
+ 0x1DA = Vengeance [This move's power doubles if the user has been hurt by the foe this turn.]
+ 0x1DB = Dark Resolve [The user bathes itself in darkness and attacks with extraordinary resolve. The user is poisoned afterwards.]
+ 0x1DC = Dark Cutter [The foe is slashed with sharp winds steeped in darkness. Critical hits land more easily.]
+ 0x1DD = Dark Roar [The user lets out a darkness-tinged roar. This move always goes first.]
+ 0x1DE = Dark Hand [The user uses its hand to carefully plan where to aim next, sharply raising its accuracy.]
+ 0x1DF = Corner [The user attacks, blocking off all of the foe's escape routes. The target becomes unable to flee.]
+ 0x1E0 = Metal Pincer [The user snips at the foe using metallic arms or legs, hitting three times in a row.]
+ 0x1E1 = Geo Impact [The user attacks by causing a violent impact that starts deep underground. This may also sharply raise the foe's Sp. Atk stat.]
+ 0x1E2 = Magnet Force [The foe is attacked with magnetic energy. This may also lower the foe's Attack or Sp. Atk stats.]
+ 0x1E3 = Roost
+ 0x1E4 = Defog
+ 0x1E5 = Lava Plume
+ 0x1E6 = Nova Inferno [no description]
+ 0x1E7 = Raid [The user strikes the foe, possibly inflicting various status problems depending on the current weather.]
+ 0x1E8 = Acid Spray
+ 0x1E9 = Electroweb
+ 0x1EA = Shell Smash
+ 0x1EB = Gastro Acid
+ 0x1EC = Infection [The user's and foe's bodies both react badly, causing them both to become poisoned.]
+ 0x1ED = Leaf Tornado
+ 0x1EE = Devour [The user bites at the foe relentlessly, steadily eating away at the foe's body.]
+ 0x1EF = Bulldoze
+ 0x1F0 = Dual Chop
+ 0x1F1 = Quiver Dance
+ 0x1F2 = Hone Claws
+ 0x1F3 = Icicle Crash
+ 0x1F4 = Coil
+ 0x1F5 = Drill Run
+ 0x1F6 = Heart Stamp
+ 0x1F7 = Steamroller
+ 0x1F8 = Work Up
+ 0x1F9 = Sludge Wave
+ 0x1FA = Struggle Bug
+ 0x1FB = Inferno
+ 0x1FC = Wild Charge
+ 0x1FD = Sharpshoot [The user concentrates and takes aim before hitting. This attack always results in a critical hit.]
+ 0x1FE = Scald
+ 0x1FF = Moonblast
+ 0x200 = Dazzling Gleam
+ 0x201 = Fairy Wind
+ 0x202 = Disarming Voice
+ 0x203 = Baby-Doll Eyes
+ 0x204 = Play Rough
+ 0x205 = Aqua Impact [While cloaked in water, the user smashes into the foe with all its strength. This also damages the user quite a lot.]
+ 0x206 = Tailwind
+ 0x207 = Chatter
+ 0x208 = Trick Room
+ 0x209 = Sucker Punch
+ 0x20A = Head Smash
+ 0x20B = Clear Smog
+ 0x20C = Frost Breath
+ 0x20D = Tail Slap
+ 0x20E = Hex
+ 0x20F = Flame Charge
+ 0x210 = Snarl
+ 0x211 = Incinerate
+ 0x212 = Eerie Impulse
+ 0x213 = Power-Up Punch
+ 0x214 = Confide
+ 0x215 = Play Nice
+ 0x216 = Boomburst
+ 0x217 = Petal Blizzard
+ 0x218 = Freeze-Dry
+ 0x219 = Venom Drench
+ 0x21A = Nuzzle
= 0x21B = [Freeze Shock (Cryoshock?)] (attacking move with chance to freeze), (animation covers the foe in ice, then covers the foe in snowflakes, on Frost Breath's background), "The foe is struck with incredibly cold ice. This may also freeze the foe solid."
= 0x21C = [gansekidan (Stone Bullet)] (attacking move with chance to flinch), (has Rock Blast animation, except the rock is shot out instead of thrown), "A hard rock fired like a bullet to attack. This may also make the foe flinch."
+ 0x21D = Gem Laser [The user absorbs the light of gemstones and fires it out to attack. This may also lower the foe's evasiveness.]
= 0x21E = [seikendzuki (Single Punch) (Forward Fist?)] <card: Beatdown> (attacking move with chance to flinch), (animation is Take Down that hits with an open palm, on Focus Blast's background), "The user throws a powerful punch straight out at the foe with its right fist. This may also make the foe flinch."
+ 0x21F = Jet Shoot [The user smashes into the foe with all its strength with the speed of a jet plane. This may also raise the user's Speed stat.]
+ 0x220 = Psy Crush [The user creates an impact using its powerful mind. This may also lower the foe's Defense stat.]
= 0x221 = [Shadow Attack (Shadow Lunge?)] <card: Night Attack> (attacking move with chance to flinch), (animation involves user disappearing, then foe being repeatedly hit, on a purple fire background), "The user's shadow detaches itself and leaps at the foe to attack. This may also make the foe flinch."
+ 0x222 = Soulstrike [The foe is attacked with the power of spirits. This may also confuse the foe.]
= 0x223 = [Clear Ball] (attacking move with chance to lower sp. def), (animation encases the foe in a spinning blue bubble, then the foe turns gray), "A steel ball that shines with a silver glow is thrown at the foe. This may also lower the foe's Sp. Def stat."
+ 0x224 = Dragon Bite [The user uses its enormous, sharp teeth and powerful jaws to bite down on the foe.]
= 0x225 = [RYUUZUBASUTAA (Drake Blaster?)] (attacking move with chance to raise sp. atk), (animation involves charging up while flashing blue, then shooting an orb, on Dragon Tail's background), "The user unleashes a horrifying breath from deep within its body. This may also raise the user's Sp. Atk stat."
+ 0x226 = Latch On <card: Big Bite> [The user takes advantage of its small body to stick to the foe by latching on with its jaws.]
= 0x227 = [niramitsukeru (Leer?!)] <card: Leer?!> (non-attacking move, turns target into pure Rock-type), (animation is Leer that inverts colors), "The user glares at the foe and uses the power of its cursed gaze to change the foe's type to Rock."
= 0x228 = [noroi no sakebi (Cursed Shout)] (attacking move), (animation is Screech but instead shoots out a horrorface, on Hex's background), "The user shouts with a voice loud enough to shatter boulders. Rock-type foes take more damage."
+ 0x229 = Soak
+ 0x22A = Simple Beam
+ 0x22B = Worry Seed
+ 0x22C = Moon Impact [An intense attack using the power of the moon. This also damages the user terribly.]
= 0x22D = [Life Energy (Life Burst?)] (attacking move with Wring Out effect), (animation has the foe absorb light then hearts explode on it, on Draining Kiss's background), "An explosion fueled by the foe's own life force. The power changes depending on the foe's remaining HP."
+ 0x22E = Magical Break [The user cloaks itself in a mysterious power, then attacks the foe. This may also lower the foe's Defense stat.]
+ 0x22F = Champion Strike [CHANGE GRAPHICS], [An attack used by those who have overcome harsh challenges. Lowers the user's Attack and Defense stats afterwards.] [check desc after doing name and figuring out what the animation says]
+ 0x230 = Dinosword [The foe is slashed with sharp claws or fins. The power is increased if used after Hone Claws.]
= 0x231 = [Windmill] (attacking move with chance to lower speed), (animation involves leaves spreading outward from the user then a tackle, on a green version of Aura Sphere's background), "An attack using a small tornado. This may also raise the user's Speed stat."
+ 0x232 = Crimson Rush [The user rushes the foe while cloaked in blazing flames. This may also leave the foe with a burn or make it flinch.]
= 0x233 = [touki no otakebi (Fighting Spirit War Cry) (Fervorous Roar?)] (attacking move), (animation shoots a purple soundwave that uses the user's cry, on Aura Sphere's background), "Unleashes an intense war cry fueled by an overwhelming amount of fighting spirit to do damage."
= 0x234 = [Impact Site] (attacking move), (animation is a Steel-type Take Down on a gear background), "The user rushes the foe with the force of a bullet. This also damages the user a little."
+ 0x235 = Barrier Blast [The user attacks the foe with its defensive energy. This move does more damage if the user has barriers such as Reflect.]
= 0x236 = [Windmill] (attacking move with chance to lower speed or raise user's speed), (animation involves leaves spreading outward from the user and then the target, on a green version of Aura Sphere's background), "An attack using a small tornado. This may also lower the foe's Speed stat or raise the user's Speed stat."
+ 0x237 = Soil Shot [The user scoops up the surrounding soil and throws it. This also lowers the foe's Defense stat.]
= 0x238 = [Rock Sling] (attacking move with chance to lower defense), (animation throws a rock), "The user attacks by throwing a big rock. This also lowers the foe's Defense stat."
+ 0x239 = Low Sweep
+ 0x23A = Feint
= 0x23B = [Marine Drop] (attacking move with chance to lower evasion), (animation is Bounce with water effects on Hydro Pump's background), "The user drops a large water droplet from above to attack. This also lowers the foe's evasiveness."
+ 0x23C = Thicket Slip [The user hides among the foliage to avoid attacks, raising its Speed stat and evasiveness.]
= 0x23D = [kyuusenkai (Rapid Spin) (Spin Dodge?)] (non-attacking move), (animation is Sky Attack charge-up, then Agility), "The user spins around incredibly quickly to throw off the foe's aim, raising the user's Speed stat and evasiveness."
+ 0x23E = Neurotoxin <card: Stun Poison> [The foe is injected with a poisonous substance that causes nerve damage, poisoning it or leaving it with paralysis.]
= 0x23F = [RAPPUon (Knocking Sound) (Eerie Knocking?)] (non-attacking move), (animation is a wait as hit sounds play, then Astonish, on Hex's background), "The foe is frightened by a disturbing noise, lowering its Sp. Atk and Sp. Def stats."
+ 0x240 = Zombie Touch [The user touches the foe while behaving like a zombie, changing one of the foe's moves to Zombie Touch.]
+ 0x241 = Aqua Vulcan [The user shoots water with the force of a bullet to attack two to five times in a row.]
+ 0x242 = Fin Smack [The user smacks the foe with all of its strength using a fin.]
+ 0x243 = Splatter [The user forcefully shoots water at the foe to attack.]
= 0x244 = [Aroma Wind (Scented Wind?)] (attacking move with chance to sleep), (animation is Aromatherapy edited to become an attack), "The user attacks with a calming wind. This may also put the foe to sleep or confuse it."
= 0x245 = [senseijutsu (Astrology) (Astrologica?)] (attacking move with chance to raise all stats), (animation is Psychic on Cosmic Power's background), "An attack using the power of the stars. This may also raise all of the user's stats at once."
= 0x246 = [onmyoujutsu (Yin-Yang Rite) (Cosmologica?)] (attacking move with tri attack effect), (animation is Psychic on the user, then a pentagram appears on the target, then Psychic on the target, on Psyshock's background), "The foe is attacked using a rite passed down from ancient times. This may also inflict various status problems on the foe."
+ 0x247 = Drill Punch [The foe is punched hard enough to punch a hole through it. This may also lower the foe's Defense stat.]
+ 0x248 = Metal Horn [The foe is tossed using a sharp horn that is as hard as steel.]
+ 0x249 = Powervolt [The foe is attacked with overflowing electrical energy. This may also raise the user's Sp. Atk stat.]
+ 0x24A = Electro Impact [The user cloaks itself in electricity and attacks the foe. This may also leave the foe with paralysis.]
+ 0x24B = Gaia Cube [The foe is struck with an object that emits unknown power. This may also raise the foe's Sp. Atk stat.]
+ 0x24C = Light Pulse [The foe is attacked with a radiant pulse of light. This may also lower the foe's Sp. Def stat.]
= 0x24D = [maounoikari (Demon King's Rage) (Dark Lord's Rage?)] (attacking move with chance to paralyze), (animation has user charge and turn purple, then tackle the foe with a spooky silhouette in the background, creating ghostly fire), "The foe is attacked with the power of the Demon King's wrath. This may also leave the foe with paralysis."
+ 0x24E = Magic Voice [The user attacks by producing a special kind of sound wave with its voice. This attack never misses.]
+ 0x24F = Aqua Cutter [The foe is slashed with a sharp blade made of water. Critical hits land more easily.]
= 0x250 = [inochitori (Life Steal)] (attacking move with chance to lower speed), (animation summons a pit of pure darkness beneath the foe, then the screen slowly fades to darkness as a ghostly hand reaches out, then a flurry of hit sounds when the screen is completely black), "The user attacks by grabbing and plucking out the foe's life force. This may also leave the foe with paralysis."
+ 0x251 = Yoga Smash [The user attacks directly with its mental power. This move deals special damage.] [figure out what "jiddaika" is]
+ 0x252 = Dragon Tail
! 0x253 = [no name yet] (attacking move with chance to lower sp. def), (can't be called by metronome), (has Pound animation; not implemented), "The user attacks with the power of the Wind Spirit. This may also lower the foe's Sp. Def stat."
! 0x254 = [no name yet] (attacking move with chance to lower sp. atk), (can't be called by metronome), (has Pound animation; not implemented), "The user attacks with the power of the Water Spirit. This may also lower the foe's Sp. Atk stat."
! 0x255 = [no name yet] (attacking move with chance to lower attack), (can't be called by metronome), (has Pound animation; not implemented), "The user attacks with the power of the Fire Spirit. This may also lower the foe's Attack stat."
! 0x256 = [no name yet] (attacking move with chance to lower defense), (can't be called by metronome), (has Pound animation; not implemented), "The user attacks with the power of the Earth Spirit. This may also lower the foe's Defense stat."
= 0x257 = [meromeroPANCHI (Love Punch) (Cupid's Punch?)] (attacking move), (the only move that prints "prevents romance" instead of "made [MOVE] useless"), (animation is a punch that creates the Attract effects), "A seductive punch that may cause a foe of the opposite sex to become infatuated with the user."
+ 0x258 = Brine
+ 0x259 = Power Split
+ 0x25A = Guard Split
+ 0x25B = Power Swap
+ 0x25C = Guard Swap
+ 0x25D = Foul Play
! 0x25E = [no name yet] (attacking move with chance to harshly lower speed or confuse), (can't be called by metronome), (has Pound animation; not implemented), ""The power of the Big Dog distorts the earth." This move may also lower the foe's Speed stat."
! 0x25F = [no name yet] (attacking move with chance to harshly lower sp. def or confuse), (can't be called by metronome), (has Pound animation; not implemented), ""The power of the Eagle turns all to nothing." This move may also lower the foe's Sp. Def stat."
! 0x260 = [no name yet] (attacking move with chance to lower defense or confuse), (can't be called by metronome), (has Pound animation; not implemented), ""The power of the Lion destroys anything." This move may also lower the foe's Defense stat."
! 0x261 = [no name yet] (attacking move), (can't be called by metronome), (has Pound animation; not implemented), ""A wish for peace returns all to its beginning." All stat changes are returned to normal."
! 0x262 = [no name yet] (attacking move), (can't be called by metronome), (has Pound animation; not implemented), ""The incarnation of fear drives anyone mad." This move also lowers all of the foe's stats."
= 0x263 = [Colorful Attack (Rainbow Ram?)] (attacking move), (animation is five hits - blue, purple, green, red, yellow - while a rainbow spins around the foe), "The foe is attacked with a move that has no particular type. The user's type determines the type of this move."
+ 0x264 = Wake-Up Slap
+ 0x265 = Farewell Slap [It doubles in power on an infatuated foe, but cures the foe's infatuation.]
= 0x266 = [Icing (Icepack?)] (attacking move that does double damage if it cures burn), (animation creates ice around the foe's feet then covers the foe in ice), "It doubles in power on a burned foe, but cures the foe's burn."
+ 0x267 = Ice Crush [It doubles in power on a frozen foe, but thaws the foe out.]
= 0x268 = [kooridzuke (Iced) (Frozen Tomb?)] <card: Ice Entomb> (non-attacking move), (animation covers the foe in ice, then creates ice around the foe), "The foe is buffeted by supercooled air, causing it to become frozen. "Cold deprives the body of freedom.""
+ 0x269 = Pyrokinesis [The foe is ignited with psychic powers. This may also leave the foe with a burn.]
+ 0x26A = Barrier Bash <card: Barrier Attack> [The user slams the foe with its hard body. This move does more damage the higher the user's Defense stat is.]
+ 0x26B = Heal Pulse
+ 0x26C = Rage Powder
+ 0x26D = Bestow
+ 0x26E = Stored Power
+ 0x26F = Circle Throw
+ 0x270 = U-Turn
+ 0x271 = Volt Switch
= 0x272 = [kajibanoichigeki (Strike at the Scene of a Fire) (Burnout Strike?)] <card: Fire Counterattack> (attacking move with Brine effect, but doubles when the user has less than half HP, not the target), (has Flame Wheel animation on a fiery background), "If the user's HP is half or less, this attack will hit with double the power."
+ 0x273 = Stretch [The user does some light exercise to get in shape, raising its Attack and Speed stats and its evasiveness.]
= 0x274 = [iyananioi (Bad Smell)] (non-attacking move), (animation is brownish Mist), "The user wafts a nose-curling stench over to the foe, lowering its evasiveness and causing it to become confused."
+ 0x275 = Warble [A beautiful birdsong that saps foes' motivation, lowering their Sp. Def stats.]
= 0x276 = [mushinokoe (Insect Voice)] (non-attacking move, +1 sp. atk), (has Growl animation), "The user summons its fellow insects to hear their cries, which raise the user's Sp. Atk stat."
= 0x277 = [mushigatsuku (Infestation) (Insect Plague?)] (non-attacking move, turns target into pure Bug-type), (animation is a swarm of insects flying in all directions, then a single insect swaying in front of the foe), "The foe is covered in a huge amount of insects, changing its type to Bug."
= 0x278 = [mushikaesu (Send Bugs) (Bug Out?)] (attacking move), (animation is user getting angry, then a swarm of insects flying in all directions), "This move's power doubles if the user has been hurt by the foe this turn."
= 0x279 = [hyoui (Possession) (Haunting?)] (non-attacking move, turns target into pure Ghost-type), (animation is Memento, then the foe turns black, on Shadow Ball's background), "The user infects the foe with its hatred and malice, changing its type to Ghost."
= 0x27A = [Soul Shape] (attacking move with Brine effect), (animation has purple lumps appear around the foe's feet, then purple tentacles surround and squeeze it, on Shadow Ball's background), "If the foe's HP is half or less, this attack will hit with double the power."
+ 0x27B = Wildcard [The user turns the foe's power against it. This move does more damage the higher the foe's Sp. Atk stat is. (CHECK FOUL PLAY)]
+ 0x27C = Wring Out
+ 0x27D = Captivate
+ 0x27E = Dreamy Mist [Covers the foe in a mist that draws it into a deep slumber. This move overrides other status problems to put the foe to sleep.]
+ 0x27F = Cotton Guard
+ 0x280 = Storm Throw
+ 0x281 = Punishment
= 0x282 = [Magna Rise (Terra Boost?)] (non-attacking move), (animation is Focus Energy twice on a fossil background), "The user absorbs power from the earth, raising its Attack and Defense stats but lowering its Speed stat."
= 0x283 = [araryouji (Urgent Care)] (attacking move that does double damage if it cures poison), (animation slaps a bandage onto the foe), "It doubles in power on a poisoned foe, but cures the foe's poisoning."
+ 0x284 = Chip Away
+ 0x285 = Sacred Sword
+ 0x286 = Synchronoise
+ 0x287 = Reflect Type
+ 0x288 = Draining Kiss
= 0x289 = [HEDOROBOMBAA (Sludge Bomber) (Sludge Missile?)] (attacking move with Overheat effect, but harshly lowers user's attack instead of sp. atk), (animation shoots brown clouds with poison sounds that explode on the foe into more brown clouds, on a poisonous cloud background), "The user attacks, cloaked in poison, with every ounce of its strength. This lowers the user's Attack stat afterwards."
+ 0x28A = Black Hole [The foe is dragged into a newly opened hole in the fabric of space. This harshly lowers the user's Sp. Atk stat afterwards.]
= 0x28B = [dakitsuku (Embrace)] <card: Hug> (attacking move), (animation is Bind with Charm sounds on a pink background), "The user embraces the foe with its whole body. The target becomes unable to flee."
+ 0x28C = Infestation
+ 0x28D = Payback
+ 0x28E = Magma Storm
+ 0x28F = Psycho Shift
+ 0x290 = Power Trick
+ 0x291 = Wonder Trick [Using psychic powers, the user swaps the values of its Sp. Atk and Sp. Def stats.]
+ 0x292 = Acrobatics
+ 0x293 = Metal Burst
+ 0x294 = (completely empty slot)
+ 0x295 = Spirit Shackle
+ 0x296 = Fire Lash
+ 0x297 = Flash Bubble [The user attacks by shooting bubbles that emit flashes as they pop. This may also lower the foe's accuracy.]
= 0x298 = [Hyper Jingle] (attacking move with chance to paralyze), (animation involves emitting sound waves with the Heal Bell sound while a huge bronze bell appears on the user, on Psyshock's background), "The user shakes its entire body, emitting an incredible sound. This may also leave the foe with paralysis."
+ 0x299 = Smart Strike
= 0x29A = [an'ya no tsubasa (Dark Night Wing) (Midnight Wings?)] (attacking move with chance to lower accuracy or flinch), (animation is shedding black feathers, then Wing Attack, on a black background), "The user obstructs the foe's vision as it attacks with wings. This may also make the foe flinch or lower its accuracy."
= 0x29B = [Earth Riser (Rising Earth?)] (attacking move), (animation is user half of Psychic, then pillars of light come up from the user and down to the target with Heal Bell sounds, then the foe explodes, on Earthquake's background), "This move cannot be blocked by Protect, and harshly lowers the user's Sp. Atk stat afterwards."
= 0x29C = [nagiharau (Sweep Away)] (attacking move with chance to flinch), (animation is a big slap in darkness), "The foe is swept away by sheer power. This may also make the foe flinch."
= 0x29D = [Lovely Spark] (attacking move with chance to paralyze), (animation has user send out a floating heart that creates a thunderbolt sound when it hits the foe, on Draining Kiss's background), "Enticingly shoots out a burst of electricity. This may also leave the foe with paralysis or cause it to become infatuated."
= 0x29E = [Blossom Light] (attacking move with chance to severely lower accuracy), (animation creates a lot of golden circular cutouts that float up from a white shadow under the foe, with Petal Dance sound, on a sparkly background), "An elegant attack with sparkling fireworks. This may also severely lower the foe's accuracy."
= 0x29F = [juuounoKIBA (Fang of the Beast King) (Beast Lord Fang?)] (attacking move), (Ground-type but neutral on Flying and bypasses Levitate), (animation has user bite foe twice, then charge up, then do a third bite, on Earthquake's background), "A bite using the power of the King. This move ignores immunities from the Flying type and Levitate."
= 0x2A0 = [Deadly Bone] (attacking move), (animation has user disappear then do blue Volt Tackle animation with different sounds, but ending in two smashes then a big smash, all of which create flying bones), "A collision that nearly smacks the foe's spirit right out of its body. This move does more damage the more Speed boosts the user has."
= 0x2A1 = [daisenpuu (Big Whirlwind) (Maelstrom?)] (attacking move), (animation summons a huge tornado on Thunder's background), "The foe is swallowed up and sliced to bits by a storm of blades. This move will always result in a critical hit."
+ 0x2A2 = Launcher Arm [The user transforms its arm into a blaster, then fires it. After use, the user's Ability becomes Mega Launcher.]
= 0x2A3 = [shikonnnomichibiki (Guidance of the Four Souls) (Venom Burst?)] (attacking move with Venom Drench effect), (animation has huge poison bubbles float up from under the foe with poison sounds as the foe turns dark purple, on a poisonous cloud background), "An attack with an unidentified poison that also lowers the stats of poisoned foes. [CHECK VENOM DRENCH]"
! 0x2A4 = Strength Sap (not implemented)
+ 0x2A5 = (completely empty slot)
+ 0x2A6 = Pheromone Poison [The user blows a captivating poison that causes the foe to lose all reason, poisoning and infatuating it.]
! 0x2A7 = Shell Trap (not implemented) (no description)

move effects:
= 0x1E = freeze
= 0x32 = confuse and lower evasion
= 0x33 = if target moved first, damage with chance to raise speed; otherwise, damage with chance to raise sp. atk
= 0x34 = Payback that always doubles power vs Steel-types
= 0x35 = (ground -> flying neutral, ice/poison -> water SE, unknown hardcoded parameterized additional effects), (AI uses this for Cursed Shout)
= 0x36 = (ground -> flying neutral, ice/poison -> water SE, unknown hardcoded parameterized additional effects), (AI uses this for Poison Leaf and Freeze-Dry)
= 0x37 = Power Split
= 0x38 = Guard Split
= 0x3A = Power Swap
= 0x3B = Guard Swap
= 0x3C = Reflect Type
= 0x3D = Synchronoise
= 0x3E = Foul Play/Wildcard
= 0x3F = Heal Pulse
= 0x40 = Neurotoxin
= 0x58 = moves that double damage on status are all grouped here (Venoshock, Hex, and Smelling Salts/equivalents), but hardcoded based on move ID
= 0x5D = Venom Drench/[move2A3]
= 0x60 = hardcoded parameterized additional effects, ai uses this for all "chance to give user a status problem" moves
= 0x61 = hardcoded parameterized additional effects, ai uses this for sleep chance moves
= 0x68 = Bestow
= 0x6E = Incinerate
= 0x82 = Punishment
= 0x83 = Stored Power/(+6 speed = 110 power, +5/+4 speed = 100 power, +3/+2 speed = 90 power, else displayed base power)
= 0x85 = Tailwind
= 0x86 = Trick Room
= 0x8A = Inflammation
= 0x8B = Infection
= 0x8C = hardcoded parameterized additional effects, ai uses this for all "chance to raise a stat" moves
= 0x8D = Chip Away
= 0xA3 = 50% recoil
= 0xAB = Quick Turn
= 0xC8 = hardcoded parameterized additional effects with an extra 30% chance to infatuate the target
= 0xD1 = Work Up/Growth/Energize
= 0xD6 = Hammer Arm
= 0xD7 = Close Combat
= 0xD8 = Diamond Blast/Giga Spark
= 0xD9 = hardcoded parameterized additional effects, ai uses this for Magnet Force and [move236]
= 0xDA = hardcoded parameterized additional effects, ai uses this for all "chance to raise target's stat" moves
= 0xDB = (calculates damage as if any Defense boosts were added to Sp. Atk, then has a 20% chance to raise Def and Sp. Atk)/[moveDD]
= 0xDC = Typhoon
= 0xDD = V-Create
= 0xDE = chance to lower all stats
= 0xDF = Dizzy Whirl
= 0xE0 = Metal Pincer
= 0xE1 = Frost Breath
= 0xE2 = Blizzard/Starfreeze
= 0xE3 = Brine/(double damage if user at less than half HP)
= 0xE4 = Soak + equivalents
= 0xE5 = Zombie Touch
= 0xE6 = Barrier Blast
= 0xE7 = Barrier Attack
= 0xE8 = Dinosword
= 0xE9 = Revelation Dance
= 0xEA = Surf
= 0xEB = Bulldoze/Sandblast
= 0xEC = Discharge/Lava Plume/Sludge Wave
= 0xED = Sucker Punch
= 0xEE = Hurricane
= 0xEF = lowers Sp. Atk and Sp. Def
= 0xF0 = +2 Attack +2 Defense -1 Speed to user
= 0xF1 = Quiver Dance
= 0xF2 = Coil
= 0xF3 = Shell Smash
= 0xF4 = Stretch
= 0xF5 = Thicket Slip
= 0xF6 = Hone Claws
= 0xF7 = Ground-type; if used on Protect, does half damage and harshly lowers user's Sp. Atk
= 0xF8 = Payback
= 0xF9 = Psycho Shift
= 0xFA = Power Trick/Wonder Trick
= 0xFB = Acrobatics
= 0xFC = Metal Burst
+ 0xFD = (currently unused)
= 0xFE = Launcher Arm
= 0xFF = just uses Explosion instead

itemdata:
all prices divided by 10
shards: items pocket -> key items pocket (PDONLY)
cheri-belue: mystery byte 02 = 01-23
liechi-enigma: mystery byte 02 = 36-3D
pomeg-tamato: type = other -> out of battle
pomeg-tamato: battle usage = 0 -> 1
pomeg-tamato: extra byte = 1A, 1B, 1C, 1E, 1F, 1D
sitrus: effparam = 30 -> 0xFE
typeboosters: effparam = 10 -> 20
leftovers: effparam = 10 -> 0xFF
sea incense: effparam = 5 -> 20
lax incense: effparam = 5 -> 10
changed fieldscriptptrs: pomeg-tamato

pokeball types:
+ 0x01 = Ultra Ball -> Master Ball
+ 0x02 = Great Ball -> Ultra Ball
+ 0x03 = Poke Ball -> Great Ball
+ 0x04 = Safari Ball -> Poke Ball
+ 0x05 = Net Ball -> Safari Ball
+ 0x06 = Dive Ball -> Net Ball
+ 0x07 = Nest Ball -> Dive Ball
+ 0x08 = Repeat Ball -> Nest Ball
+ 0x09 = Timer Ball -> Repeat Ball
+ 0x0A = Luxury Ball -> Timer Ball
+ 0x0B = Premier Ball -> Luxury Ball
+ 0x0C = Premier Ball
+ 0x0D = Quick Ball
+ 0x0E = Dusk Ball
+ 0x0F = Park Ball
+ 0x10 = Heal Ball
+ 0x11 = Cherish Ball
+ 0x12 = Moon Ball
+ 0x13 = Friend Ball
+ 0x14 = Heavy Ball
+ 0x15 = Level Ball
+ 0x16 = Love Ball
+ 0x17 = Lure Ball
+ 0x18 = Fast Ball

metatiles:
0x08: (cave battle background)
0x1A: (pond battle background)
0x1B: (pond battle background)
0x1F: (Strength boulders can be moved onto this tile, after which the boulder disappears; also some unknown functionality which is shared with ice tiles)
0xB0: (moving west off the tile results in northwest, moving east results in southeast)
0xB1: (moving west off the tile results in northwest)
0xB2: (moving east off the tile results in southeast)
0xB3: (moving west off the tile results in southwest, moving east results in northeast)
0xB4: (moving east off the tile results in northeast)
0xB5: (moving west off the tile results in southwest)
0xD1: (grass battle background)
0xE0: (IsSandOrDeepSand (? unsure) returns TRUE; cave battle background)
0xE1: (underwater battle background)
0xE2: (IsSandOrDeepSand (? unsure) returns TRUE; underwater battle background)
0xE3: (runs script_68277E_J (msgbox "The trash can is full of garbage.") when examined)
0xE4: (runs script_682787_J (msgbox "Nope, there's only trash here.") when examined)

battle strings (ADD 9 TO ALL):
+ 0x3B = "[PKMN] was cured of its [STATUS] problem! (FIX THIS)" <DON'T ADD 9>
+ 0x77 = "[PKMN] stayed awake using its [ABILITY]!" (same, but change B_DEF_ABILITY to B_LAST_ABILITY to allow for Sweet Veil/Flower Veil) <DON'T ADD 9>
+ 0xB8 = "[ATTACKER] swapped Abilities with its target! [ATTACKER]'s Ability became [ABILITY]! (CHECK THIS)" <DON'T ADD 9>
+ 0xC2 = "Using [ABILITY], the [STAT] of [PKMN] [CHANGED]! (FIX THIS)" <DON'T ADD 9> <REFACTOR LATER>
+ 0xC6 = "[PKMN]'s [ABILITY] made it the [TYPE] type!" (same, but change B_DEF_NAME_WITH_PREFIX to B_SCR_ACTIVE_NAME_WITH_PREFIX, and B_DEF_ABILITY to B_SCR_ACTIVE_ABILITY, to allow for Protean) <DON'T ADD 9>
+ 0xC7 = "[PKMN]'s [ABILITY] prevents paralysis!" (same, but change B_DEF_ABILITY to B_LAST_ABILITY to allow for Flower Veil) <DON'T ADD 9>
+ 0xC9 = "[PKMN]'s [ABILITY] prevents poisoning!" (same, but change B_DEF_ABILITY to B_LAST_ABILITY to allow for Flower Veil) <DON'T ADD 9>
+ 0xCA = "[PKMN]'s Own Tempo prevents confusion!" <DON'T ADD 9>
+ 0xCD = "Due to [ATTACKER]'s [ABILITY], [DEFENDER]'s [STAT] [CHANGED]! (FIX THIS)" <DON'T ADD 9> <REFACTOR LATER> [make sure it's fd13, fd1a, fd10, fd00, fd01]
+ 0xD5 = "drastically " <DON'T ADD 9>
+ 0xD6 = "severely " <DON'T ADD 9>
+ 0xE9 = "[PKMN] was hurt by its [ABILITY]! (CHECK THIS)" <DON'T ADD 9>
+ 0xEB = "[PKMN]'s [ABILITY] made it hail! (CHECK THIS)" <DON'T ADD 9>
+ 0x131 = "[PKMN]'s [ABILITY] prevents burns!" (same, but change B_EFF_ABILITY to B_LAST_ABILITY to allow for Flower Veil) <DON'T ADD 9>
+ 0x138 = "[PKMN]'s [ABILITY] cured its [STATUS] problem!" (same, but change B_SCR_ACTIVE_ABILITY to B_LAST_ABILITY to allow for Healer) <DON'T ADD 9>
+ 0x164 = "[PKMN]'s [ABILITY] cured its [STATUS] problem!" (same, but change B_SCR_ACTIVE_ABILITY to B_LAST_ABILITY to allow for Sweet Veil/Flower Veil on switchin) <DON'T ADD 9>
= 0x16F = (one of the PC messages) <DON'T ADD 9>
= 0x170 = (one of the PC messages) <DON'T ADD 9>
= 0x171 = (one of the PC messages) <DON'T ADD 9>
= 0x172 = (one of the PC messages) <DON'T ADD 9>
+ 0x17D = "Silph Scope unveiled the Ghost's identity! The Ghost was Dusknoir!" <DON'T ADD 9>
= 0x180 = "[PKMN]'s [ABILITY] nullified the effects of weather!" (do later)
= 0x181 = "[PKMN] can act faster than normal, thanks to its [ITEM]!" (do later)
+ 0x182 = "It's hailing!"
+ 0x183 = "The [ITEM] weakened [MOVE]'s power!"
+ 0x184 = "[PKMN] is not affected by [MOVE] thanks to its [ITEM]!"
+ 0x185 = "[PKMN] breaks the mold! (CHECK THIS)"
+ 0x186 = "[PKMN] is exerting its pressure! (CHECK THIS)"
+ 0x187 = "[PKMN] can't get it going because of its [ABILITY]! (CHECK THIS)"
+ 0x188 = "[PKMN] finally got its act together!"
+ 0x189 = "[PKMN]'s [ABILITY] alerted it to [MOVE]! (CHECK THIS)"
+ 0x18A = "[PKMN]'s [ABILITY] made it shudder! (CHECK THIS)"
+ 0x18B = "[ATTACKER] frisked its opponent and found its [ITEM]!"
+ 0x18C = "[PKMN] was protected by [ABILITY]!"
+ 0x18D = "[PKMN]'s [ABILITY] makes [your/the opposing] team too nervous to eat Berries!"
+ 0x18E = "[PKMN] twisted the dimensions!"
+ 0x18F = "The twisted dimensions returned to normal!"
+ 0x190 = "The Tailwind blew from behind [your/the opposing] team!"
+ 0x191 = "[Your/The opposing] team's Tailwind petered out!"
+ 0x192 = "[PKMN]'s [ABILITY] maximized its Attack!"
+ 0x193 = "[DEFENDER]'s [ABILITY] disabled [ATTACKER]'s [MOVE]!"
+ 0x194 = "[DEFENDER]'s [DEFABILITY] changed [ATTACKER]'s Ability to [ATKABILITY]!"
+ 0x195 = "[DEFENDER]'s [ABILITY] hurt [ATTACKER]!"
+ 0x196 = "Due to [DEFENDER]'s [ABILITY], [ATTACKER]'s [STAT] [CHANGED]! (FIX THIS)" <REFACTOR LATER>
+ 0x197 = "The [ITEM] strengthened [MOVE]'s power!"
+ 0x198 = "The effects of the [ITEM] prevent status moves from being used!"
+ 0x199 = "Using [ABILITY], the [STAT] of [PKMN] [CHANGED]! (FIX THIS)" <REFACTOR LATER>
! 0x19A = "[PKMN] lost some of its HP!"
+ 0x19B = "[PKMN]'s [ABILITY] bounced the [MOVE] back!"
+ 0x19C = "[PKMN]'s [ABILITY] blocks the use of [MOVE]!"
+ 0x19D = "[PKMN] restored HP using its [ABILITY]!"
+ 0x19E = "[PKMN] was hurt by its [ITEM]!"
+ 0x1FF = [not copying the whole thing, but it's an error-handling message]
+ 0x200 = "[PKMN] shared its power with the target!"
+ 0x201 = "[PKMN] shared its guard with the target!"
+ 0x202 = "[PKMN] switched all changes to its Attack and Sp. Atk with its target!"
+ 0x203 = "[PKMN] switched all changes to its Defense and Sp. Def with its target!"
+ 0x204 = "[ATTACKER]'s type became the same as [DEFENDER]'s type!"
+ 0x205 = "[ATTACKER] gave [DEFENDER] its [ITEM]!"
+ 0x206 = "[PKMN]'s [ITEM] was burned up!"
+ 0x207 = "[PKMN]'s Ability was suppressed!"
+ 0x208 = "[PKMN] acquired [ABILITY]!"
+ 0x209 = "[PKMN] transformed into the [TYPE] type!"
+ 0x20A = "One of [PKMN]'s moves became Zombie Touch!"
+ 0x20B = "Its sharpened claws strengthened the attack!"
+ 0x20C = "[PKMN] is already frozen!"
+ 0x20D = "[PKMN]'s [ABILITY] prevents freezing!"
! 0x20E = "[DEFENDER] has been afflicted with an infestation by [ATTACKER]!"
! 0x20F = "[PKMN] became trapped by swirling magma!"
+ 0x210 = "[PKMN] switched its Attack and Defense!"
+ 0x211 = "[PKMN] switched its Sp. Atk and Sp. Def!"
+ 0x212 = "[PKMN]'s stat changes were removed!"
! 0x213 = "[ATTACKER] jumped on top of [DEFENDER]! It's ready to help with its attack!"
+ 0x214 = "[PKMN]'s [ABILITY] prevents its item from being removed!"
+ 0x215 = "[PKMN] couldn't fully protect itself and got hurt!"
+ 0x216 = "[PKMN] transformed! Its Ability became Mega Launcher!"
+ 0x217 = "[PKMN] set a shell trap!"
+ 0x218 = "[PKMN]'s shell trap didn't work!"
! 0x219 = "[PKMN] can't use [MOVE]!"
! 0x21A = [broken]
! 0x21B = [broken]
+ 0x21C = "[PKMN]'s stats won't go any higher!" [technically "[MOVE] won't raise [PKMN]'s stats any higher!" for some reason, but overruled by my modernization]
+ 0x221 = "[PKMN] switched items with its target!"
+ 0x222 = "[PKMN] acquired [ABILITY]!"
+ 0x247 = "[Your/The opposing] team's Reflect wore off!" <EN ONLY>
+ 0x248 = "[Your/The opposing] team's Light Screen wore off!" <EN ONLY>

stray text:
= 1A5CF1 (19384A old, E00536 new) - one of the PC messages
= 1A5D31 (19386C old, E00536 new) - one of the PC messages
= 1A5D6E (19388E old, E0055A new) - one of the PC messages
= 1A5DB1 (1938C2 old, E0055A new) - one of the PC messages
= 1B583F (19F466 old, E005B0 new) - "Using [PCOWNER]'s PC" (for help system, now unused)
= 1B68CD (19FEA4 old, E005C1 new) - the help system description for "Using [PCOWNER]'s PC" (now unused)
! 3E823A (3AF6E1 old, 80B818 new) - randomly move Rough Skin text [don't do this unless necessary for whatever reason]
= 3FDAE2 (3C3CA6 jp) - one of oak's tutorial lines
= 3FDB92 (3C3D0A old, 3C3C3F new) - one of oak's tutorial lines
= 3FDBEF (3C3D2B old, 3C3D09 new) - one of oak's tutorial lines
= 3FDC58 (3C3D6B old, 3C3D3A new) - one of oak's tutorial lines
= 3FDC95 (3C3D90 old, 3C3D5E new) - one of oak's tutorial lines
= 3FDCD2 (3C3DB6 old, 3C3D86 new) - one of oak's tutorial lines
= 3FDD23 (3C3DDD old, 3C3DAC new) - one of oak's tutorial lines
= 3FDD64 (3C3E05 old, 3C3DCC new) - one of oak's tutorial lines
= 3FDDEB (3C3E5C old, 3C3E1D new) - one of oak's tutorial lines
= 3FE6D5 (3C4685 jp) - "What will [PLAYER] do?" (drop optional character in Japanese, probably to make room - might be unnecessary, check after ui redesign)
+ 415F66 -> 15447D9 (3DD606 old, 5447D9 new) - pokedex "-----" -> empty string
+ 415FED (3DD66F jp) - pokedex "Size" -> "Egg Groups"
= 416425 (3DD9B5 jp) - "Oak: [PLAYER]! This isn't the time to use that!"
= 4173E4 (3DE4D7 old, 3DE3ED new) - "Let's enjoy cycling!"
= 417457 (3DE537 old, 3C3EB6 new) - one of oak's tutorial lines
= 417494 (3DE55B old, 3DE537 new) - one of oak's tutorial lines
+ 418690 (3DF21C jp) - "Can't deposit the last Pokemon!" (in jp, it changes "If ya deposit that one, ya'd be in big trouble, doncha think?" to "You won't have any Pokemon left!", so no english change needed)
+ 4186B0 (3DF22F jp) - "Can't take any more Pokemon!" (in jp, it changes "There ain't no way y'can carry more Pokemon!" to "You can't carry any more Pokemon!", so no english change needed)
= 41969D (3DFE6F jp) - Pattern Bush map description (why only this one?)
+ 419C62 (3E0241 jp) - "(>) Page (A) Cancel" -> "(A) Cancel" (one screen on pokemon summary screen)
+ 419C7B (3E0258 jp) - "(<>) Page" -> "" (one screen on pokemon summary screen)
+ 419C82 (3E025F jp) - "(<) Page (A) Detail" -> "(A) Detail" (one screen on pokemon summary screen)
+ 419C92 (3E026C jp) - "(^v) Pick (A) Switch" -> "(A) Switch" (one screen on pokemon summary screen)
+ 419CA2 -> 13E06E3 (3E0279 old, 3E06E3 new) - "(^v) Pick" -> "(A) Pick" (one screen on pokemon summary screen)
+ 419CA9 (3E0280 jp) - "(^v) Pick (A) Delete" -> "(A) Delete" (one screen on pokemon summary screen)
+ 419E36 (3E03A1 jp) - "Mono" -> "Stereo"
+ 419E3B (3E03A6 jp) - "Stereo" -> "Normal"
+ 419E46 (3E03AF jp) - "Help" -> ""
= 41A2E1 (3E06E3 old, 68AE00 new) - "[PLAYER] had a marvelous battle with the Champion, [RIVAL]." (remove rival name and replace with actual champion)
= 41A312 (3E070A old, 3E0709 new) - "In the end, [PLAYER] sent out [PKMN] while [RIVAL] countered with [PKMN]." (remove rival name and replace with actual champion)
= 41B698 (3E148B jp) - "KANTO" (diploma)
+ 41D198 (3E2328 jp) - "Pokemon FireRed Version Staff" -> "Original FireRed Version Staff"
= repoint ptrs at 09D1E0 and 09D248 ("Bill's PC"/"Someone's PC") to the same text (jE00590, e1E00590)

+ expand rom to 2x
+ expand 1C68F4 (move animations) from 356 entries to 680 (1030000) 
+ expand 1C6EA8 (misc animations) from 23 entries to 24 (24th entry is 1C9989 - whirlwind animation) (104FF00)
+ expand 1D65A8 (move scripts) from 214 entries to 256 (1065000)
= expand 245EE0 (species names) from 10 per to 12 per (1060BA0?)
= expand 247094 (move names) from 355 entries/12 per to 680 entries/16 per (1000000)
	! also set 2481BE (gMoveNames[MOVE_FRENZY_PLANT]) to [BROKEN] 1E0C640
	! also set 24802B (gMoveNames[MOVE_BLAST_BURN]) to [BROKEN] 1E0C548
	! also set 248038 (gMoveNames[MOVE_HYDRO_CANNON]) to [BROKEN] 1E0C550
	= also set ptrs starting at 45A6A8 to new positions
+ expand 24F1A0 (type names) from 18 entries/7 per to 19 entries/9 per (j411E1C, e1411E1C)
+ expand 24FB08 (ability descriptions) from 78 entries to 232 (13FD000)
= expand 24FC40 (ability names) from 78 entries/12 per to 232 entries/16 per (13FF000)
+ expand 25011C (battle script commands) from 248 entries to 256 (EB7A00)
+ expand 2507E8 (uncopiable moves) from 4 entries (mimic) / 19 entries (metronome) to 5 entries (mimic) / 44 entries (metronome) (20CA40)
+ expand 250848 (pickup table) from 16 entries to 10 subtables of varying size (1528150)
% expand 250C04 (move data) from 355 entries to 680 (1010000)
+ expand 2539D4 (cry ids) to encompass all ids (865DE0)
% expand 25EF0C (egg moves) from 0x8E8 bytes to 0xFC4 bytes (8B6630)
% expand 26056C (ball sprites) from 12 entries to 26 (A23000)
% expand 2605CC (ball sprite palettes) from 12 entries to 26 (A230F0)
% expand 2606F4 (ball sprite templates (?duplicate)) from 12 entries to 26 (A23380)
% expand 39FDB0 (overworld event object gfx info pointers) from 174 entries to 256 (j4EFDA0, e14EFDA0)
+ expand 3A65BC (movement action functions) from 170 entries to 226 (221550)
	+ add bonus m.a.f. table at 2218D8
+ expand 3ACC08 (battle anim sprites) from 289 entries to 462 (1200300)
	+ also set 399388 (battle anim sprites ptr) to 11ECA80
	+ also set 3AD048 (gBattleAnimPicTable[136]) to 1200740
	+ also set 3AD350 (gBattleAnimPicTable[233]) to 1200A48
	+ also set 3AD470 (gBattleAnimPicTable[269]) to 1200B68
+ expand 3AD510 (battle anim palettes) from 289 entries to 462 (1201600)
	+ also set 399C90 (battle anim palettes ptr) to 11EDD80
	+ also set 3AD950 (gBattleAnimPaletteTable[136]) to 1201A40
	+ also set 3ADC58 (gBattleAnimPaletteTable[233]) to 1201D48
	+ also set 3ADD78 (gBattleAnimPaletteTable[269]) to 1201E68
+ expand 3ADE18 (battle anim backgrounds) from 27 entries to 100 (11FF000)
% expand 3D2A10 (box wallpapers) from 48 entries to 63 (938980)
% expand 3D353C (PC menu options) from 38 entries to 128 (jE2A570, e1E2A570)
% expand 3D3740 (raw mon icon palette data) from 3 entries to 6 (ONLY FIRST PTR) (EE4E00)
% expand 3D4038 (mon icon palettes) from 6 entries to 16 (jE40000, e1E40000)
% expand 3D4294 (item icons/palettes) from 375 entries to 435 (10B8000)
% expand 3DB028 (item data) from 375 entries to 435 (10B0000)
% expand 3EEBF8 (heal locations) from 20 entries to 22 (FE42E0)
	+ also set 3EEBF0 (sHealLocations[-1]) to FE42D8
% expand 3EEC98 (heal location map indexes) from 20 entries to 22 (FE4400)
% expand 3EECE8 (gSpecialVar_LastTalked values to be set on respawn per heal location) from 20 entries to 22 (FE4480)
+ repoint 3F55A4 (ai script commands) to 11FB800
+ expand 3FE534 (damaging weather continue messages) from 2 entries to 3 (3FE534)
+ expand 3FE538 (weather damage messages) from 2 entries to 3 (3FE53A)
+ expand 3FE53C (damaging weather end messages) from 2 entries to 3 (1D8B18)
+ reduce 3FE540 (rain continue messages) from 3 entries to 2 (3FE542)
+ expand 3FE5A0 (partial trapping messages) from 6 entries to 8 (1053700)
+ expand 3FE664 (partial trapping moves) from 6 entries to 8 (1303552)
+ expand 3FEA70 (japanese grammar) from 118 entries to 183 (1040000)
% expand 40BF48 (unknown pokeball struct) from 12 entries to 26 (A23600)
% expand 40BFA8 (unknown pokeball struct) from 12 entries to 26 (A236D0)
% expand 40C068 (unknown pokeball struct) from 12 entries to 48 (A24210)
% expand 40C074 (ball animation tasks) from 12 entries to 28 (A23A50)
% expand 40C0A4 (ball sprite templates (? duplicate)) from 12 entries to 26 (A237E0)
	+ also set 40C104 (gUnknown_840C0A4[ITEM_POKE_BALL]) to A23840
% expand 40C1C4 (color that mon sprite flashes on release from each ball) from 12 entries to 48 (A24240)
% expand 456C50 (unknown quest-log-related list of flags) from 17 entries to 19 (j6B0CCC, e16B0CCC)
% expand 4886E8 (move descriptions) from from 355 entries to 680 (1020000)
cur changes (do them): guillotine/horn drill/fissure/sheer cold "KO'd in one hit" -> "instantly killed"; (swords dance/agility/barrier/amnesia/acid armor/swagger jp spelling, check); whirlwind "blow away" -> "(nigesase)"; roar "force out" -> "(nigesase)"; growth "Sp. Atk" -> "Attack and Sp. Atk", needed to remove "instantly"; clamp -> new move; barrage -> entrainment; crabhammer "attacks by slamming a huge claw down on the foe" -> "bashes the foe with a huge claw"; Sharpen "and raises its Attack" -> ", which raises its Attack"; Conversion -> Fiery Dance; Triple Kick -> new move; Spider Web -> Accelerock; Snore "Attacks by snoring, which may also make the foe flinch. Can only be used while asleep." -> "This move can only be used while asleep. Attacks the foe by snoring loudly." (test if snore's flinch chance removed); conversion 2 -> new move; Aeroblast -> new move; Octazooka "Attacks by shooting ink into the face and eyes." -> "Shoots ink into the foe's face and eyes."; (False Swipe jp grammar, check); Sacred Fire -> new move; Hidden Power "changes type and power" -> "changes type"; Crunch "Sp. Def" -> "Defense"; Revenge "increases damage" -> "doubles damage"; (Imprison jp grammar, check); Arm Thrust - > new move; Tail Glow -> new move; Luster Purge -> new move; Mist Ball -> Hurricane; Needle Arm -> new move; Sheer Cold "incredible cold" -> "absolute zero"





= 006884: ptr 217818 (gUnusedJapaneseFireRedLeafGreenMaleFontGlyphs - emerald name) -> B07500 (gFont2JapaneseGlyphs)
= 0069F0: ptr 227B30 (gUnusedJapaneseFireRedLeafGreenFemaleFontGlyphs - emerald name) -> B07500 (gFont2JapaneseGlyphs)
		  (wait until playthrough - is this the equivalent of removing gender colors?)
= 008CF8, 008D2C, 1361B4, 3E2475: 0A -> 0C (pkmnnamelength)
+ 00960C: 36 -> 33 (some sort of link-related graphics function?, see 1disasm)
+ 00D311: 68 -> 47
  00D320: 4C 2B 02 02 -> 01 24 25 08 (jumps (bx) to extra fn at 252400, then back (see 02disasm))
		  Implements: clears various data on battle start
+ 011357: 20 08 40 88 21 8A 46 00 28 -> 31 09 06 09 0E 8A 46 02 E0 (unclear, but gives more variance to personality values)
= 0113E0, 0113F2, 011466, 011478, 011526, 011538, 0115BA, 0115CC, 034D26, 040FE2, 0435A6, 049720, 053AB0, 053B16, 06BCAA, 06BCF2, 093E20, 09F4FE, 0A08E6, 0BD814, 0CB0F6, 0CBE8C, 0CDEE0, 0CE572, 0CE7B0, 0E64F4, 0F32FC, 1035AC, 103652, 1036F2, 10378A, 103826, 1038B8, 104DF6, 105EF6, 10647E, 113EE8, 119420, 11AC48, 11AFDE, 11B01C, 1218EC, 136248, 1EA04DE: 0B -> 10 (pkmnnamelength)
+ 011688: 0E 49 -> 10 47
  0116C8: 4C 2B 02 02 -> 91 FD E2 09 (jumps (bx) to extra fn at 1E2FD90, then back (jE2FD90, see 03disasm))
		  Implements: allows specifically hardcoded trainer teams (customized EVs, etc)
		  Note: table at 1400000 is the hardcoded teams, add them once full version released
+ 0124EB: 80 -> 60 (store weather as fullword)
+ 014CD8: GetWhoStrikesFirst (+GetSpeedStat, GetPriority, GetAbilityValues) (see 04disasm/04disasm2)
		  Implements: Unburden (effect), Quick Feet, Stall, Klutz (speed items), Slow Start (Speed reduction), Sand Rush, Prankster, Gale Wings [gen 6], Slush Rush, Choice Scarf (speed boost), Lagging Tail, Tailwind (effect), Trick Room (effect), 1/4 -> 1/2 paralysis speed cut, removal of badge 3 bonus
		  Relies on: weather refactor, returns 0 sometimes instead of 1 or 2
		  Glitch?: Stall and Trick Room are in wrong order, Stall goes first in Trick Room (probably doesn't matter in P/D itself)
		  Note: Unburden, Slow Start, Tailwind, and Trick Room can't be tested yet, test after the rest is imported
+ 015910: HandleEndTurn_FinishBattle (see 05disasm)
		  Implements: EVs recalculated per battle
		  Requires in future: extra fn 207370
+ 015CA0: HandleAction_UseMove (+CheckSwitchToSpreadMoveScript, BattleScript_EffectSpreadMove) (see 06disasm)
		  Implements: Storm Drain (redirection), Mold Breaker+ (vs redirection)
+ 01609C: BattleScript_EffectSurf (see movescripts.txt)
		  Implements: Surf targets all mons but user
		  Relies on: moveend refactor
! 016460: 0C 29 1B D8 0B 4A 0C 49 -> 00 00 00 00 0B 4A 97 46
  016494: 74 3D 02 02 -> E0 31 A2 08 (jumps (mov) to fn at A231E0, then back; see 07disasm)
		  Implements: new pokeballs (throw action)
		  Relies on: pokeball ID changes
		  Glitch?: Cherish Ball uses SafariBallThrow (not relevant since it should be unobtainable)
		  GLITCH!: ultra ball stops working, this is definitely an off-by-one error; probably requires something else first
+ 017594: TrySetCantSelectMoveBattleScript (see 08disasm)
		  Implements: Klutz (move restriction items), Choice Specs (locking), Choice Scarf (locking), Assault Vest (move prevention)
		  Relies on: Choice Band effect ID change
+ 0177C8: C8 8D AF 28 0E D1 06 4A F9 00 C8 1B 80 00 80 18 C0 79 00 90 0F E0 -> 08 1C 20 30 00 78 67 28 0C D1 00 20 10 E0 00 00 00 00 00 00 00 00
  0177E8: B4 3E 02 02 -> 00 00 00 00
  01783C, 01785C, 017878, 01790A, 01792A: 20 06 04 0E -> 00 00 00 00
  0178BA: 20 06 04 0E 2F 48 40 44 C0 7C 00 07 00 28 10 D0 10 20 18 40 00 28 0C D0 2F 4A 29 88 48 00 40 18 80 00 80 18 40 78 00 28 03 D1 30 68 04 43 20 06 04 0E -> 00 00 00 00 00 9A 52 2A 05 D0 2D 48 40 44 C0 7C 00 07 00 28 0D D0 10 20 18 40 00 28 09 D0 2D 4A 29 88 0C 20 48 43 80 18 40 78 00 28 01 D1 30 68 04 43
  01791C: 07 -> 05
  017924: 03 -> 01
  017930: 1D 2A 0D D1 01 98 01 88 00 29 09 D0 15 48 81 42 06 D0 2A 88 91 42 03 D0 30 68 04 43 20 06 04 0E -> 44 2A 0D D3 46 2A 0B D8 01 98 01 88 00 29 07 D0 14 48 81 42 04 D0 2A 88 91 42 01 D0 30 68 04 43
		  Implements: Klutz (choice item locking), Choice Specs (locking), Choice Scarf (locking)
		  Relies on: Choice Band effect ID change
+ 017BE0: D4 80 01 08 44 81 01 08 9C 81 01 08 -> 8A 80 01 08 50 81 01 08 E6 81 01 08
  01801C: 48 46 00 28 00 D0 06 E1 62 46 11 68 C8 78 01 30 C8 70 FC E0 -> A0 E7 10 9A 01 12 40 00 3E 10 98 01 12 40 00 3E 00 00 00 00
  018050: Large part of DoFieldEndTurnEffects (+battlescripts) (see 09disasm)
		  Implements: Tailwind (upkeep), Trick Room (upkeep), permahail
		  Relies on: weather refactor; BattleScript_SandStormHailEnds/BattleScript_DamagingWeatherContinues work with sun; params are changed (6 = rain -> tailwind, 7 = sand -> trick room, 8 = sun -> all weather, 9 = hail -> nop)
		  Glitch?: check if tailwind works on both sides, code's weird
		  Note: Tailwind and Trick Room can't be tested yet, test after the rest is imported
		  Note: messages and effects are wrong, need something else
+ 018308: FA 83 01 08 78 84 01 08 C0 84 01 08 40 85 01 08 88 85 01 08 EC 85 01 08 34 86 01 08 -> E2 83 01 08 3A 84 01 08 76 84 01 08 94 85 01 08 D4 85 01 08 1E 86 01 08 58 86 01 08
  018344: E2 83 01 08 -> C6 83 01 08
  01834C: Large part of DoBattlerEndTurnEffects (+unknown battlescript) (see 10disasm)
		  Implements: Heatproof (burn damage), Poison Heal, Magic Guard (end-of-turn status damage), Klutz (the item effects here), Binding Band, Big Root (ingrain), 1/8 -> 1/16 burn damage, 1/16 -> 1/8 wrap damage
		  GLITCH!: Poison Heal still doesn't work, some other change probably needed
+ 0194E0: 16 49 17 4F 38 78 58 26 70 43 0D 1C 4C 35 40 19 00 68 20 21 08 40 00 28 42 D0 2B F0 E5 FC 00 04 00 0C 05 21 CB F1 BE F8 00 04 04 0C 00 2C 23 D0 0C 4A 0D 48 01 88 48 00 40 18 80 00 80 18 00 78 7D 28 00 D1 0F E2 09 49 09 48 08 60 09 4A 10 68 80 21 89 00 08 43 10 60 1E E0 00 00 -> 16 4D 17 4F 38 78 58 26 70 43 40 19 C0 6C 20 21 08 40 00 28 44 D0 2B F0 E7 FC 04 21 CB F1 C2 F8 00 28 29 D0 0F 4A 10 48 01 88 0C 20 48 43 80 18 00 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 7D 28 00 D1 0E E2 08 49 09 48 08 60 09 4A 10 68 80 21 89 00 08 43 10 60 1D E0
  019558: 38 78 02 1C 72 43 52 19 10 68 21 21 49 42 08 40 10 60 FD F7 EB FF 06 49 06 48 08 60 06 48 44 71 -> 3A 78 72 43 52 19 D0 6C 21 21 49 42 08 40 D0 64 FD F7 EC FF 06 49 07 48 08 60 07 49 00 20 48 71
		  Implements: 20% -> 25% thaw chance
+ 019814: Part of AtkCanceller_UnableToUseMove (see 11disasm)
		  Implements: 50% -> 33% confusion hit chance
+ 019DAC: CastformDataTypeChange (+added mysteryfunc, +GetAbilityUserOnSameSide) (see 12disasm)
          Implements: part of weather refactor
+ 01A088: Most of AbilityBattleEffects (see 13disasm)
		  Implements: Stench flinch chance, Lightning Rod boost/immunity, Pressure message, Motor Drive, Anger Point, Unburden (activation), Dry Skin (rain/water healing/immunity), Download, Hydration, Magic Guard (vs contact damage abilities), Klutz (the item effects here), Mold Breaker (message), Mold Breaker+ (vs move-subset immunities/absorbing immunities), Aftermath, Anticipation, Forewarn, Slow Start (upkeep), Storm Drain (boost/immunity), Ice Body, Snow Warning, Frisk, Unnerve (message), Cursed Body, Healer, Weak Armor, Moody, Overcoat (vs powder), Poison Touch, Imposter, Infiltrator (getting affected by hit-reaction abilities when hitting through Substitute), Mummy, Justified, Rattled, Sap Sipper, Iron Barbs, Aroma Veil, Sweet Veil, Gooey, Flower Veil (vs Gooey/Tangling Hair), Bulletproof, Stamina, Water Compaction, Dazzling, Queenly Majesty, Tangling Hair, weather rocks (on abilities), Safety Goggles (vs powder), grass-type powder immunity, dark-type prankster immunity, user affected by hit-reaction abilities when its sound moves hit through Substitute, overworld hail
		  Relies on: weather refactor
		  Requires in future: GetAbilityUserOnSameSide, GetWeatherTurns, CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Note: Check Weak Armor vs Psyshock, might be wrong
		  Note: missing entrance activation messages for Cloud Nine, Turboblaze, Teravolt, Fairy Aura, Dark Aura, Aura Break
		  Note: Research the exact Gen 4 messages for Pressure and Mold Breaker
		  Note: Frisk needs to specify the defender, requires coding
		  Note: Healer msg is wrong
		  Note: check if Unburden has an activation message, if it does it needs to be displayed
		  Note: check how Flower Veil and Gooey interact (message or no?)
		  Note: Imposter needs a separate message
		  Note: Dazzling/QM needs to set the active battler to the mon with that ability, then fix the string to use active battler (otherwise doesn't work for a mon protecting its partner)
		  GLITCH!: Moody will just skip boosting/dropping if it chooses a stat that's at +6/-6, instead of never choosing that stat
+ 01BC68: ItemBattleEffects (+ CheckUnnerve, IsAffectedBySheerForce, GetPinchThreshholdFromParam, GetMoveWithNoPP, GetPartyIndex, CheckAndRunCheekPouch) (see 14disasm)
		  Implements: Magic Guard (Life Orb), Klutz (berries, Amulet Coin, Leftovers, White Herb, Mental Herb, Shell Bell, the item effects here), Sheer Force (Life Orb/Shell Bell glitch), Unnerve (Gen3 berries), modern Sitrus Berry, Black Sludge, Life Orb, status cure items/white herb consumed immediately
		  Requires in future: GetPinchThreshhold (207450), PushScriptInstr (207470)
		  Glitch?: white herb/amulet coin might not work unless unnerve IS active
		  GLITCH!: Magic Guard/Klutz/Sheer Force don't stop Life Orb recoil
		  Note: Life Orb message isn't canon, fix later
+ 01D402: 97 -> FC (makes mew not disobey)
+ 01D760: atk00_attackcanceler (see 15disasm)
		  Implements: Magic Bounce, Protean, Mold Breaker+ (vs Magic Bounce)
		  Glitch: If the Magic Bounce user has Magic Coat, Magic Bounce activating against a Pressure user will deduct 1 PP from Magic Coat
+ 01DC7C: AccuracyCalcHelper (see 16disasm)
		  Implements: No Guard, the following not missing: Toxic from poison-types, Stomp on Minimize, Hurricane in rain, Blizzard in hail, Struggle, Bide (?), Mimic, Pain Split, Lock-On, Foresight, Role Play, Yawn, Imprison (?), Magic Coat (?), Snatch (?), Power Split, Guard Split, Heal Pulse, Bestow
		  Relies on: weather refactor, atk01_accuracycheck (to make room)
+ 01DDC4 -> 01DE30 (repoint): atk01_accuracycheck (see 17disasm)
		  Implements: Keen Eye ignoring evasion, Tangled Feet, Snow Cloak, Klutz (acc/evasion items), Mold Breaker+ (vs acc/evasion), Unaware (acc/evasion), Wonder Skin, Victory Star, Wide Lens, Hurricane acc- in sun, removes some first-battle code
		  Relies on: weather refactor, GetAbilityUserOnSameSide
		  Glitch?: Wonder Skin might not work unless Victory Star is active on the other side
		  Note: This isn't how Wonder Skin actually works; PD implementation lowers them to 60% of their normal accuracy while real games lower them to a flat 50% accuracy
		  Note: Check Hustle accuracy vs Psyshock, might be wrong
+ 01E1D8: Shift entirety of atk02_attackstring down one line to make call to extra func 207790 first (see 18disasm)
		  Implements: Possibly tracks number of times each of player's moves are used?
+ 01E408: atk04_critcalc (see 19disasm)
		  Implements: Klutz (crit boost items), Mold Breaker+ (vs Shell Armor), Super Luck, Frost Breath; removes Poison Tail/Blaze Kick crit+ (now unused)
+ 01E59C: atk05_damagecalc (see 20disasm)
		  Implements: Sniper, 2x -> 1.5x crit damage; removes gBattleScripting.dmgMultiplier, Charge boost, Helping Hand boost (moved to CalculateBaseDamage)
		  Relies on: above being moved to CalculateBaseDamage
+ 01E848: atk06_typecalc (see 21disasm)
		  Implements: Adaptability, Normalize (type change), Klutz (the item effects here), Mold Breaker+ (vs Levitate, Wonder Guard, Filter/Solid Rock), Tinted Lens, Solid Rock, Filter, Scrappy, Aerilate (type change), Pixilate (type change), Refrigerate (type change), Galvanize (type change), Expert Belt, Gems, ice immunity to sheer cold
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), BattleScript_UseGem (e1FD42, j1F552), sHoldEffectToType change
		  Requires in future: HasItemWithTypeEffect, AteAbilityConversionTable (j168CB4)
		  Note: check wonder guard vs canceled se (elec on water/ground, fire on rock/grass)
		  GLITCH!: Mold Breaker on Levitate says that a miss is due to Levitate instead of just a miss
+ 01EDF4: TypeCalc (see 22disasm)
		  Implements: AI checks for: Lightning Rod (immunity), Motor Drive (immunity), Dry Skin (immunity), Adaptability, Normalize (type change), Klutz (the item effects here), Mold Breaker+ (vs Filter/Solid Rock), Tinted Lens, Solid Rock, Filter, Scrappy, Storm Drain (immunity), Unnerve (type-resist berries), Overcoat (vs powder), Sap Sipper (immunity), Aroma Veil, Aerilate (type change), Pixilate (type change), Refrigerate (type change), Bulletproof, Galvanize (type change), Dazzling, Queenly Majesty, Expert Belt, type-resist berries, grass-type powder immunity
		  Requires in future: HasItemWithTypeEffect, RunTypeEffectivenessBasedAbilities (j2076B0), IsMoveBlockedByAbility (251DA0), AteAbilityConversionTable (j168CB4, e178CB4)
		  Glitch?: Solid Rock might be 3/4 to ALL damage, doesn't really matter but AI might get confused
+ 01EFCC: AI_TypeCalc (see 23disasm)
		  Implements: AI checks for: Lightning Rod (immunity), Motor Drive (immunity), Dry Skin (immunity), Storm Drain (immunity), Overcoat (vs powder), Sap Sipper (immunity), Aroma Veil, Bulletproof, Dazzling, Queenly Majesty, grass-type powder immunity
		  Requires in future: IsMoveBlockedByAbility (251DA0)
		  Notes: Of the three, only atk06_typecalc contains the Mold Breaker functionality (besides vs Solid Rock)/Sheer Cold immunity/Gems, only TypeCalc contains the Hidden Power calc/non-Levitate ability immunities/type-resist berries, and AI_TypeCalc doesn't have anything but the immunity abilities (no Mold Breaker even); not sure what this implies
+ 01F104: atk07_adjustnormaldamage (+HasItemWithTypeEffect, GetWeatherTurns) (see 24disasm)
		  Implements: modern Sturdy, Klutz (Focus Band, the item effects here), Mold Breaker+ (vs Sturdy), Unnerve (type-resist berries), Infiltrator (foe can endure when hit through Substitute), Focus Sash, type-resist berries, foe can endure when hit by sound moves through Substitute
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), BattleScript_ConsumeDamageReductionBerry (e1FD34, j1F544), weather refactor (for GetWeatherTurns)
		  Requires in future: ClearFocusBand (j168C88), SetFocusBand (j168C9C), AteAbilityConversionTable (j168CB4)
		  Glitch: Pointer to AteAbilityConversionTable (j168CB4) instead points to j168CA4
		  Note: Check ates vs se berries after ates work
+ 01F2B4 -> 01F394 (repoint): atk08_adjustnormaldamage2 (see 25disasm)
		  Implements: modern Sturdy, Klutz (enduring (Focus) items), Mold Breaker+ (vs Sturdy), Infiltrator (foe can endure when hit through Substitute), Focus Sash, foe can endure when hit by sound moves through Substitute
		  Relies on: atk07_adjustnormaldamage
		  Note: Actually just calls atk07_adjustnormaldamage with gCurrentMove set to 0
+ 01F5A8: atk0B_healthbarupdate (see 26disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute
		  Relies on: atk0C_datahpupdate changes (to make room)
		  Note: Removes 10000 hard damage limit, might break something?
+ 01F684 -> 01F6A0 (repoint): atk0C_datahpupdate (see 27disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute, (0203B950?)
		  Glitch?: special moves might not be set properly (moveType >= 8 when moveType is now a P/S signifier)
+ 01FBA0: atk0F_resultmessage (+ConsumeItem, BattleScript_ConsumeDamageReductionBerry, BattleScript_UseGem) (see 28disasm)
		  Implements: Focus Sash (consumption on use)
		  GLITCH!: removes the hanging-on animation and breaks the message
		  Note: second use of Focus Sash gives broken message
		  Note: Had to implement it anyway since so much depends on ConsumeItem, but come back to this
+ 01FF20: Parts of SetMoveEffect (see 29disasm)
		  Implements: Leaf Guard (vs secondary effects), Mold Breaker (vs Shield Dust), Infiltrator (secondary effects working through Substitute), Sweet Veil (vs secondary effects), Flower Veil (vs secondary-effect status), secondary effects of sound moves working through Substitute
		  Relies on: changes at 0206A2, weather refactor
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
+ 020376: 60 -> 30 (part of weather refactor - sun)
+ 0203E4: (see 29disasm)
		  Implements: electric-type immunity to paralysis secondary effects
+ 020596: 0B 4A 0B 49 0B 78 58 21 4B 43 4C 32 9B 18 03 21 01 40 02 31 18 68 08 43 18 60 16 E0 -> 03 21 A8 F1 FC FB 83 1C 15 E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
		  Implements: max sleep turns 5 -> 4
+ 0206A2: 4B 46 19 78 58 20 41 43 40 46 50 30 09 18 0A 4A F3 78 98 00 80 18 09 68 00 68 01 40 00 29 01 D0 00 F0 13 FD D8 -> 00 00 4B 46 19 78 58 20 48 43 41 46 0B 18 0A 49 F2 78 90 00 40 18 19 6D 00 68 01 40 00 29 01 D0 00 F0 13 FD D0
		  Implements: extension of changes at 01FF20
! 0207A4: ptr 0A 11 02 08 -> 8C 0F 02 08
		  Implements: 50% recoil effect
		  Relies on: changes at 020F78
! 02082C: (see 29disasm)
		  Implements: Mold Breaker+ (vs Inner Focus)
		  Note: decompilation mistake on my end? mold breaker mons would be unable to flinch foe (check once below is fixed)
		  GLITCH!: Flinching stopped working completely, some other change probably needed
+ 0208B8: (see 29disasm)
		  Implements: nothing?
! 020A20: (see 29disasm)
		  Implements: Grip Claw, Klutz (Grip Claw), wrapping moves duration 3-6 -> 5-6, battle messages for Infestation and Magma Storm
		  Note: check if wrap still works (check once glitch is fixed)
		  GLITCH!: Wrap stopped working completely, some other change probably needed
! 020AEC: (see 29disasm)
		  Implements: Modern Struggle
		  Relies on: changes at 020F78
		  GLITCH!: Struggle has 100% HP recoil, some other change probably needed
+ 020B70, 020BF8, 1D968D: ptr D1 6B 1D 08 -> DE 31 02 08
  020BB4, 020C3C: ptr 62 6C 1D 08 -> EF 31 02 08
		  Implements: need more info
		  Requires in future: script_231DE, script_231EF
+ 020F00: (see 29disasm)
		  Implements: Smelling Salts effect now removes all status
		  Relies on: double-damage-on-status effect implementation
! 020F78: (see 29disasm) (last part of SetMoveEffect)
		  Implements: Magic Guard (move recoil)
		  GLITCH!: Rock Head stopped working completely/Magic Guard doesn't work, some other change probably needed
+ 021124: atk15_seteffectwithchance (see 30disasm)
		  Implements: Sheer Force (secondary effect removal)
+ 0212AC: Large part of atk19_tryfaintmon (see 31disasm)
		  Implements: Moxie
= 021640: atk1C_jumpifstatus (see 32disasm)
		  Implements: Makes room for expanded atk1D_jumpifstatus2
		  Requires in future: fn_20EFE_J
! 0216B8 -> 021684 (repoint): atk1D_jumpifstatus2 (+fn_20EFE_J) (see 33disasm)
		  Implements: Infiltrator (vs Substitute), sound moves hitting through Substitute
		  GLITCH!: doesn't do that, instead causes Substitute to not fail when Infiltrator mon has one already???
+ 021730: atk1E_jumpifability (see 34disasm)
		  Implements: Leaf Guard, Flower Veil (vs status)
		  Relies on: weather refactor
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Note: Flower Veil msg is wrong
		  Note: Flower Veil doesn't handle the new freeze-only effect
+ 021818: atk1F_jumpifsideaffecting (see 35disasm)
		  Implements: Infiltrator (vs Safeguard)
		  Note: incorrect message ("but it failed" vs "was protected by Safeguard"), fix later
+ 022FCE: 20 -> 80
  022FD0: 0D D0 -> 06 DA
  022FD4: 04 DC -> 0B DA
  022FE7: D0 -> DA
		  Implements: Correct stat animations for drastically/severely
+ 02301C: atk48_playstatchangeanimation (+BattleScript_FlowerVeilProtects, script_231DE, script_231EF) (see 36disasm)
		  Implements: Mold Breaker+ (vs stat-reduction prevention abilities), Contrary, Big Pecks, Infiltrator (vs Mist), Flower Veil (vs stat reduction)
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
+ 023366, 023BC0, 023BD6, 023BE0, 023BEC: 11 -> 13
  02337C: C4 33 02 08 A0 34 02 08 5C 35 02 08 80 35 02 08 98 35 02 08 C0 35 02 08 E4 35 02 08 8C 36 02 08 02 37 02 08 38 37 02 08 D8 37 02 08 CC 36 02 08 EC 36 02 08 1C 38 02 08 60 38 02 08 40 3A 02 08 28 3B 02 08 B4 3B 02 08 2D 4E 2E 4D 2B 78 58 27 -> CC 33 02 08 44 34 02 08 C0 34 02 08 DC 34 02 08 F8 34 02 08 14 35 02 08 34 35 02 08 E4 35 02 08 4C 36 02 08 02 37 02 08 38 37 02 08 D8 37 02 08 7A 36 02 08 96 36 02 08 AE 36 02 08 1C 38 02 08 60 38 02 08 40 3A 02 08 28 3B 02 08 B4 3B 02 08
  0233C4 -> 0233CC (repoint): Large part of atk49_moveend (see 37disasm)
  023B28: Another part of atk49_moveend (see 37disasm2)
		  Implements: Stench flinch chance, Klutz (choice item locking), Poison Touch, Choice Specs (locking), Choice Scarf (locking), non-hardcoded spread moves
		  Relies on: AbilityBattleEffects/ItemBattleEffects new cases, Choice Band effect ID change, CheckSwitchToSpreadMoveScript (j1588C, e16078), BattleScript_EffectSpreadMove (j158B0, e1609C), rest of moveend refactor
		  Notes: Inert call to ItemBattleEffects (arg 2)?
+ 023E88: atk4B_returnatktoball (see 38disasm)
		  Implements: need more info
		  Requires in future: fn_2058E0
! 023ED8: atk4C_getswitchedmondata (see 39disasm)
		  Implements: need more info
		  GLITCH!: always sends out the third pokemon?
+ 024EC0: 08 1C 21 30 00 78 02 28 5E D0 08 1C 22 30 00 78 02 28 59 D0 08 1C 20 30 00 78 1A 28 54 D0 -> 20 31 48 78 02 28 5F D0 88 78 02 28 5C D0 08 78 1A 28 59 D0 62 28 57 D0 00 00 00 00 00 00
		  Implements: Magic Guard (vs Spikes)
+ 025A0E: 05 -> 06 (+1 max digits for money)
+ 025FE0: atk69_adjustsetdamage (see 40disasm)
		  Implements: for set-damage moves: modern Sturdy, Klutz (enduring (Focus) items), Mold Breaker+ (vs Sturdy), Focus Sash
		  Requires in future: ClearFocusBand (j168C88, e178C88), SetFocusBand (j168C9C, e178C9C)
		  Note: need Sturdy msg ("[PKMN] hung on with Sturdy!")
+ 02615C: atk6A_removeitem (see 41disasm)
		  Implements: Cheek Pouch
		  Relies on: CheckAndRunCheekPouch (j1C5FC, e1CDEC), BattleScript_CheekPouchHeals (j1C728)
		  Requires in future: PushScriptInstr (207470)
+ 027220: atk7A_jumpifnexttargetvalid (see 42disasm)
		  Implements: Telepathy
		  Relies on: GetAbilityUserOnSameSide
+ 0274A8: atk7D_setrain (see 43disasm)
		  Implements: Damp Rock (manual rain), Klutz (Damp Rock manual rain)
		  Relies on: GetWeatherTurns, weather refactor
+ 0274FC: atk7E_setreflect (see 44disasm)
		  Implements: Light Clay (Reflect), Klutz (Light Clay on Reflect)
+ 027688: atk80_manipulatedamage (see 45disasm)
		  Implements: Magic Guard (blocks unknown effect), groundwork for Draining Kiss and modern High Jump Kick, others not known yet
		  Note: script_1D694E loaded but never used
+ 027830: UproarWakeUpCheck (see 46disasm)
		  Implements: Makes room for expanded atk84_jumpifcantmakeasleep
+ 0278CC -> 0278A8 (repoint): atk84_jumpifcantmakeasleep (see 47disasm)
		  Implements: Leaf Guard (sleep), Sweet Veil, Flower Veil (sleep)
		  Relies on: GetAbilityUserOnSameSide, weather refactor
		  Requires in future: CheckLeafGuardAndFlowerVeil (e027E3A, j027612)
		  Note: Leaf Guard doesn't prevent Rest in P/D
		  Note: Flower Veil/Sweet Veil msg is wrong
= 027AE4: atk87_stockpiletohpheal (see 48disasm)
		  Implements: Makes room for expanded atk88_negativedamage
! 027BC8 -> 027B78 (repoint): atk88_negativedamage (see 49disasm)
		  Implements: Magic Guard (vs Liquid Ooze), Big Root (draining moves), Klutz (Big Root on draining moves)
		  Note: something about the above two causes a crash, figure out later
+ 027BFC: ChangeStatBuffs (+CheckLeafGuardAndFlowerVeil) (see 50disasm)
		  Implements: Simple, Mold Breaker+ (vs stat-reduction prevention abilities), Contrary, Big Pecks, Infiltrator (vs Mist), "drastically/severely"
		  Relies on: BattleScript_FlowerVeilProtects (j22A00, e23200)
		  Note: "drastically/severely" strings don't work right, fix later
+ 028190: atk8C_confuseifrepeatingattackends (see 51disasm)
		  Implements: Makes room for expanded atk8D_setmultihitcounter
+ 0281D0 -> 0281C8 (repoint): atk8D_setmultihitcounter (see 52disasm)
		  Implements: Skill Link
+ 02883C: atk92_setlightscreen (see 53disasm)
		  Implements: Light Clay (Light Screen), Klutz (Light Clay on Light Screen)
+ 028908: atk93_tryKO (see 54disasm)
		  Implements: Klutz (enduring (Focus) items vs OHKO moves), Mold Breaker+ (vs Sturdy for OHKO moves), Focus Sash (OHKO moves), Sheer Cold lower accuracy from non-Ice-types
		  Requires in future: ClearFocusBand (j168C88, e178C88), SetFocusBand (j168C9C, e178C9C)
		  Note: Subtracting 0x10 instead of 10 means Sheer Cold is 14% accuracy when used by non-Ice-types, should be 20%, fix later
+ 028C98: atk95_setsandstorm (see 55disasm)
		  Implements: Smooth Rock (manual sand), Klutz (Smooth Rock manual sand)
		  Relies on: GetWeatherTurns, weather refactor
+ 028CF0: atk96_weatherdamage (see 56disasm)
		  Implements: Snow Cloak (hail immunity), Dry Skin (sun HP loss), Solar Power (HP loss), Magic Guard (vs weather damage), Ice Body (hail immunity), Overcoat (vs weather), Sand Rush (sand immunity), Sand Force (sand immunity), Slush Rush (hail immunity), Safety Goggles (vs weather), Klutz (Safety Goggles vs weather)
		  Relies on: weather refactor
		  Note: Test heavily, incomprehensible code
		  Note: Slush Rush doesn't give hail immunity in canon (but it should)
		  GLITCH!: Klutz goes into an infinite loop when damage would be dealt
+ 028E90: atk97_tryinfatuating (see 57disasm)
		  Implements: refactors to include extra param (if set to 1, skip actually infatuating) - makes it usable as a JumpIfCantInfatuate()
		  Relies on: battlescripts change to accomodate above
+ 02975C: B1 -> FF (allows Metronome to select moves up to 0x1FF - Note: there are even more moves than that)
+ 0297E1: 01 -> 03 (allows Metronome to select from up to 0x3FF moves - but only up to 0x1FF can be selected, see above)
+ 029B40: 02 32 -> 04 22
  029B58: CB 7A -> 05 23 (Disable always lasts 4 turns)
+ 029C79: 32 -> 22
  029C90: 8B 7B -> 04 23 (Encore always lasts 3 turns)
+ 02A240: 60 -> 30 (part of weather refactor - sun)
+ 02A3C8 -> 178F08 (repoint; j168F08): atkAA_setdestinybond (see 252disasm)
		  Implements: refactors to include extra param (goto the address if it fails); adds a counter for consecutive uses that works similar to, but independent from, the Protect one
		  Note: this is incorrect behavior, it should just always fail when used consecutively
		  Note: the code as written would cause a game crash, also required changing 6E 75 1D 08 -> 98 8F 17 08
+ 02A566: 8E 1C -> 04 26 (Spite always removes 4 PP)
+ 02B2D4: atkBB_setsunny (see 58disasm)
		  Implements: Heat Rock (manual sun), Klutz (Heat Rock manual sun)
		  Relies on: GetWeatherTurns, weather refactor
+ 02B5F2: 60 -> 30 (part of weather refactor - sun)
+ 02B678: atkC1_hiddenpowercalc (see 59disasm)
		  Implements: Hidden Power = 60 power, Hidden Power Fairy (!)
+ 02B774: atkC2_selectfirstvalidtarget (see 60disasm)
		  Implements: Telepathy
		  Relies on: GetAbilityUserOnSameSide
+ 02BC74: atkC8_sethail (see 61disasm)
		  Implements: Icy Rock (manual hail), Klutz (Icy Rock manual hail)
		  Relies on: GetWeatherTurns, weather refactor
+ 02BFC4: Part of atkD0_settaunt (see 62disasm)
		  Implements: Oblivious Taunt immunity, Taunt 2->3 turns
+ 02C670 -> EB8130 (repoint): atkD9_scaledamagebyhealthratio (see 253disasm)
		  Implements: refactors to include extra param for the mon whose hp it's scaled for (presumably for Wring Out, etc.); also appears to set the groundwork for this formula to work right with a base power of 0 (always 0 damage) for some reason
		  Relies on: battlescripts change to accomodate above
+ 02CCC0: atkE2_switchoutabilities (see 63disasm)
		  Implements: Regenerator
+ 02CD3C: atkE3_jumpifhasnohp (see 64disasm)
		  Implements: Makes room for expanded atkE2_switchoutabilities
+ 02CE48: atkE5_pickup (see 65disasm)
		  Implements: Honey Gather, modern pickup tables
+ 02CFD8: atkE8_settypebasedhalvers (+ uncalled mysteryfunc) (see 66disasm)
		  Implements: Makes room for mysteryfunc
+ 02D0D0: 07 -> 03
  02D0EC: 18 -> 0C
  02D100: 60 -> 30
  02D114: 80 -> C0 (part of weather refactor)
= 02D500, 02D6A0, 02D71C: 68 3D 02 02 -> 00 FE 03 02 (see 67disasm)
		  Implements: Need more info
		  Relies on: changes at 016460; 02D500, etc
= 02D508: Part of atkEF_handleballthrow (+ add part at A23260) (see 67disasm)
		  Implements: Quick Ball (gen 6), Dusk Ball (gen 6), Park Ball, Heal Ball (catch rate), Cherish Ball, Moon Ball, Friend Ball, Heavy Ball, Level Ball, Love Ball, Lure Ball (gen 6), Fast Ball, ensures ball thrown in Safari Zone is Safari Ball
		  Required knowledge: j02023FF8
		  Relies on: 02D500, etc; HandleAction_UseMove changes
		  Note: Fast Ball has manual table (A24300), different for base patch and P/D
		  Note: Check again - Heal Ball currently has secondaryId of 0, making it never work
		  Glitch?: Love Ball is boosted if pkmn are different genders, but "genderless" is counted as a third gender
		  Glitch?: Level Ball might check the level of the second pkmn in player's party
		  Glitch?: Cherish Ball uses the Moon Ball formula (not relevant since it should be unobtainable)
= 02D636: 19 49 -> AF 46
  02D698: E4 3B 02 02 -> 54 AB EE 08 (jumps (mov) to fn at EEAB54, then back; see 67disasm)
  02D764: 28 88 -> AF 46
  02D7B8: 68 3D 02 02 -> 30 AB EE 08 (jumps (mov) to fn at EEAB30, then back; see 67disasm)
		  Implements: critical capture
		  Relies on: 02D500, etc; HandleAction_UseMove changes
! 02EA10: HandleInputChooseMove (see 68disasm)
		  Implements: Removes the "switch which?" text when moving moves in battle with SELECT
= 02EF58: HandleMoveSwitching (see 69disasm)
		  Implements: Need more info
		  Note: merging changes from english and changes from pd is necessary - return to this later
! 030830: MoveSelectionDisplayMoveNames (see 70disasm)
		  Implements: Need more info (possibly displays the type icons in the info box)
		  Relies on: further edits to make it not look garbage
		  Requires in future: fn_1833C0
= 03085A, 04EF5E, 06BE72, 09B4EC, 0BD824, 0BFA7C, 0CC8F8, 0D7630, 0D7ED6, 0D84F6, 0E4DD2, 0E5116, 0E5130, 0E5164, 0E51A2, 0E523E, 10D9B2, 1140B2, 11C590, 11C6C2, 12564C, 1258F4, 1259E2, 125B7E, 125C92, 125FB0, 126036, 1260E8, 1261BC, 12624A, 126798, 12682E, 126E0A, 131DE0: 0D -> 20 (movenamelength)
! 0308B8: A7 F0 80 FF -> 00 00 00 00
		  Implements: Removes "PP" for battle move summary (replaced by functionality in 030830); in JP, also makes "Move Type/" -> "Type/", but that's already true
! 030924: A7 F0 4A FF -> 00 00 00 00
		  Implements: Removes PP numbers for battle move summary (replaced by functionality in 030830)
+ 030991, 0D850B: 1A -> 18 (typenamelength)
! 0309A0: A7 F0 0C FF -> 00 00 00 00
		  Implements: Removes "Type/" + type names for battle move summary (replaced by functionality in 030830)
! 0309CC: MoveSelectionCreateCursorAt (see 71disasm)
		  Implements: Removes move selection cursor (replaced by functionality in 030830)
! 030A14: MoveSelectionDestroyCursorAt (see 71disasm)
		  Implements: Removes move selection cursor (replaced by functionality in 030830)
+ 038744: OpponentHandleChoosePokemon (see 72disasm)
		  Implements: New level of smart AI for switching choice (prioritizes mon with Trick Room if team is slow, prioritizes best Trick Room attacker during Trick Room, prioritizes weather setter when weather runs out, prioritizes mon with best type matchup)
		  Relies on: new AI value
		  Requires in future: GetSideParty (205D8A), GetFirstAllowableSwitchin (205D96), GetBestTrickRoomAttacker (2060FC), GetAvailableWeatherSetter (206164), ChooseBestSwitchinNewAI (2061DC), GetMatchupScore (206292), ShouldUseTrickRoom (206334), IsTeamSlow (2063A4), CanUseNewAI (20649C), GetBestMatchupScore (2066CC), GetTypeMatchup (252248)
+ 03937C: FindMonThatAbsorbsOpponentsMove (see 73disasm)
		  Implements: AI understands new absorbing abilities (Lightning Rod, Motor Drive, Dry Skin, Storm Drain, Sap Sipper)
+ 039A80: ShouldSwitch (see 74disasm)
		  Implements: New level of smart AI for when to switch (switches if: has Regenerator, locked into resisted move, cursed, yawned, has a good Trick Room attacker under Trick Room, weather setter is in battle when weather runs out, weather setter isn't in battle when weather runs out, has a mon that's immune when existing mon might get double-targetted, or has a good stallmon under good stall conditions), locks switching for better type matchups behind the new level of smart AI
		  Relies on: GetSpeedStat (j1456A, e14D4A), new AI value
		  Requires in future: ShouldSwitchIfMightBeDoubleTargeted (205058), CopyMonToBattleMon (205B0C), GetMonThatCanWithstandBiggestAttack (205C80), GetGoodStallMon (205CF6), GetSideParty (205D8A), GetFirstAllowableSwitchin (205D96), CanDoSevereDamage (205E14), IsMonFasterThan (205EE8), ShouldSwitchIfTrickRoom (205F48), ShouldSwitchIfWeatherTeam (205FDE), GetAITarget (2060C0), GetBestTrickRoomAttacker (2060FC), GetAvailableWeatherSetter (206164), GetSlowMonWithLowHP (20621C), IsMoveSuperEffective (206418), CanUseNewAI (20649C), ShouldSwitchIfStallMon (2064C6), HasHealingMove (2065CC), HasDamagingStatusThatWorks (206600), GetBestMatchupScore (2066CC), ShouldSwitch_NewAI (251E40), ShouldSwitchIfLockedMoveOrRegenerator (251E8C), ShouldSwitchIfCurseOrYawn (251FD0)
		  Glitch?: (ShouldSwitchIfWeatherTeam) accidentally checks if it can KO the AI's left slot instead of the player's right
		  Glitch?: (ShouldSwitchIfMightBeDoubleTargeted) checks ITEM_FOCUS_SASH in GetHoldEffectParam, not GetHoldEffect
		  Glitch?: (GetAITarget) in doubles with both mons alive, it does checks on the AI's right slot instead of choosing a random player slot
		  Glitch?: in general, uses raw stats when I assume they meant base stats
+ 03A4E8: Part of ShouldUseItem (see 75disasm)
		  Implements: AI use of X Sp. Def and X Evasiveness
		  Relies on: new table entries for gItemEffectTable
+ 03DD98: CreateMonWithNature (see 76disasm) - more accurately now CreateMonWithRandomNature
		  Implements: Synchronize overworld effect, Cute Charm overworld effect, Shiny Charm, modern shiny chance, var_403E will give 1/X chance of shiny when nonzero
		  Requires in future: GetNature_CheckSynchronize (251B30), fn_251B58, fn_251BA4, CuteCharmOverworldEffect (251CB6), fn_251CF4, fn_3915EC
		  Note: Synchronize doesn't work yet, something else probably needed
! 03E564, 03E73C, 125240: 2F 01 -> FC 00 (PDONLY, changes shedinja index to #252 (empty slot))
= 03E192: Part of GiveBoxMonInitialMoveset (see 77disasm)
		  Implements: Part of gLevelUpLearnsets refactor
= 03EAFE, 03EB2E: 40 -> 80
  03EB52: 40 00 40 18 01 88 0D 48 08 40 -> 80 00 40 18 40 88 00 00 00 00
		  Implements: Part of gLevelUpLearnsets refactor
+ 03ECEC: CalculateBaseDamage (see 78disasm)
		  Implements: modern Plus/Minus, Rivalry, Heatproof (fire moves), Dry Skin (fire moves), Iron Fist, Solar Power (boost), Normalize (boost), Technician, Klutz (damage-boosting items), Mold Breaker (damage-reduction abilities, Unaware), Unaware (atk/def/spa/spd), Slow Start (Attack reduction), Reckless, Flower Gift (stat boosts), Sheer Force (boost), Defeatist, Friend Guard, Multiscale, Toxic Boost, Flare Boost, Analytic, Infiltrator (dual screens), Sand Force, Aura Break, Tough Claws, Mega Launcher, Grass Pelt, Aerilate (boost), Dark Aura, Fur Coat, Fairy Aura, Pixilate (boost), Refrigerate (boost), Strong Jaw, Galvanize (boost), Fairy Wing, Gems (gen 5 boost), Choice Specs (boost), Muscle Band, Wise Glasses, Assault Vest (boost), Eviolite, Life Orb (boost), Wonder Room (effect), P/S split, sandstorm Rock SpDef boost, modern spread reduction
		  Relies on: weather refactor, GetAbilityUserOnSameSide, HasItemWithTypeEffect
		  Requires in future: AteAbilityConversionTable (e178CB4, j168CB4)
! 03FD64: Part of GetBoxMonData (see 79disasm)
		  Implements: nothing???
		  Requires in future: fn_206776, fn_206784
		  GLITCH!: turns everything into bad eggs
= 0400B6: 40 05 04 -> 80 05 44
  0400BE: 5C -> 0B
		  Implements: part of CompressedBoxPokemon refactor (extra bit for pokeball)
= 040855: F8 -> FC
  04085A: 0F -> 1F
  04085E: C9 -> 89
  040862: 79 -> 7D
		  Implements: part of CompressedBoxPokemon refactor
= 040B15: B5 A5 F1 B5 F9 01 BC -> 4B 9F 46 E0 3A A2 08 (jumps (mov) to fn at A23AE0, then back; see 80disasm)
		  Implements: Heal Ball
		  Relies on: 02D500, etc; HandleAction_UseMove changes
= 040B90: SendMonToPC (see 81disasm)
		  Implements: Part of CompressedBoxPokemon refactor, allowing 14->22 boxes
		  Requires in future: CopyMonToBox (j3C5FA0)
= 040FA0: IsPokemonStorageFull (see 82disasm)
		  Implements: Part of CompressedBoxPokemon refactor
+ 0415D0: B0 16 04 08 44 17 04 08 -> 6C 16 04 08 98 16 04 08
  0415F6: 29 48 29 -> 42 48 42
  04160C: 25 -> 3E
  041622: 21 -> 3A
  041636: 1B 49 1C -> 34 49 35
  041668: Part of PokemonUseItemEffects (+fn_41714_E) (see 83disasm)
		  Implements: X Sp. Def, X Evasiveness (effects)
		  Relies on: new table entries for gItemEffectTable
+ 041C46: Part of PokemonUseItemEffects (see 84disasm)
		  Implements: Revive case 0xFC - restores 1/4 HP (new item?)
		  Note: needs testing when item itself implemented
+ 042D50-042DA4: Completely removed (replaced with fn_41714_E)
+ 042DA4: sub_8042DA4 (see 85disasm)
		  Implements: Messages for X Sp. Def and X Evasiveness
		  Relies on: fn_41714_E
+ 042EC4: GetEvolutionTargetSpecies (see 86disasm)
		  Implements: new evolution methods (day/night happiness for FRLG, single-gender levelup, location-based, specific move, specific move type, level during day/night, level during day/night with item, specific mon in party, specific type in party, single-gender stone, trade for specific mon, overworld weather), allows species 0 to have 20 branched evolutions (need more info)
+ 043214: CD 24 64 -> FF 24 A4 (410 -> 1020 maximum pkmn species?)
+ 043304: SpeciesToCryId (see 87disasm)
		  Implements: Allows forbiddenmons to get individual cries
+ 043890: MonGainEVs (see 88disasm)
		  Implements: Power items, EV per-stat limit 255->252
+ 043A70: CheckPartyPokerus (see 89disasm)
		  Implements: reads only last bit of MON_DATA_POKERUS instead of last 4 bits
= 043C84: GetMoveRelearnerMoves (see 90disasm)
		  Implements: max level-up moves 20 -> 24, gLevelUpLearnsets -> ptr at 02021DA0
		  Relies on: 02021DA0 set elsewhere (probably in the move reminder event script)
= 043DEE: 0E 48 84 46 -> 00 00 00 00
  043E02: 1A 88 60 46 10 40 08 80 02 -> 58 88 00 00 00 00 08 80 04
		  Implements: Part of gLevelUpLearnsets refactor
= 043E2C: GetNumberOfRelearnableMoves (see 91disasm)
		  Implements: gLevelUpLearnsets -> ptr at 02021DA0
		  Relies on: 02021DA0 set elsewhere (probably in the move reminder event script)
+ 043FA6: 97 2C 04 D9 -> 00 00 04 E0
		  Implements: species is always valid even before natdex
! 044034: 62 40 04 08 5C 40 04 08 62 40 04 08 62 40 04 08 5C 40 04 08 62 40 04 08 62 40 04 08 54 40 04 08 -> 54 40 04 08 5C 40 04 08 D8 32 85 08 D0 32 85 08 30 8F 8D 08 E0 64 86 08 58 00 74 08 A0 0F 8C 08 (changes table to point to other scripts, see 92disasm)
		  Implements: PDONLY, more trainer music
		  Requires in future: all the pointed-to scripts
+ 04442C: 99 18 88 89 C9 89 88 42 -> 00 49 08 47 D1 EA E2 09 (jumps (bx) to extra fn at 1E2EAD0, then back (jE2EAD0, see 93disasm))
		  Implements: Compound Eyes overworld effect
+ 044EC8: Random (see 94disasm)
		  Implements: New random function (unclear why)
+ 04555C: StorePokemonInEmptyDaycareSlot (see 95disasm)
		  Implements: Part of BuildEggMoveset changes
		  Requires in future: fn_4539C_J (e45DD8)
+ 045704: 09 06 09 0E -> 00 F0 7C FB
		  Implements: Part of BuildEggMoveset changes
		  Requires in future: fn_453C4_J (e45E00)
+ 045AC0: InheritIVs (see 96disasm)
		  Implements: Power item IV inheritance, Destiny Knot IV inheritance
		  Glitch: Power items are checked twice for mother and never for father
		  Note: If IV checking exists, test this
+ 045CA6: 09 -> 31
		  Implements: 10 -> 50 max egg moves per mon
+ 045CC4: 71 04 -> DE 07
		  Implements: increased egg move list size
+ 045CD0: BuildEggMoveset (+fn_4539C_J/fn_45DD8, fn_453C4_J/fn_45E00) (see 97disasm)
		  Implements: either parent passing down egg moves; removes tm/hm inheritance
+ 045FA0: AlterEggSpeciesWithIncenseItem (see 98disasm)
		  Implements: No actual change, but allows new incenses to be added easily (table at j455AE/e45FEA)
+ 046000: DetermineEggSpeciesAndParentSlots (see 99disasm)
		  Implements: Allows NidoranM+ and Volbeat to have female offspring when breeding with Ditto
! 046024, 0460A6, 207304: 84 -> B7 (PDONLY, changes ditto index to #183)
+ 046112: FF F7 DD FD -> C1 F1 ED F8 (changes call to BuildEggMoveset to instead call fn at 2072F0 (this calls BuildEggMoveset inside it anyway), see 101disasm)
		  Implements: modern ability inheritance
+ 046120: 2D 21 FA F7 2B F9 09 48 -> 00 49 08 47 01 89 EE 08 (jumps (bx) to fn at EE8900, then back; see 101disasm)
		  Implements: modern pokeball inheritance
		  GLITCH!: doesn't seem to actually work?
! 046216: 14 1C 2D 04 2D 0C FE F7 54 FE -> 00 48 00 47 01 EA E2 09 00 00 (jumps (bx) to extra fn at 1E2EA00, then back (jE2EA00, see 102disasm))
		  Implements: Everstone nature inheritance
		  GLITCH!: Crashes upon receiving egg; maybe a problem with recompilation
+ 04623E: 05 22 20 23 F7 F7 07 FC -> 01 22 20 23 0B F2 72 FD (instead of calling CreateMon(..., 5, ...), calls CreateMonWithNature_New(..., 1, ...); see 102disasm)
		  Implements: egg hatch level 5 -> 1, Shiny Charm (eggs), modern shiny chance (eggs), var_403E will give 1/X chance of shiny when nonzero (eggs)
		  Requires in future: fn_251B58, fn_251B8C, fn_251BA4, CreateMonWithNature_New (251D2A), fn_3915EC
+ 046390: 01 38 00 90 -> 0B F2 A6 FB (calls new fn at 251AE0, see 103disasm)
		  Implements: Magma Armor/Flame Body overworld effect
		  Glitch?: Magma Armor doesn't work
+ 046CBE: 05 -> 01 (egg hatch level 5 -> 1)
! 046D46: 30 1C 29 1C -> C0 F1 FD FA (calls new fn at 207344, see 104disasm)
		  Implements: needed for modern pokeball inheritance; something involving alt ability
		  GLITCH!: Doesn't fix pokeball inheritance AND randomly makes mon Japanese
+ 046DDA: F9 F7 CF FA -> 00 00 00 00 (needed for modern pokeball inheritance)
= ~048440: Unclear how to translate this to English rom (minidisasm12)
		  Implements: Moves in-battle level/gender display for opponents right by two characters (one in Japanese) to make room for name
= ~0496C0: Unclear how to translate this to English rom (minidisasm13pt2)
		  Implements: name length in the battle boxes (the ones with the HP in them)
! 049718: 1D 28 01 D0 20 28 09 D1 -> 0C E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 in battle)
= ?????? (j48EBA): Unclear how to translate this to English rom (minidisasm13pt3)
		  Implements: Moves name in battle boxes for player mons left by two characters (one in Japanese) to make room
+ 04A2F0: CalcNewBarValue (see 105disasm)
		  Implements: HP and EXP bars go twice as fast
		  Note: Also makes the function not use its toAdd parameter, amount to add is calculated inside the function
+ 04B5AA: 0B -> 1F (max pokeball types 12 -> 32)
+ 04BF24: 0B 2C 01 DC -> 00 00 00 00
		  Implements: Certain gfx aren't loaded for Dive Ball and everything starting at Luxury Ball; this is now fully independent of number of ball types
+ 04C058: SetSaveBlocksPointers (see 106disasm)
		  Implements: nothing, but obfuscates the functionality a bit
+ 04C320: LoadPlayerBag (see 107disasm)
		  Implements: extra bag space
+ 04C440: SavePlayerBag (see 108disasm)
		  Implements: extra bag space
+ ?????? (j4E8A2): Unclear how to translate this to English rom (minidisasm15)
		  Implements: Removes gender symbol somewhere, seems to be removed in english already
! 054A00: 06 -> 04 (PDONLY, moves starting position in new game two tiles north)
+ 054A68: 39 4E 31 68 39 48 80 46 -> 00 48 00 47 51 DF E2 09 (jumps (bx) to extra fn at 1E2DF50, then back (jE2DF50, see 109disasm))
		  Implements: on save-file deletion, clears pd-only save data too
! 055238: 00 04 09 04 03 4A 80 0B 80 18 00 68 89 0B 09 18 -> 00 04 09 04 03 4A 89 0B 80 0B 80 18 00 68 09 18 (does nothing?) (BREAKS ADVANCEMAP!!!)
+ 05550C: sub_805550C (see 110disasm)
		  Implements: no idea what this does (some kind of warp, already prevented in map group 1, is now also prevented in map group 0x2501)
+ 055D6C: sub_8055D6C (see 111disasm)
		  Implements: possibly allows music to be dynamically changed
+ 055F88: music_something (see 112disasm)
		  Implements: Set 0203C00D to 0 when this function is run (???)
+ 059F34: sub_8059F34 (see 113disasm)
		  Implements: Makes room for changes at 059F4C
+ 059F4C: sub_8059F4C (see 113disasm)
		  Implements: Not completely sure, but possibly implements RSE's MetatileBehavior_IsLongGrass() for FRLG
= 05A9BC: 01 28 25 D0 01 28 02 DC 00 28 51 D0 -> 03 28 7E D8 00 4B 18 47 01 31 18 08 (jumps (bx) to extra fn at 183100, then back (see 114disasm))
		  Implements: DrawMetatile(1, ...) and DrawMetatile(2, ...) swapped functionality and there's a new DrawMetatile(3, ...) that uses all available resources at once
		  Relies on: metatileAttributes refactor
+ 05B3E0: player_step (see 115disasm)
		  Implements: Need more info, something about semi-forced steps
		  Requires in future: SoftForceDirection (2074A0)
+ 05B4D4: MovePlayerAvatarUsingKeypadInput (see 116disasm)
		  Implements: Need more info, extra requirement for bike
+ 05B9D4: PlayerNotOnBikeMoving (see 117disasm)
		  Implements: running always-on toggle, something else
		  Note: slows down Surf, which probably uses Mach Bike code but that's elsewhere
+ 05BB5C: 30 1C 01 A9 22 1C 07 F0 -> 00 48 00 47 71 2A 22 08 (jumps (bx) to extra fn at 222A70, then back (see 118disasm))
		  Implements: forced movement for metatiles 0xB0-0xB5
+ 05BCEC: sub_805BCEC (see 119disasm)
		  Implements: Strength boulders able to be moved onto metatile 0x1F
+ 05C104: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 E1 2A 22 08 (jumps (bx) to extra fn at 222AE0, then back (see 120disasm))
		  Implements: player walk animations for metatiles 0xB0-0xB5
! 05C11C: PlayerGoSpeed2 (see 121disasm)
		  Implements: player fast-walk animations for metatiles 0xB0-0xB5
		  Requires in future: GetWalkFastMovementAction_New (2074F0)
		  GLITCH!: crashes when biking on stairs
+ 05C14C: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 D1 2C 22 08 (jumps (bx) to extra fn at 222CD0, then back (see 120disasm mostly))
		  Implements: player fastest-walk animations for metatiles 0xB0-0xB5
+ 05C164: PlayerRun (see 121disasm mostly)
		  Implements: player run animations for metatiles 0xB0-0xB5
		  Requires in future: GetPlayerRunMovementAction_New (207524)
+ 05C17C: 00 B5 00 06 00 0E 07 F0 -> 00 49 08 47 A1 2B 22 08 (jumps (bx) to extra fn at 222BA0, then back (see 120disasm mostly))
		  Implements: player ??? animations for metatiles 0xB0-0xB5 (seems to be FRLG-exclusive)
+ 05C438: PlayCollisionSoundIfNotFacingWarp (see 122disasm)
		  Implements: Need more info
+ 05F2E0: 97 -> FF (152 -> 255 max object graphics ids)
+ 067D44: F1 F7 0A FF -> 1B F1 1C FB (changes call to sub_8059B5C to instead call fn at 183380, see 123disasm)
		  Implements: Not certain, possibly IsSandOrDeepSand; adds metatiles 0xE0 and 0xE2 to whatever check this is
= 06CAC8: sub_806CAC8 (see 124disasm)
		  Implements: multi-registration SELECT menu, something else (possibly two-speed bike)
		  Relies on: CompressedBoxPokemon refactor
		  Requires in future: GetRegisteredItemList, UnregisterItem, fn_183A90_J, fn_EE5000, fn_EE51C0, fn_EE540C, fn_EE543E, fn_EE54D6, fn_EE5510, CompactRegisteredItems (jEE5528), fn_EE561C, fn_EE5654, fn_EE56BC
+ 06D1F0: GetInteractedMetatileScript (see 125disasm)
		  Implements: scripts for metatiles 0xE3 and 0xE4, makes it easier to add more scripted metatiles
		  Requires in future: script_168277E, script_1682787
+ 06DE28: sub_806DE28 (see 126disasm)
		  Implements: Strength boulders disappear when moved onto metatile 0x1F
+ 06DE70: sub_806DE70 (see 127disasm)
		  Implements: Unclear, metatile 0x1F behavior brought closer to that of MB_ICE
+ 06E5C0: GetFlagPointer (see 128disasm)
		  Implements: flags above 0xF000
+ 06F01C: InitStartMenuStep (+ add parts at E9D3D4, E9D48C, E9D4E2) (see 129disasm)
		  Implements: New graphical START menu
		  Requires in future: fn_E9D53C, fn_E9D586
+ 06F280: ProcessMenuInput (+ add part at E9D4A2) (see 130disasm)
		  Implements: Retools START menu into 3x2 grid
		  Requires in future: fn_E9D53C, fn_E9D586
+ 06F4B4 -> 1E9E900 (repoint): StartMenuPlayerNameCallback (see 290disasm)
		  Implements: PokeTab opens if trainer card is selected and certain var is set (data_0203CB27)
		  Relies on: functions from sub_8089088 changes
! 06FEA0: HideStartMenuWindow (see 131disasm)
		  Implements: changes menu close sfx from SE_SELECT to (sound_0x200)
= 06FFBC: sub_806FFBC (see 132disasm)
		  Implements: Need more info
		  Relies on: metatileAttributes refactor
		  Requires in future: fn_939620, fn_9396A8, fn_939728
		  Note: doesn't actually work, something else probably needed
= 07004E: 73 F1 AB FD -> 00 00 00 00
		  Implements: Removes tileset 1 animations (replaced by functionality in 06FFBC)
= 07008A: 73 F1 8D FD -> 00 00 00 00
		  Implements: Removes tileset 2 animations (replaced by functionality in 06FFBC)
! 07049A: 0C 48 03 60 61 7A 03 20 08 40 -> 01 48 87 46 C0 46 20 D3 E9 09 (jumps (mov) to fn at 1E9D320, then back; (jE9D320, see 133disasm))
		  Implements: Something palette-related
		  Note: Currently just makes screen permanently off-white, other changes probably needed
! 070682: 73 F1 6F FA -> 00 00 00 00
		  Implements: Removes something palette-related (replaced by functionality in 07049A)
+ 072B00 -> 11FEFE0 (repoint): ScriptCmd_swapattackerandtarget (see 288disasm)
		  Implements: new animation script command that swaps the attacker and target pointers
+ 072B04 -> 11FEF90 (repoint): ScriptCmd_storeorloadbattlers (see 289disasm)
		  Implements: new animation script command that (arg = 0: stores the battlers then sets the target to the attacker; arg = 1: stores the battlers then sets the attacker to the target; arg = 2: stores the battlers then swaps them; arg = 3: loads the stored battlers)
! 078A6E: F7 F7 BD FC -> 00 00 00 00
		  Implements: never fades in the green palette on title screen (still does if intro skipped), not yet clear what this means
! 078BFC: 00 23 C1 5E 06 48 -> 07 49 08 47 08 BC
  078C1C: 8B 0A 00 00 -> 51 52 38 09 (jumps (bx) to extra fn at 1385250, then back (j385250, see 134disasm))
		  Implements: almost certainly title screen silhouette fading
		  Relies on: graphics changes to make this not look broken
		  Note: one of the graphics points to the middle of an unrelated table for some reason?
! 0791EE: 06 -> FC (PDONLY, title screen cry charizard -> (species252))
+ 079282, 0EC852: C0 0F -> 01 20 (sound will always become stereo when game loaded from title screen)
+ 0793DA: Part of sub_80792C8 (+ add part at 2075E0) (see 135disasm)
		  Implements: title screen animation related, no idea what this did
		  Requires in future: fn_2075E0
+ 07A294: ApplyGammaShift (+ add part at F1C000, +table_F10000) (see 136disasm)
		  Implements: RSE Drought weather capability
! 07ABCC: 80 -> 98 (shifts weather palettes over by +0x30, don't touch yet)
+ 07AC14: LoadDroughtWeatherPalettes (see 137disasm)
		  Implements: RSE Drought weather capability, note it's a bit different than actual RSE code
+ 07FC5C: BattleSetup_GetTerrainId (+table_7AF530) (see 138disasm)
		  Implements: various new metatiles' battle terrain, plus makes it easier to add more
! 080008: 5A -> 53 (PDONLY, "Champion" battle intro happens for trainer class 0x5A -> 0x53)
= 080650: 0D -> 7F
  08066C: 70 06 08 08 -> 40 E0 E2 09 (expands the possible trainer encounter musics from 14 to 128; new switch table at 1E2E040 (jE2E040, currently only 3/14 in FR and 16/128 in PD are used); see minidisasm16)
		  Relies on: new music actually inserted
+ 081C0A: 0E 49 38 7E 00 07 80 0E 04 38 -> 01 49 08 47 00 00 F1 00 E3 09 (jumps (bx) to extra fn at 1E300F0, then back (jE300F0, see 139disasm))
		  Implements: Need more info (trainer sighting)
! 0829FC: sub_80829FC (see 140disasm)
		  Implements: Need more info (something to do with personality values)
		  Relies on: CreateMonWithNature changed params ("CreateMonWithRandomNature")
		  Requires in future: fn_251B58, fn_251BA4, fn_251BBA, fn_251BE4, ForceUnownFormOnPersonality (251C92)
		  GLITCH!: creates missingno instead
+ 0830B8: UpdateRepelCounter (see 141disasm)
		  Implements: new repel system
		  Relies on: VAR_REPEL_STEP_COUNT refactor (repel type is stored in high byte of VAR_REPEL_STEP_COUNT)
		  Requires in future: EventScript_RepelWoreOffUseAnother (e1E2FF90, jE2FF90), fn_1E2FFE0
+ 083119, 0A19A5: 04 -> 06 (part of VAR_REPEL_STEP_COUNT refactor)
+ 0832EC: 00 06 00 0E -> CE F1 E8 FB (calls new fn at j251AC0, see 142disasm)
		  Implements: Unclear, possibly makes water tiles only cause encounters when player is surfing (is there a possibility of standing on water tiles otherwise?)
+ 088B9E: C0 0F -> 01 20 (sound will always become stereo no matter what options menu says)
+ 089088: sub_8089088 (see 143disasm)
		  Implements: If the PokeTab is open, exiting the trainer card returns to the PokeTab
		  Requires in future: fn_1E9E980, fn_1E9EA00 (and all subfunctions: fn_178900, fn_142BE70, fn_1E9EA40, fn_1E9EAA4, fn_1E9EB36, fn_1E9EBB0, fn_1E9EF98, fn_1E9F056, fn_1E9F204, fn_1E9F272, fn_1E9F398, fn_1E9F478, fn_1E9F6F4, fn_1E9F8B0, fn_1E9F92C, fn_1E9F966, fn_1E9FA12, fn_1E9FC04, fn_1E9FC28, fn_1E9FE26, fn_1E9FE5A, AddElementToUnknownList (1E9FE82), SortUnknownListNumerically (1E9FEA8), fn_1E9FED4, fn_1E9FFDC, fn_1EA00EA, fn_1EA0110, fn_1EA0158, fn_1EA0540, fn_1EA05F4, fn_1EA06C6, fn_1EA06E8, fn_1EA0B60)
= 08A006: 06 -> 07
  08A028: 7A -> 72
  08A090: 76 -> 6E
		  Implements: extra money digit on trainer card display
		  Note: unclear if this is the correct way to translate to english rom (see minidisasm17)
		  Note: this is wrong, move it left one tile
! 08B92A: 08 -> 02 (PDONLY, changes trainer card trainer image from palette slot 8 to palette slot 2)
= 08BA06, 08C808, 08C82C, 08C844, 08CC26, 08CC60, 08D476, 08D4B2, 08DED4, 090E12, 09170E, 0935D2: 0D -> 16 (part of CompressedBoxPokemon refactor)
= 08BA18: GetBoxMonDataFromAnyBox (see 144disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), SetBoxMonDataToCompressedBoxMonData (j3C5DC2), GetCompressedBoxMonData (j3C5DDE), GetCompressedBoxMonFromBox (j3C5F84)
= 08BA5C: SetBoxMonDataFromAnyBox (see 145disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), GetCompressedBoxMonFromBox (j3C5F84), CopyMonToBox (j3C5FA0)
= 08BB2C: SetBoxMonNickFromAnyBox (see 146disasm)
		  Implements: Part of CompressedBoxPokemon refactor, pkmnnamelength
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BB6C: GetAndCopyBoxMonDataFromAnyBox (see 147disasm)
		  Implements: Part of CompressedBoxPokemon refactor, pkmnnamelength
		  Requires in future: GetCompressedBoxMonData (j3C5DDE), GetCompressedBoxMonFromBox (j3C5F84)
= 08BBB4: CopyBoxMonFromAnyBox (see 148disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: CopyMonToBox (j3C5FA0)
= 08BCB4: ClearMonInBox (see 149disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BCF0: sub_808BCF0 (see 150disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20), GetCompressedBoxMonFromBox (j3C5F84)
= 08BD30: GetBoxedMonPtr (see 151disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 08BD6C: GetBoxNamePtr (see 152disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08BD94: sub_808BD94 (see 153disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08BDBC: SetBoxWallpaper (see 154disasm)
		  Implements: Part of CompressedBoxPokemon refactor, no longer limited to 16 wallpapers
= 08BDE8: sub_808BDE8 (see 155disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08C0D4: CountMonsInBox (see 156disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 08C108: GetFirstFreeBoxSpot (see 157disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
+ 08C95C: sub_808C95C (see 158disasm)
		  Implements: Eliminates the delay on something in the PC (can't figure out what it is even after implementing it)
+ 08C9C4: sub_808C9C4 (+ add part at EEA2C0) (see 159disasm)
		  Implements: background for box summary images for Jump option (creation)
+ 08CBA4: sub_808CBA4 (see 160disasm)
		  Implements: background for box summary images for Jump option (deletion)
+ 08CC74: sub_808CC74 (+ add part at EEA33C) (see 161disasm)
		  Implements: Box summary images for Jump option
		  Requires in future: EEA4E2, GetStringLength (EEA53E), EEA554
		  Note: box 14 -> box 1 transition is bugged because there are going to be more boxes later
		  Note: text is a bit misaligned, fix later
		  GLITCH: afterwards, menus become slightly glitched
+ 08E8D8: 88 42 5B DB 15 28 59 DC -> 00 4A 10 47 6F A4 E2 09 (jumps (bx) to extra fn at 1E2A46E, then back (jE2A46E, see 162disasm))
  08E958: 05 20 E3 F7 B7 FC 01 F0 -> 00 48 00 47 B9 A4 E2 09 (jumps (bx) to extra fn at 1E2A4B8, then back (jE2A4B8, see 162disasm))
		  Implements: adds extra menus to wallpaper categories
+ 08F4CC, 08F550: 06 -> 08 (moves PC pokemon names text to the right slightly, unclear why)
+ 08F4E4, 08F566: 02 -> 00 (changes PC summary font size (to leave space for extra characters))
+ 08FD34: 00 B5 05 F0 37 F8 12 20 -> 00 48 00 47 01 A4 E2 09 (jumps (bx) to extra fn at 1E2A400, then back (jE2A400, see 163disasm))
		  Implements: Adds "special" wallpaper category option on menu
+ 08FD68: 01 2C 16 D0 01 2C 02 DC -> 00 48 00 47 33 A4 E2 09 (jumps (bx) to extra fn at 1E2A432, then back (jE2A432, see 164disasm))
		  Implements: Adds extra menu for "special" wallpapers
		  Note: The wallpapers are, in order: "Best Pals", "Four Beasts", "Machu", "Hatenazemi" (?), and "Retro"
= 08FE54: sub_808FE54 (see 165disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 0900D4: sub_80900D4 (see 166disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (if mon is egg, species is treated as 0x19C instead of actual species)
		  Note: it's possible that eggs have 0x19C stored in species2 anyway, which would mean the "need more info" part doesn't change anything
= 0901EC: sub_80901EC (see 167disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (egg -> 0x19C)
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84), fn_3C62B0_J
		  Note: see previous note
= 0903A4: sub_80903A4 (see 168disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 090794: sub_8090794 (see 169disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (egg -> 0x19C)
		  Note: see previous note
= 090D62, 092D5E, 092E96, 092F0A, 092F12, 092F6A, 092FDE, 09303A, 093062, 093128, 09323C, 093306, 093476, 09366E: 0E -> 17 (part of CompressedBoxPokemon refactor)
+ 091AF0: 81 18 -> 11 1C
  091AFE: 80 18 -> 10 1C
  091D4A, 091F16, 091F3C: 40 18 -> 08 1C
		  Implements: allows more than 16 box wallpapers by ignoring a pointless table
= 092458: sub_8092458 (see 170disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 093878: sub_8093878 (see 171disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 093A10: sub_8093A10 (see 172disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: CopyMonForBoxViewing (j3C6170)
+ 093DE8: 1D 2A 01 D0 20 2A 01 D1 -> 04 E0 00 00 00 00 00 00 (no idea what this did - removes cases 0x1D and 0x20 from data_020397B0->0xCE0)
+ 094A68: 11 20 00 F0 BF F9 -> 00 00 00 00 00 00 (removes Info from menu when selecting a Pokemon in Move Items mode)
= 0956A4: sub_80956A4 (see 173disasm)
		  Implements: Part of CompressedBoxPokemon refactor, need more info (egg -> 0x19C)
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84), fn_3C62B0_J
		  Note: see previous egg -> 0x19C note
= 09572C: sub_809572C (see 174disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 0957C8: sub_80957C8 (see 175disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 09596C: 05 21 AA F7 E9 F9 -> 80 8C 00 00 00 00 (part of CompressedBoxPokemon refactor)
= 0959A8: sub_80959A8 (see 176disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 095ABC: sub_8095ABC (see 177disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095C84: sub_8095C84 (see 178disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095D84: sub_8095D84 (see 179disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095EA0: sub_8095EA0 (see 180disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 095F74: sub_8095F74 (see 181disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: GetCompressedBoxMonFromBox (j3C5F84)
= 098758: AddItemIconObject (see 182disasm)
		  Implements: TM/HM item icon graphics are produced dynamically based on the type of the move
		  Requires in future: GetTMHMIcon (j2519E4), GetTMHMPalette (j2519EA)
		  Note: english rom has a separate graphics loader at sub_8098974, might want to rewrite that instead)
= 099E44: SetBagItemsPointers (see 183disasm)
		  Implements: extra bag space
		  Relies on: technically nothing, but breaks existing save files
+ 09A540: SwapRegisteredBike (+GetRegisteredItemList, UnregisterItem) (+mysteryfuncs) (see 184disasm)
		  Implements: removes unused code to make room for mysteryfuncs
+ 09A8AA: BB -> D8 (max items 374 -> 432)
+ 09A900: ItemId_GetPrice (see 185disasm)
		  Implements: the price in-game is now the price stored in the data times ten, this allows items up to 10x more expensive than previous maximum
		  Relies on: every price in item data divided by 10
+ 09B3B4: 02 -> 01 (changes letter spacing of some printer in a shop menu, unsure what this did; jp changes line spacing 2->1 and x 4->0 as well, which is already done in en)
+ 09B3D0, 10864C, 10DA14, 13D428: 77 -> B0 (change to new final item for back icon)
+ 09B41E: 08 04 -> 20 47
  09B488: D0 1C 02 02 -> 91 E0 D7 09 (jumps (bx) to extra fn at 1D7E090, then back (jD7E090, see 186disasm))
		  Implements: Show already-obtained TMs as price "-----"
+ 09B428, 09BC4A, 09BD26: 09 04 09 0C -> 00 00 00 00 (don't cap prices at 65536)
! 09B430, 09B440: 04 -> 06 (extra 2 digits for prices, this doesn't work right now (cutoff))
+ 09B718: 98 -> 90 (move the red arrows for item quantity left one tile (why?))
+ 09B868: 01 -> 02
  09B86E: 02 DC -> 2F D0
		  Implements: switches cases metatileLayerType = 1 and metatileLayerType = 2 for BuyMenuDrawMapMetatile (no idea what this did)
+ 09BB68: 36 -> 2E (move some sort of printer in a shop menu left?, test; in jp it's 0x26 -> 0x1E)
+ 09BC7E: 20 1C -> 08 47
  09BC94: D0 1C 02 02 -> 51 DF D7 09 (jumps (bx) to extra fn at 1D7DF50, then back (jD7DF50, see 187disasm))
		  Implements: prevents buying duplicate TMs
		  Note: eventually, change "[ITEM]? That will be $[MONEY]. OK?" to "No. [NUM], [MOVE]? That will be $[MONEY]. OK?"
+ 09BDB6, 09C106: 00 04 00 0C -> 00 00 00 00 (don't cap prices at 65536)
+ 09BEA4 -> 178FB0 (repoint; j168FB0): BuyMenuTryMakePurchase (see 291disasm)
		  Implements: Premier ball bonus
+ 09BF46: A0 00 -> 08 47
  09BF60: 90 50 00 03 -> 31 E0 D7 09 (jumps (bx) to extra fn at 1D7E030, then back (jD7E030, see 188disasm))
		  Implements: refreshes price display after TM bought
= 09F914: sub_809F914 (see 189disasm)
		  Implements: pkmnnamelength (nicknaming screen), something else
		  Note: This is very different in en vs jp, should try to find the naming screen templates and change those
+ 09FDD4: 3F 42 0F -> 7F 96 98 (max money 999999 -> 9999999)
= ?????? (j9FD30): 08 -> 00 (unclear how to translate to english rom since this fn doesn't exist; moves the money display in the money box left one tile)
+ 09FEE8: 06 -> 08 (extra 2 digits for money)
+ 09FFB8: DrawMoneyBox (see 190disasm)
		  Implements: makes money display one tile wider and changes base block from 8 to 5 (latter has unknown effect)
! 0A011C: ScriptGiveMon (see 191disasm)
		  Implements: does nothing by itself, but carries over any changes to CreateScriptedWildMon to giftmons too
		  GLITCH!: either this or CreateScriptedWildMon cause bad eggs, unsure which so temporarily removed both
! 0A029C: CreateScriptedWildMon (see 192disasm)
		  Implements: does nothing by itself, but carries over any changes to sub_80829FC to scripted encounters too
+ 0A19E8: sub_80A19E8 (see 193disasm)
		  Implements: part of VAR_REPEL_STEP_COUNT refactor
+ 0A1A5A: 67 F0 B5 F9 -> 00 00 00 00
  0A1A68: 66 F0 C4 FF -> 00 00 00 00
		  Implements: need more info (appears to remove functions that delete blank bag slots when an item is used up, probably reimplemented elsewhere)
		  Note: this doesn't actually do anything apparently
+ 0B3834: sub_80B3834 (see 194disasm)
		  Implements: In an unknown animation routine only used by Skill Swap in vanilla, allows gBattleAnimArgs[1] to choose between 3 options for the sprite/palette tags (gBattleAnimArgs[1] = 0 is the standard one); new Skill Swap animation
		  Relies on: Move_Skill_Swap
		  Requires in future: fn_168A10, fn_168AC0
+ 0B565C: 00 -> 01 (set Shadow Ball sprite.data[0] to 1 instead of 0; no idea what this did)
+ 0BC128, 0F171C: 6E -> 6C (set gBattleAnimTarget to gBattlerTarget instead of gEffectBattler; these unknown animation routines are called by the item steal animation)
+ 0BD3C8: 01 A9 2A 1C A6 F7 28 FB -> 00 48 00 47 61 2C 22 08 (jumps (bx) to extra fn at 222C60, then back (see 195disasm))
		  Implements: forced movement for metatiles 0xB0-0xB5 (on bike)
+ 0BF1E4: ptr 34 E2 41 08 -> DC 42 FE 08 (Mail "From " -> "")
+ 0BFC7C: 13 -> 15 (heal locations 20 -> 22)
+ 0BFCB6: 14 -> 16 (heal locations 20 -> 22)
! 0BFD74: 08 -> 07
  0BFDEC: 07 -> 0B
  0BFDF0: 04 -> 0D
		  Implements: PDONLY, some respawn locations after blackout are repositioned
+ 0C35DC: get_flagnr_blue_points (see 196disasm)
		  Implements: makes it easier to add new fly points
! 0C369A: FF FF FF FF FF FF -> 9B 08 FF FF 9C 08 (PDONLY, adds fly points for region map sections 7B (checks flag 0x89B) and 7C (checks flag 0x89C))
+ 0C3878: sub_80C3878 (see 197disasm)
		  Implements: makes it easier to add new town map points of interest
! 0C3D40: GetPlayerPositionOnRegionMap_HandleOverrides (see 198disasm)
		  Implements: PDONLY; makes it easier to add new custom town map areas (and changes them), this also removes the ability to set them for a specific map within a section
+ 0C6DA0: BattleAI_SetupAIData (see 199disasm)
		  Implements: instead of 7 (previous "smartest" AI), the flags are set to the current value of 0203BFF4
+ 0C7038: BattleAI_DoAIProcessing (see 200disasm)
		  Implements: New level of smart AI for when to switch (switches if it's weak to opponents and opponents aren't weak to it)
		  Requires in future: AI_CleanupSmartSwitching (j205910), AISetup_SmartSwitching (205940), GetOpponentMatchupScore (205A84), CopyMonToBattleMon (205B0C), GetMatchupScore (206292), CanUseNewAI (20649C), GetBestMatchupScore (2066CC)
		  Note: doesn't actually switch, that must be elsewhere
+ 0C71D0: RecordAbilityBattle (see 201disasm)
		  Implements: records abilities in a separate gRecordedAbilities array instead of in gBattleResources->battleHistory
		  Relies on: BattleAICmd_check_ability changes
+ 0C82D0 -> 1830C0 (repoint): BattleAICmd_nullsub_2A (see 254disasm)
		  Implements: new battle ai script command (BattleAICmd_if_bits_set); jumps if the given bits in funcResult are set
+ 0C82D4 -> 1832D0 (repoint): BattleAICmd_nullsub_2B (see 255disasm)
		  Implements: new battle ai script command (BattleAICmd_if_bits_not_set); jumps if the given bits in funcResult are not set
+ 0C841C: BattleAICmd_check_ability (see 202disasm)
		  Implements: reads abilities from a separate gRecordedAbilities array instead of from gBattleResources->battleHistory
		  Relies on: RecordAbilityBattle changes
+ 0C86F0 -> 183200 (repoint): BattleAICmd_nullsub_32 (see 256disasm)
		  Implements: new battle ai script command (BattleAICmd_is_same_type); checks if attacker is same type as target and stores answer in funcResult - set param to 1 if attacker is single-typed
		  Glitch?: param = 1 seems to be intended to check if user and target share any types, it doesn't do that (may be decompilation error?)
+ 0C86F4 -> j183290 (repoint): BattleAICmd_nullsub_33 (see 257disasm)
		  Implements: new battle ai script command (BattleAICmd_get_move_attribute); gets the given byte of the move in funcResult and stores it in funcResult
+ 0C8886: 07 -> 03
  0C889A: 18 -> 0C
  0C88AE: 60 -> 30
  0C88C2: 80 -> C0
		  Implements: part of weather refactor
+ 0C8C38: 5A -> 32 (the AI's if_cant_faint check now considers 0BP and 1BP moves always unable to KO, instead of always able to KO)
+ 0C8EBC: BattleAICmd_if_has_move_with_effect (see 203disasm)
		  Implements: Fixes a bug where the function would always consider opponents to have the specified move effect
		  Note: it removes the null check for moves, which shouldn't actually matter; also it still doesn't fix the bug where it checks the user's moves instead of the opponents'
+ 0C8FB0: BattleAICmd_if_doesnt_have_move_with_effect (see 204disasm)
		  Implements: Fixes a bug where the function would always consider opponents to have the specified move effect
+ 0C9518 -> 178CC8 (repoint; j168CC8): BattleAICmd_nullsub_52 (see 258disasm)
		  Implements: new battle ai script command (BattleAICmd_get_considered_move_target_type); gets the target type (single, all foes, field, etc.) of the considered move and stores it in funcResult
+ 0C951C -> 178CF4 (repoint; j168CF4): BattleAICmd_nullsub_53 (see 259disasm)
		  Implements: new battle ai script command (BattleAICmd_get_considered_move_category); gets the category (physical, special, status) of the considered move and stores it in funcResult
+ 0C9520 -> 178D20 (repoint; j168D20): BattleAICmd_nullsub_54 (see 260disasm)
		  Implements: new battle ai script command (BattleAICmd_get_considered_move_extra_flags); gets the extra flags (sound, powder, punch, etc.) of the considered move and stores them in funcResult
+ 0C9528 -> 11FC000 (repoint): BattleAICmd_nullsub_56 (see 261disasm)
		  Implements: new battle ai script command (BattleAICmd_exec); executes the given ASM function then continues running the AI script
+ 0C952C -> 183190 (repoint): BattleAICmd_nullsub_57 (see 262disasm)
		  Implements: new battle ai script command (BattleAICmd_if_tailwind_timer_not_equal); jumps if the given side's tailwind timer is a given value
+ 0C97FC: oei_task_add (see 205disasm)
		  Implements: option to not execute task08_080C9820, need more info
+ 0C9820 -> 0C981C (repoint): task08_080C9820 (see 206disasm)
		  Implements: makes room for oei_task_add changes
		  Relies on: oei_task_add changes (makes room for these changes)
+ 0CA424: GetPokedexRatingText (see 207disasm)
		  Implements: dex ratings now scale to regional dex of 386, eventmons aren't skipped
= 0CBFE0: ChangeBoxPokemonNickname (see 208disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
= 0CC7F8: sub_80CC7F8 (see 209disasm)
		  Implements: Part of CompressedBoxPokemon refactor
+ 0CE90D, 126C2D: D1 -> E0 (natdex no longer required for post-151 evolutions)
+ 0D75FC, 0D7E96, 0D7EAE: B1 20 40 00 -> FF 20 80 00 (max moves 354 -> 1020)
+ 0D77BC: 08 D9 03 49 FF 20 08 70 0D E0 00 00 81 01 00 00 8C 29 02 02 -> 08 D3 03 49 30 1A 08 E0 00 00 00 00 82 01 00 00 00 00 08 09
		  Implements: if the string number is greater than the total strings (386), read from the expanded string table instead (1080000), giving an additional 208 strings for a total of 594 (603 in english due to jumping the gun on modernization)
= 0D7FF2, 0D8610, 136714, FE5214: 0D -> 20 (abilitynamelength)
! 0D814A: 5A -> 59 (PDONLY, trainer class 5A no longer takes the rival's name)
= 0D991E: CA 19 -> 38 47
  0D995C: F6 0F 00 00 -> A1 4E A2 08 (jumps (bx) to extra fn at A24EA0, then back (see 210disasm))
		  Implements: saves all the extra data into the extra blank space at the end of save blocks
		  Required knowledge: j0203C0C8, j0203C320, j0203CEC0
		  Note: check the sizes of the saves in english, might no longer have enough space
= 0D9BFE: 0F 4A 89 18 08 80 0E 48 01 68 -> 01 4A 97 46 00 00 80 72 20 08 (jumps (mov) to extra fn at 207280, then back (see 211disasm))
		  Implements: saves all the extra data into the extra blank space at the end of save blocks
		  Required knowledge: j0203C0C8, j0203C320, j0203CEC0
		  Note: check the sizes of the saves in english, might no longer have enough space
= 0D9EDC: 28 04 05 0C 0D 2D C5 D9 -> 00 48 00 47 41 4E A2 08 (jumps (bx) to extra fn at A24E40, then back (see 212disasm))
		  Implements: loads all the extra data from the extra blank space at the end of save blocks
		  Required knowledge: j0203C0C8, j0203C320, j0203CEC0
		  Note: check the sizes of the saves in english, might no longer have enough space
= 0E47F0: 6C 0A -> ?? ?? (size to allocate for some struct???, jp 0x9F0 -> 0xB80)
= 0E5116: 8D 24 64 00 -> 9F 24 24 01
  0E5168: 8D 27 7F 00 -> 9F 27 3F 01
  0E5242: 8D 23 5B 00 -> 9F 23 1B 01
		  Implements: (jp 0x11A -> 0x9F0 start index???)
+ 0E5340: sub_80E5340 (see 213disasm)
		  Implements: adds category icon to the move reminder summary screen, other minor adjustments to that screen
		  Relies on: data_1D7DC7C
! 0E5444: sub_80E5444 (see 214disasm)
		  Implements: instead of TYPE/POWER/PP/ACCURACY/EFFECT on the move reminder summary screen, shows 3 (not yet known) graphics
		  Relies on: graphics actually inserted
! 0E54C0: sub_80E54C0 (see 215disasm)
		  Implements: need more info (adds extra window and extra (???) when cancel is highlighted on the move reminder summary screen)
		  Relies on: graphics actually inserted
+ 0EB330: 31 -> 30
  0EB342: 32 -> 30
  0EB354: 33 -> 31
  0EB378: 35 -> 32
  0EB38A: 36 -> 33
  0EB3AE: 39 -> 35
  0EB3C0: 3A -> 36
  0EB3D2: 3B -> 37
  0EB3F6: 3D -> 39
  0EB490: 83 -> 84
  0EB4F4: 3A 08 00 00 3B 08 00 00 3C 08 00 00 3D 08 00 00 35 08 00 00 36 08 00 00 38 08 00 00 39 08 00 00 31 08 00 00 32 08 00 00 33 08 00 00 34 08 00 00 -> 
		  32 00 00 00 3C 04 00 00 37 04 00 00 3A 00 00 00 36 00 00 00 3B 00 00 00 3D 00 00 00 3E 00 00 00 40 08 00 00 40 08 00 00 3F 00 00 00 41 00 00 00
		  Implements: changes the tilemap for oak's dialogue boxes in the intro battle
		  Relies on: graphic itself actually changed
+ 0EF208: 06 -> 01 (on level-up, instead of the border of the hp box flashing blue, the text does)
+ 0EF258, 0EF294: 74 -> 86 (on level-up, instead of the hp box text flashing whitish-blue, it flashes sky blue)
= 0EF4B4, 0EF4DC, 0EF674, 0EF9AC, 0F0368: 68 3D 02 02 -> 00 FE 03 02
		  Implements: correct parameters for new ItemIdToBallId
		  Requires in future: ItemIdToBallId changes
= 0EF52C: ItemIdToBallId (see 216disasm)
		  Implements: correct ids for rearranged pokeballs
		  Relies on: all calls to ItemIdToBallId to use correct parameters
+ 0EF972, 0F02D6: 14 DC -> 00 00 (no longer limited to 12 types of pokeballs)
+ 0EFD2A: 0D 68 -> 08 47
  0EFD4C: 18 40 02 02 -> 01 AB EE 08 (jumps (bx) to extra fn at EEAB00, then back (see 217disasm))
		  Implements: critical capture animation
! 0F11F2: 0B -> 1F (max pokeball types 12 -> 32)
		  GLITCH!: breaks battle animations, some other change probably needed
+ 0F1D14: AnimTask_GetTrappedMoveAnimId (see 218disasm)
		  Implements: end-of-turn animations for Infestation and Magma Storm will show up
		  Relies on: actual animations being implemented
= 0F3270: 09 -> 0B (pkmnnamelength)
		  Note: might actually run into issues, looks like jp hof might have extra space just in case western mons are transferred, en hof obviously doesn't
! 0F3310: 20 28 01 D0 1D 28 07 D1 -> 0A E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 in hall of fame)
+ 0F7328: A0 -> A1
  0F7394: 01 02 00 00 02 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 09 02 00 00 0A 02 00 00 0B 02 00 00 0D 02 00 00 0A 0A 00 00 0B 0A 00 00 0C 0A 00 00 0D 0A 00 00 05 0A 00 00 06 0A 00 00 08 0A 00 00 09 0A 00 00 01 0A 00 00 02 0A 00 00 03 0A 00 00 04 0A 00 00 -> 00 02 00 00 00 02 00 00 01 02 00 00 02 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 07 02 00 00 09 02 00 00 02 02 00 00 0C 06 00 00 07 06 00 00 0A 02 00 00 06 02 00 00 0B 02 00 00 0D 02 00 00 0E 02 00 00 10 0A 00 00 10 0A 00 00 0F 02 00 00 11 02 00 00
		  Implements: changes the tilemap for overworld dialog boxes
		  Relies on: graphic itself actually changed
+ 0F75B8: A0 -> A1
  0F7630: 01 02 00 00 02 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 09 02 00 00 0A 02 00 00 0B 02 00 00 0D 02 00 00 05 0A 00 00 06 0A 00 00 08 0A 00 00 09 0A 00 00 0A 0A 00 00 0B 0A 00 00 0C 0A 00 00 0D 0A 00 00 01 0A 00 00 02 0A 00 00 03 0A 00 00 04 0A 00 00 -> 00 02 00 00 01 02 00 00 00 02 00 00 02 02 00 00 08 06 00 00 03 02 00 00 05 02 00 00 06 02 00 00 07 02 00 00 02 02 00 00 08 06 00 00 08 02 00 00 03 02 00 00 05 02 00 00 06 02 00 00 0A 02 00 00 07 02 00 00 10 0A 00 00 0D 02 00 00 10 0A 00 00 0E 02 00 00
		  Implements: changes the tilemap for overworld sign messages
		  Relies on: graphic itself actually changed
+ 1025EC: C1 -> C2 (allocate 16 more bytes for ?????? (pokedex screen))
! 1028B8: D0 29 10 08 -> D8 2B 10 08 (opening the pokedex opens the pokedex list - do later)
! 102B50: 01 F0 2E FE -> 00 00 00 00
  102B58: 01 F0 2A FE -> 00 00 00 00
  102B60: 01 F0 26 FE -> 00 00 00 00
		  Implements: don't remove three windows (pokedex screen)
		  Note: currently just breaks things (probably running out of memory)
! 102C28: sub_8102C28 (see 219disasm)
		  Implements: for one specific function (pokedex main screen?): change a tile type, always use natdex, and replace the TABLE OF CONTENTS text with a POKEDEX logo
		  Requires in future: fn_3C7C00, CopyBytes (3C7C40), fn_3C7C4E
		  Relies on: palette rework to make this not look broken
+ 102FFE: 00 F0 C3 FC -> 12 F3 CF F8 (changes call to sub_8103988 to instead call fn at 4151A0, which just adds a call to fn_3C7400 after; see 220disasm)
		  Implements: clears all sprites from memory, something else (need more info)
		  Requires in future: fn_3C7418
! 103024, 1032E4, 103BD0: 7D 28 10 08 -> 01 7A 3C 08 (instead of setting callback to sub_810287C, set it to fn at 3C7A00, which is just sub_807249C followed by CB2_ReturnToFieldWithOpenMenu (sub_80568A8)) (see miniraw28pe)
		  Implements: Closing the Pokedex list closes the Pokedex - do later
+ 103028: 00 F0 A8 F8 -> 12 F3 C0 F8 (changes call to sub_810317C to instead call fn at 4151AC, which just adds a call to fn_4151F2 after; see 221disasm)
		  Implements: loads some mon's front pic, need more info - needed for 222/223disasm
		  Requires in future: <222/223pe>, fn_4152D4
! 103084: 04 F0 26 F9 -> 12 F3 9E F8 (changes call to ListMenuGetScrollAndRow to instead call fn at 4151C4, which just adds a call to fn_4151D2 after; see 222disasm)
		  Implements: need more info (displays some stuff)
		  Requires in future: fn_1690E0, fn_3C6FD0, fn_3C74B0, fn_3C7660, fn_3C76A4, fn_3C76C0, fn_3C7800, fn_3C7868, fn_3C7884, fn_3C7D90, fn_4154F0, fn_41553E, fn_41563C, fn_415714, fn_4159E0, fn_415A54
		  GLITCH!: game crash
! 10309E: 03 F0 EB FF -> 12 F3 1F F8 (changes call to ListMenuHandleInputGetItemId to instead call fn at 4150E0, see 223disasm)
		  Implements: changes pokedex list to be 4 entries wide instead of vertical, adds ability to hold R to skip to top/bottom of dex, some other stuff (need more info)
		  Requires in future: fn_1690E0, fn_3C6FD0, fn_3C74B0, fn_3C7660, fn_3C76A4, fn_3C76C0, fn_3C7700, fn_3C7800, fn_3C7868, fn_3C7884, fn_3C7D90, fn_415262, fn_4152D4, fn_4154F0, fn_41553E, fn_41563C, fn_415714, fn_4159E0, fn_415A54
		  GLITCH!: game crash
! 10317C: sub_810317C (seee 224disasm)
		  Implements: adds a POKEDEX logo to the top of the main list
		  Relies on: layout and palette rework to make this not look broken
		  Requires in future: fn_3C7350, fn_3C7C00, fn_416970
+ 103350: 00 F0 4E FB -> 00 00 00 00 (remove scroll indicator from search screen)
+ 10345C: sub_810345C (see 225disasm)
		  Implements: on pokedex search screen, replace the SEARCH text with a POKEDEX logo
		  Requires in future: fn_3C7C00
+ 103550: 68 35 10 08 -> 74 38 10 08 (regional and national lists are now identical)
+ 103940: C2 8E 83 8E -> 11 F3 AE FD (add call to fn at 4154A0, see 226disasm)
		  Implements: something to do with 4-entries-wide dex listing (no idea what)
+ 1039F0: sub_81039F0 (see 227disasm)
		  Implements: something to do with 4-entries-wide dex listing (no idea what)
		  Note: Currently just prevents down arrow on dex list from disappearing
! 103A64: 00 F0 E6 FF -> 00 00 00 00 (removes numbers from dex list)
! 103A78: 04 F0 76 F9 -> 00 00 00 00
  103A98: 04 F0 66 F9 -> 00 00 00 00
  103AB2: 04 F0 59 F9 -> 00 00 00 00
		  Implements: removes caught icon and types from dex list
+ 1043A2: 01 F0 3B FD -> 10 F3 09 FF (changes call to sub_8105E1C to instead call fn at 4151B8, which just adds a call to fn_3C7400 after; see 220disasm)
		  Implements: clears all sprites from memory, something else (need more info)
		  Requires in future: fn_3C7418
+ 10457A: 01 68 -> 87 46
  10458C: F0 AC 03 02 -> 40 B4 EE 08 (jumps (mov) to extra fn at EEB440, then back (see 228disasm))
		  Implements: cleans up extra data display from sub_810603C
		  Relies on: sub_810603C
+ 1045E0: 01 68 -> 87 46
  1045E8: F0 AC 03 02 -> 48 B4 EE 08 (jumps (mov) to extra fn at EEB448, then back (see 229disasm))
  		  Implements: cleans up extra data display from sub_810603C
		  Relies on: sub_810603C
+ 104E06: 02 -> 00 (changes font on habitat listing cards (to leave space for extra characters))
! 104F5E: FF 21 FF F6 7C FA -> 33 21 C2 F2 4E FE (changes call to FillWindowPixelBuffer(0, 0xFF) to instead call fn_3C7C00(0, 0x33))
		  Implements: adds a POKEDEX logo to the top of the habitat listing page
		  Relies on: layout and palette rework to make this not look broken
		  Note: parameters passed to fn_3C7C00 are unused
! 105E1C: sub_8105E1C (see 230disasm)
		  Implements: adds a POKEDEX logo to the top of the pokemon info page 1
		  Relies on: layout and palette rework to make this not look broken
+ 10611E: Part of sub_810603C (see 231disasm)
		  Implements: displays egg groups and wild hold items in pokedex list
+ 1063D0: FE F7 FA F9 -> 00 00 00 00 (removes "Area" label on pokedex detail screen 2)
+ 106490: 02 -> 00 (changes font for names on pokedex detail screen 2 (to leave space for extra characters))
+ 106531: D1 -> 00 (remove size comparison graphic on pokedex detail screen)
! 10676A: FD F6 77 FE -> C1 F2 49 FA (changes call to FillWindowPixelBuffer to instead call fn at 3C7C00)
		  Implements: adds a POKEDEX logo to the top of the pokemon info page 2
		  Relies on: layout and palette rework to make this not look broken
+ 106CC2: FF 20 FE F7 C8 F9 -> 00 00 00 00 00 00
  106D0C: 05 -> 07
  106DB8: 57 E0 -> 00 00
  106DC4: 09 20 4F E0 -> 0A 20 0A E0
  106DE2: 05 28 14 D8 -> 00 28 14 D0
		  Implements: removes initial zoom when new mon registered in pokedex (fades directly to dex entry, not showing habitat listing)
+ 1071AE: 00 F0 F1 F9 -> 00 00 00 00 (don't draw cursor on list menu refresh, this doesn't seem to actually do anything?)
+ 1083F8: AC 20 40 00 -> 8E 20 80 00 (allocate 224 more bytes for ?????? (item menu))
= 108420: 31 03 -> ?? ?? (size to allocate for some struct???, jp 0x285 -> 0x429)
+ ?????? (j108FD6): 01 -> 00 (changes the letter spacing in the item menu, but this is already done in english)
= 108654: sub_8108654 (see 232disasm)
		  Implements: something involving the new multiple SELECT items feature
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList
+ ?????? (j10936E): 04 -> 00 (moves some printer left four units, this is already done in english - might cause problems if it needs to move left anyway)
+ 108924: 98 -> 88 (supposedly moves scroll arrows left in item menu, not sure what it really does)
= 109890: sub_8109890 (see 233disasm)
		  Implements: something involving the new multiple SELECT items feature
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList
		  Note: merging changes from english and changes from pd is necessary - return to this later
= 10A000: ItemMenu_Register (see 234disasm)
		  Implements: register multiple items with SELECT
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList, UnregisterItem
+ 10A6BC, 10A7EA, 10A8A2, 10A982, 10AA14, 1329E8, 132B0E, 132C00, 132CE6, 132D76, 13E508, 13E626, 13E6D0, 13E7A2, 13E832: 00 04 40 0C -> 00 00 40 08 (store money as 32-bit integer instead of 16-bit)
+ 10A6CA, 10A990, 1329F6, 132CF4, 13E516, 13E7B0: 06 -> 08 (extra 2 digits for money in sell screen)
= 10AD10: UseRegisteredKeyItemOnField (see 235disasm)
		  Implements: something involving the new multiple SELECT items feature
		  Relies on: CompressedBoxPokemon refactor, GetRegisteredItemList
= 10CCD8: 92 02 -> 94 08
  10CCE0: 96 -> AC
  10CCE8: 97 -> AD
  10CCF0: 2C -> A3
  10CD10: 44 -> 2C
		  Implements: changes which flags enable certain rematches (old: 0x292, 0x896, 0x897, 0x82C, 0x844)
		  Relies on: use of flags 0x894, 0x8AC, 0x8AD, 0x8A3, 0x82C
= 10CF90: GetRunningBehaviorFromGraphicsId (see 236disasm)
		  Implements: gives trainers with graphics ids 0x10, 0x26, 0x2F, 0x36, and 0x9D rematch hop behavior 0x4E; reverts trainers with graphics ids 0x27 and 0x28 to the standard rematch hop behavior (0x4D); makes it easier to give more trainers custom rematch hop behaviors
		  Relies on: new overworld NPC sprites
		  Requires in future: data_508000_J
+ ?????? (j10E3BA): 01 -> 00 (changes the letter spacing in the pc item menu, but this is already done in english)
+ ?????? (j10E4D0): 04 -> 00 (moves some printer left four units, this is already done in english - might cause problems if it needs to move left anyway)
+ 10EEB6: 01 -> 00
  10EEDE: 02 -> 00
  10EEFE: 03 -> 01
  10EF4A: 05 -> 02
  10EF68: 06 -> 03
  10EFA4: 09 -> 05
  10EFC2: 0A -> 06
  10EFE8: 0B -> 07
  10F024: 0D -> 09
  10F15E: 80 -> 81
  10F230: 0A 08 00 00 0B 08 00 00 0C 08 00 00 0D 08 00 00 05 08 00 00 06 08 00 00 08 08 00 00 09 08 00 00 01 08 00 00 02 08 00 00 03 08 00 00 04 08 00 00 ->
		  02 00 00 00 0C 04 00 00 07 04 00 00 0A 00 00 00 06 00 00 00 0B 00 00 00 0D 00 00 00 0E 00 00 00 10 08 00 00 10 08 00 00 0F 00 00 00 11 00 00 00
		  Implements: changes the tilemap for the save confirmation textbox, probably others
		  Relies on: graphic itself actually changed
+ 110F54: 00 28 0F D0 -> 00 0C 0F E0 (disable quest log)
= 111438: sub_8111438 (see 237disasm)
		  Implements: Part of CompressedBoxPokemon refactor
= 11164C: sub_811164C (see 238disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Glitch?: misplacement of counter declaration means it returns the number of empty slots in the final box, not the full PC as intended
+ 1140D6, 11411A: 0xA9 -> 0x90 (the HM notification in quest log now happens on TMs as well)
		  Glitch?: probably should be the other way around (HM never, TM always); doesn't matter since quest log is now disabled
! 115216: 5A -> 59 (PDONLY, trainer class 5A no longer takes the rival's name in quest log)
= 11C6C0, 11D0D6: 84 -> ?? (changes placement of the move name in some data structure, jp 0x7F -> 0xE0; makes room for longer names)
		  Note: minidisasm20 has all info known about data structure; according to that, might have to change placement of move name at 0x77 in english too)
! 11F0FC: 01 60 03 2D 0A D1 01 63 0B E0 00 00 -> 0F E0 0E D0 03 2D 0C D0 01 62 07 E0
  11F920: 00 2D 00 D0 01 61 -> 01 63 01 64 01 65
		  Implements: removes special size for first mon in party on menu screen
		  Relies on: graphics rework to make this not look broken
! 11FFA6: 00 28 08 D1 -> 02 28 08 DA
		  Implements: makes the selection cursor in double battles work like in single battles
		  Relies on: layout rework to make this not look broken
! 11FFF0: sub_811FFF0 (see 239disasm)
		  Implements: rearranges which button press moves the selection cursor on the party menu which way (single battles)
		  Relies on: layout rework to make this not look broken
! 1200F8: sub_81200F8 (see 240disasm)
		  Implements: rearranges which button press moves the selection cursor on the party menu which way (double battles)
		  Relies on: layout rework to make this not look broken
+ 1206A8: sub_81206A8 (see 241disasm)
		  Implements: vastly speeds up HP restoration on party menu
! 121364, 121374, 12138C: 0A -> 0F
  121366: 07 -> 04
		  Implements: changes dimensions of first mon party menu background rectangle from 80x56 px to 120x32 px
		  Relies on: graphics rework to make this not look broken
! 1213C8, 1213D8, 1213F0: 12 -> 0E
  1213CA: 03 -> 05
		  Implements: changes dimensions of non-first mon party menu background rectangle from 144x24 px to 112x40 px
		  Relies on: graphics rework to make this not look broken
! 121412, 12141A: 12 -> 0E
  121416: 03 -> 05
		  Implements: changes dimensions of empty party menu rectangle graphic from 144x24 px to 112x40 px
		  Relies on: graphics rework to make this not look broken
! 1218E4: 20 2C 01 D0 1D 2C 09 D1 -> 0C E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 in party menu)
! 122E96: 14 -> 2E
  122EDA: 0A 28 06 D1 01 22 52 42 10 1C 03 E0 00 00 B4 B0 03 02 -> 01 20 02 40 01 2A 04 D0 40 42 03 E0 00 00 00 00 00 00
  122F3E: 0A 28 08 D1 01 22 52 42 10 1C -> 01 20 02 40 01 2A 06 D0 40 42
		  Implements: changes the way mons slide around during party position switching
		  Relies on: layout rework to make this not look broken
! 1232B6: 4A 80 08 1C 00 88 21 28 50 D9 10 04 00 0C 21 28 4C D9 -> 30 8B 01 30 30 83 12 28 50 D9 00 20 30 83 00 00 00 00
		  Implements: unknown what this actually does, right now it stops mons from going fully offscreen during party position switching
		  Relies on: layout rework to make this not look broken
+ 124EA0, 124F6C, 125C74: A9 -> 90 (reusable TMs)
! 12FB38, 130F4C: 1D -> 20
  130FA0: 94 51 23 08 F4 73 23 08 -> AC 51 23 08 0C 74 23 08
		  Implements: PDONLY, oak pokemon #29 -> #32
+ 131E68: sub_8131E68 (see 242disasm)
		  Implements: removes displayed quantity of TMs because they're infinite
! 131E9A: 08 -> 06
		  Implements: moves "HM" logo left 2 pixels, this doesn't work right now (cutoff)
+ 132070: 98 -> 88 (supposedly moves scroll arrows left in tm case, not sure what it really does)
+ 1326B8: 00 28 17 D1 -> 00 00 17 E0
  13288A, 1328DA: 00 28 0E D1 -> 00 00 0E E0
		  Implements: TMs can't be held
+ 132926: 1F D1 -> 00 00 (TMs can't be sold)
! 133408: 13 -> 18
  133414: 14 -> 19
  133420: 15 -> 1A
  13342C: 16 -> 1B
		  Implements: changes graphics for "TYPE"/"POWER"/"ACCURACY"/"PP" in TM case
		  Relies on: graphics actually inserted
+ 1334D0: 01 -> 02 (2 base power now displays as "---" (TM case), why?)
+ 1338AE: 88 -> 90 (allocates 32 more bytes for ?????? (TM case))
+ 134C92: 0F -> 00 (remove something on summary screen, no idea what)
+ 134F4A: 1E 24 00 94 02 25 -> 00 24 00 94 00 25 (remove something on summary screen, no idea what)
+ 134F5E: 0F -> 00 (remove something on summary screen, no idea what)
! 1354F2: 10 32 -> 29 3A 
		  Implements: move HP bar on summary screen left (when scrolling into it from the left)
		  Relies on: layout rework to make this not look broken
+ 1356B0: 01 -> 00 (no idea what this does)
+ 1360F7: D1 -> E0 (display all dex numbers on summary screen even before natdex)
! 136238: 20 2C 01 D0 1D 2C 11 D1 -> 14 E0 00 00 00 00 00 00 (PDONLY, restores gender markers for pokemon #29 and #32 on summary screen)
! 1363C0, 13654E, 136586, 1365BC, 1365F2, 136628, 136666, 1366D8, 1369F4, 136A18: 09 18 49 00 -> 49 00 09 18
  13666A: 3F -> 3E
  1369F8: 0C -> 0B
		  Implements: move all the numbers on the summary screen stat page right (jp 9 -> 8, en 6 -> 5 something (maybe make it 6 -> 2 something; it would then be 09 18 49 00 -> 00 00 00 00 / 3F -> 3B / 0C -> 08))
		  Relies on: layout rework to make this not look broken
! 13679C: BC -> B8 (jp 90 -> 8C)
		  Implements: moves the ability name left 4 characters
		  Relies on: layout rework to make this not look broken
+ 1367A4, 137C8C: CC -> C9 (jp 98 -> 95) (one of these moves the ability description left, the other one moves it right; result is no change at all?)
= 136828, 137362: 0D -> 11 (movenamelength)
! 136890, 1373B0: 28 -> 20 (jp 18 -> 10)
		  Implements: moves the move names on the summary screen in some way
		  Relies on: layout rework to make this not look broken
+ 136D50: 87 20 -> A0 00 (REG_OFFSET_WIN1V = 0x2087 -> 0x00A0; no idea what this does)
! 136EB2: 28 -> 20 (jp 32 -> 2A) 
		  Implements: moves nickname on summary screen left
		  Relies on: layout rework to make this not look broken
+ 136EE0, 136F20: 69 -> 6C (move gender symbol on summary screen right)
! 136FD0: 2F 22 13 23 -> 35 22 11 23 (jp 1A 22 11 23 -> 20 22 10 23)
		  Implements: move species name on summary screen up/right
		  Relies on: layout rework to make this not look broken
! 136FF2: 2F -> 35 (jp 1A -> 20)
  137004: 05 -> 01 (jp 04 -> 00)
		  Implements: move dex number on summary screen up/right
		  Relies on: layout rework to make this not look broken
! 13701E: 2F 22 31 23 -> 35 22 36 23 (jp 1A 22 2B 23 -> 20 22 30 23)
		  Implements: move OT name on summary screen down/right
		  Relies on: layout rework to make this not look broken
! 13703A: 2F 22 40 23 -> 35 22 48 23 (jp 1A 22 38 23 -> 20 22 40 23)
		  Implements: move OT ID number on summary screen down/right
		  Relies on: layout rework to make this not look broken
! 137056: 2F 22 4F 23 -> AB 22 40 23 (jp 04 22 50 23 -> 80 22 41 23)
		  Implements: move held item name on summary screen up/right
		  Relies on: layout rework to make this not look broken
		  Note: seems like it went so far right it's offscreen?
! 1370C2: 07 22 2D 23 -> 03 22 25 23 (jp 04 22 27 23 -> 00 22 1F 23)
		  Implements: move egg state summary up/right
		  Relies on: layout rework to make this not look broken
! 13710A: 0E -> 48
  137122: 04 -> 44
		  Implements: move HP values on summary screen down/right
		  Relies on: layout rework to make this not look broken
		  Note: seems like it went so far right it's offscreen?
! 137132: 11 68 0A 79 32 32 12 06 -> 00 49 08 47 71 DD E2 09 (jumps (bx) to extra fn at 1E2DD70, then back (jE2DD70, see 243disasm))
		  Implements: move Attack value on summary screen left and color it according to nature
		  GLITCH!: game crash
! 137148: 16 -> 01 
		  Implements: move Attack value on summary screen up
		  Relies on: layout rework to make this not look broken
! 137158: 11 68 8A 79 32 32 12 06 12 0E -> 00 00 00 49 08 47 C7 DD E2 09 (jumps (bx) to extra fn at 1E2DDC6, then back (jE2DDC6, see 243disasm))
		  Implements: move Defense value on summary screen left and color it according to nature
		  GLITCH!: game crash
! 13716E: 23 -> 11 
		  Implements: move Defense value on summary screen up
		  Relies on: layout rework to make this not look broken
! 13717E: 11 68 0A 7A 32 32 12 06 -> 00 49 08 47 15 DE E2 09 (jumps (bx) to extra fn at 1E2DE14, then back (jE2DE14, see 243disasm))
		  Implements: move Sp. Atk value on summary screen left and color it according to nature
		  GLITCH!: game crash
! 137194: 30 -> 21 
		  Implements: move Sp. Atk value on summary screen up
		  Relies on: layout rework to make this not look broken
! 1371A4: 11 68 8A 7A 32 32 12 06 12 0E -> 00 00 00 49 08 47 63 DE E2 09 (jumps (bx) to extra fn at 1E2DE62, then back (jE2DE62, see 243disasm))
		  Implements: move Sp. Def value on summary screen left and color it according to nature
		  GLITCH!: game crash
! 1371BA: 3D -> 31
		  Implements: move Sp. Def value on summary screen up
		  Relies on: layout rework to make this not look broken
! 1371CA: 11 68 0A 7B 32 32 12 06 -> 00 49 08 47 B1 DE E2 09 (jumps (bx) to extra fn at 1E2DEB0, then back (jE2DEB0, see 243disasm))
		  Implements: move Speed value on summary screen left and color it according to nature
		  GLITCH!: game crash
! 1371E0: 4A -> 41
		  Implements: move Speed value on summary screen up
		  Relies on: layout rework to make this not look broken
! 1371F0: 11 68 8A 7B 0F 32 12 06 12 0E -> 00 00 00 49 08 47 FE DE E2 09 (jumps (bx) to extra fn at 1E2DEFE, then back (jE2DEFE, see 243disasm))
  137206: 57 -> 50
		  Implements: move something on summary screen up/right, TEST
		  GLITCH!: game crash
! 13721A: 0F -> 78
  13722C: 64 -> 5C
		  Implements: move exp to next level on summary screen up/right
		  Relies on: layout rework to make this not look broken
		  Note: seems like it went so far right it's offscreen?
+ 13736E: 02 21 03 22 -> 01 21 00 22
		  Implements: move move names on summary screen left
		  Note: in jp this changes the font, but fonts 1 and 2 seem to be identical in en
! 13741E: 24 -> 1C (jp 16 -> 0E)
  13743A: 2E -> 28 (jp 20 -> 1A)
  137454: 02 -> 01
  13747C: 02 21 3A 22 -> 01 21 32 22 (jp 02 21 32 22 -> 01 21 2A 22)
  13749A: 40 -> 37 (jp 3B -> 32)
  1374AC: 02 -> 01
		  Implements: move PP values on summary screen left
		  Relies on: layout rework to make this not look broken
		  Note: in jp this changes the font, but fonts 1 and 2 seem to be identical in en
+ 1375B0, 13775C: 05 -> 01 (default mon met level 5 -> 1)
! 137AB6: 07 -> 00
  137AD0: 14 -> 0C
		  Implements: move "Exp. Points" and "Next Lv." labels on summary screen up
		  Relies on: layout rework to make this not look broken
		  Note: jp has a third one, 24 -> 1C, that doesn't exist in en
+ ??????: 90 -> 8C (j1382D0; this doesn't exist at all in en)
! 137B3C: 02 21 39 22 01 23 -> 00 21 37 22 16 23 (jp 02 21 32 22 01 23 -> 00 21 30 22 16 23)
		  Implements: move move power value on summary screen down/left and change font
		  Relies on: layout rework to make this not look broken
! 137B60: 02 21 39 22 0F 23 -> 00 21 37 22 26 23 (jp 02 21 32 22 0F 23 -> 00 21 30 22 26 23)
		  Implements: move accuracy value on summary screen down/left and change font
		  Relies on: layout rework to make this not look broken
! 137B96: 07 22 2A 23 -> 06 22 3A 23 (jp 05 22 27 23 -> 04 22 37 23)
		  Implements: move move description on summary screen down/left
		  Relies on: layout rework to make this not look broken
+ 137CD0: A0 -> F0 (no idea what this does)
! 137FBA: AC -> 73
  137FC6: 98 42 00 DA -> 00 00 00 00
		  Implements: move HP bar on summary screen left (when scrolling into it from the right)
		  Relies on: layout rework to make this not look broken
+ 13802A, 138048, 138090, 1380B0: 49 42 -> 00 00 (no idea what this does)
! 138582, 138678, 13873E, 13888A: B5 -> EA
  138598, 13868E, 138752, 13889E: BD -> F2
  138668, 1387D8: 6B -> D2
  13866C, 1387DC: 7B -> E2
  1386E8: 5B -> D0
  1386EC, 1387E0, 138920: C5 -> E9
  138702, 1387FC, 13893C: CD -> F1
  138A28: 8B -> D4
  138A2C: 9B -> E4
		  Implements: change tilemap of indicator tabs on the top of summary screen
		  Relies on: graphic itself actually changed
! 138590, 1385A4, 138686, 13869A, 1386FA, 13870E, 1387F4, 13880C, 138934, 13894C: 0D -> 10
  1385DC, 1385F0, 13874A, 13875E, 13884C, 13885E, 13898C, 13899E: 0F -> 12
  138626, 138638, 138794, 1387A6, 138896, 1388AA, 1389D8, 1389EA: 11 -> 14
		  Implements: move indicator tabs on the top of summary screen right
		  Relies on: layout rework to make this not look broken
! 1385AC: 2C 49 00 94 01 94 02 97 03 20 0E 22 00 23 C9 F6 CB FF 29 49 00 94 01 94 02 97 03 20 0E 22 01 23 C9 F6 C2 FF -> all zero
  13860A: 1D 49 00 94 01 94 02 97 03 20 10 22 00 23 C9 F6 A5 FF 1A 49 00 94 01 94 02 97 03 20 10 22 01 23 C9 F6 9C FF -> all zero
  138640: B7 21 49 00 00 94 01 94 02 97 03 20 12 22 00 23 C9 F6 80 FF -> all zero
  1386A2: 0F 49 00 94 01 94 02 97 03 20 0E 22 00 23 C9 F6 50 FF 0B 49 00 94 01 94 02 97 03 20 0E 22 01 23 C9 F6 47 FF 08 49 04 20 00 90 02 20 01 90 02 97 03 20 0F 22 00 23 C9 F6 3C FF -> all zero
  138716: AD 21 49 00 00 97 01 97 02 94 03 20 0E 22 00 23 C9 F6 15 FF B6 21 49 00 00 97 01 97 02 94 03 20 0E 22 01 23 C9 F6 0B FF -> all zero
  138766: 1A 49 00 97 01 97 02 94 03 20 10 22 00 23 C9 F6 EE FE 16 49 00 97 01 97 02 94 03 20 10 22 01 23 C9 F6 E5 FE -> all zero
  1387AE: B7 21 49 00 00 97 01 97 02 94 03 20 12 22 00 23 C9 F6 C9 FE -> all zero
  138814: AD 20 40 00 80 46 00 94 01 94 02 95 03 20 41 46 0E 22 00 23 C9 F6 94 FE B6 26 76 00 00 94 01 94 02 95 03 20 31 1C 0E 22 01 23 C9 F6 89 FE -> all zero
  138866: 00 94 01 94 02 95 03 20 41 46 10 22 00 23 C9 F6 6E FE 00 94 01 94 02 95 03 20 31 1C 10 22 01 23 C9 F6 65 FE -> all zero
  1388B2: 09 49 00 94 01 94 02 95 03 20 12 22 00 23 C9 F6 48 FE -> all zero
  1388CC: 03 20 12 22 01 23 C9 F6 3F FE -> all zero
  1388EA: AD 21 49 00 04 26 00 96 01 25 01 95 00 24 02 94 03 20 0D 22 00 23 C9 F6 28 FE -> all zero
  138954: AD 20 40 00 80 46 00 94 01 94 02 95 03 20 41 46 0E 22 00 23 C9 F6 F4 FD B6 26 76 00 00 94 01 94 02 95 03 20 31 1C 0E 22 01 23 C9 F6 E9 FD -> all zero
  1389A6: 00 94 01 94 02 95 03 20 41 46 10 22 00 23 C9 F6 CE FD 00 94 01 94 02 95 03 20 31 1C 10 22 01 23 C9 F6 C5 FD -> all zero
  1389F2: 0F 49 00 94 01 94 02 95 03 20 12 22 00 23 C9 F6 A8 FD 0B 49 00 94 01 94 02 95 03 20 12 22 01 23 -> all zero
		  Implements: change the functionality of the tabs on the top of summary screen somehow, this will probably make sense given other changes
		  Relies on: layout rework to make this not look broken
! 138A80: 2F 22 23 23 -> 37 22 26 23 (jp 1A 22 1E 23 -> 22 22 21 23)
  138AA4: 53 22 23 23 -> 5B 22 26 23 (jp 3E 22 1E 23 -> 46 22 21 23)
  		  Implements: move type icons on summary screen down/right
		  Relies on: layout rework to make this not look broken
! 138ADA: 00 22 03 23 -> 0B 22 02 23
  138AFC: 24 22 03 23 -> 2F 22 02 23
		  Implements: move pokemon type icons on move summary screen up/right
		  Relies on: layout rework to make this not look broken
= 138B8C: sub_8138B8C (see 244disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
+ 13917E: 52 18 -> 0A 43 (guessing it fixes a bug in the move-reordering function, but can't identify what the bug was)
= 1391EC: sub_81391EC (see 245disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
= 139328: sub_8139328 (see 246disasm)
		  Implements: Part of CompressedBoxPokemon refactor
		  Requires in future: DecompressBoxMon (j3C5D20)
+ 1396D2: 07 22 2A 23 -> 06 22 3A 23 (jp 05 22 27 23 -> 04 22 37 23) (move something on summary screen down/left, no idea what)
! 1399AC, 1399F8, 139A24: 3C -> D0
  1399B0, 1399FC, 139A28: 41 -> 38
		  Implements: move pokemon sprite on summary screen up/right
		  Relies on: layout rework to make this not look broken
+ 139A6A, 139EC6: 01 70 -> 00 00 (don't flip pokemon sprites in summary screen)
+ 139CC0: 0A D1 -> 00 00 (pokeball on summary screen is always taken from mon data, ignoring unknown case (TEST on egg once pokeball inheritance works))
! 139CF4: 6A 21 58 22 -> 98 21 28 22
		  Implements: move pokeball on summary screen up/right
		  Relies on: layout rework to make this not look broken
! 139E5C: 18 -> E0
		  Implements: move pokemon icon on summary screen right
		  Relies on: layout rework to make this not look broken
! 13A028: 98 -> 20
		  Implements: move move selection cursor on summary screen left
		  Relies on: layout rework to make this not look broken
! 13A124: sub_813A124 (see 247disasm)
		  Implements: changes the move cursor to be on the second summary screen and makes it blink
		  Relies on: layout rework to make this not look broken
		  Requires in future: fn_1D7DEC0
! 13A42E: 10 -> BA
  13A434: 2D -> 20
  13A44C: 10 -> 9A
  13A452: 26 -> 1C
		  Implements: move status icon on summary screen up/right
		  Relies on: layout rework to make this not look broken
! 13A57E: 24 -> 59
		  Implements: move HP bar on summary screen down
		  Relies on: layout rework to make this not look broken
+ 13AC24: 72 21 5C 22 -> A4 21 24 22 (move something on summary screen up/right, no idea what)
+ 13AD98: 72 -> A4
  13AD9E: 5C -> 24
		  Implements: no idea what this does
! 13AF26: 08 -> AC
  13AF2C: 18 -> 24
  13AF40: 6A -> AC
  13AF46: 28 -> 24
		  Implements: move shiny star on summary screen down/right
		  Relies on: layout rework to make this not look broken
+ 13B040: 14 -> E0
  13B046: 5B -> 5C
		  Implements: move something on summary screen down/right, no idea what
! 13B870: Part of sub_813B870 (see 248disasm)
		  Implements: replaces the help system listener with a (very obfuscated) check that the SetSaveBlocksPointers and MoveSaveBlocks_ResetHeap functions were not altered; if they were, the game instantly crashes - this is checked every frame
		  Note: don't bother implementing this, thanks
+ 13B8E4: 00 D1 -> 00 00 (disables the help system; the above change does that already but I refuse to implement that)
+ 13D31C: sub_813D31C (see 249disasm)
		  Implements: displayed berry tag number in berry pouch is independent of internal item order - read from what G3T calls "mystery byte 02"
+ 13D668: 98 -> 88 (supposedly moves scroll arrows left in berry pouch, not sure what it really does)
+ 13ED3C: sub_813ED3C (see 250disasm)
		  Implements: Need more info (possibly allows for a new type of hidden items (7), which contains more than 1x of the item?); fixes the dings/graphics from sub_813EF9C
		  Requires in future: fn_43FD84, fn_43FD94, fn_43FDA2
+ 13EED0: E0 -> F0
  13EED2: D2 02 -> 52 03
  13EED8: 0E -> 3C
  13EEE0, 13EEE8: 05 -> 0A
		  Implements: doubles the itemfinder radius
+ 13EF9C: sub_813EF9C (see 251disasm)
		  Implements: number of itemfinder arrows gradually increases as item is closer (instead of just close = 4 and far = 2)

! 15F9B4-1C68EC: [event scripts, just use advancemap for this part later]

+ 1C6F34 (second one) -> 1300000 (repoint): Move_Pound (see animscripts.txt)
		  Implements: changes the Pound animation to add an unknown object
+ 1C6FB8 -> 1305D78 (repoint): Move_Poison_Powder (see animscripts.txt)
		  Implements: adds color fading to Poison Powder animation
+ 1C70E9 -> 1305EC0 (repoint): Move_Stun_Spore (see animscripts.txt)
		  Implements: adds color fading to Stun Spore animation
+ 1C7217 -> 1306008 (repoint): Move_Sleep_Powder (see animscripts.txt)
		  Implements: adds color fading to Sleep Powder animation
+ 1C7AF5 -> 1303958 (repoint): Move_Fire_Blast (see animscripts.txt)
		  Implements: adds a new background for Fire Blast animation
+ 1C8146: D4 -> D8 (remove a sound effect from Thunderbolt animation script, this might fix the associated glitch?)
+ 1C8BC1 -> 1306E60 (repoint): Move_Waterfall (see animscripts.txt)
		  Implements: improves the Waterfall animation
+ 1C9FA9 -> 1E2A2A0 (repoint): Move_Fiery_Dance (see animscripts.txt)
		  Implements: Fiery Dance animation
		  GLITCH!: The backgrounds are wrong when used by the player
+ 1CA0BE -> 1D2340 (repoint): Move_Inflammation (Inflammation has Will-O-Wisp animation)
+ 1CA6D1 -> 1308918 (repoint): Move_Earthquake (see animscripts.txt)
		  Implements: adds a new background for the Earthquake animation
+ 1CA99F: 19 80 00 C0 04 0C 19 80 00 C0 04 0C 19 80 00 C0 04 0C 19 80 00 C0 04 0C 19 80 00 C0 04 0C 05 0B 02 0D 04 01 08 ->
		  1C 80 00 C0 0C 05 04 0C 05 0B 02 0D 04 01 08 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
		  Implements: makes Agility animation script less redundant but doesn't seem to actually do anything functionally
+ 1CACD3 -> 93FB70 (repoint): Move_Entrainment (see animscripts.txt)
		  Implements: Entrainment animation
+ 1CADE9: 19 -> 1C (properly loop a sound in Sky Attack's animation script, fixing a glitch specific to attacking your partner)
+ 1CBFBC -> 1305900 (repoint): Move_Skill_Swap (see animscripts.txt)
		  Implements: changes background for Skill Swap animation
		  Relies on: sub_80B3834 changes
+ 1CC0B8 -> 1CB4E1 (repoint): Move_Quick_Turn (Quick Turn has Rapid Spin animation)
+ 1CC0FB -> 1308520 (repoint): Move_Blessed_Wings (see animscripts.txt)
		  Implements: Blessed Wings animation
+ 1CC212 -> 1E29E90 (repoint): Move_Hurricane (see animscripts.txt)
		  Implements: Hurricane animation
+ 1CC513 -> 1D10C2 (repoint): Move_Severe_Poison (Severe Poison has Poison Tail animation)
+ 1CD2E0 -> 1307850 (repoint): Move_Ice_Punch (see animscripts.txt)
		  Implements: adds something to Ice Punch animation
+ 1CD6CA -> 1307770 (repoint): Move_Thunder_Punch (see animscripts.txt)
		  Implements: makes the fist in Thunder Punch animation yellow
+ 1CD793 -> 1C6F34 (repoint): Move_??? ([moveDD] has Pound animation, presumably placeholder)
+ 1CE29E -> 142C700 (repoint): Move_Mach_Volt (see animscripts.txt)
		  Implements: [move80]/Mach Volt animation
+ 1CE768 -> 1304EE0 (repoint): Move_Blizzard (see animscripts.txt)
		  Implements: completely overhauls Blizzard animation
+ 1CE9EE -> 13051B8 (repoint): Move_Hydro_Pump (see animscripts.txt)
		  Implements: completely overhauls Hydro Pump animation
+ 1CF75D -> 1C6F34 (repoint): Move_??? ([moveB1] has Pound animation, presumably placeholder)
+ 1CFA15 -> 13062A8 (repoint): Move_Flamethrower (see animscripts.txt)
		  Implements: adds a new background for Flamethrower animation
+ 1CFECB -> 1E29F10 (repoint): Move_??? (see animscripts.txt)
		  Implements: [moveA7] animation
+ 1D08B5 -> 13076C0 (repoint): Move_Fire_Punch (see animscripts.txt)
		  Implements: adds something to Fire Punch animation
+ 1D1518 -> 1E29BA0 (repoint): Move_Accelerock (see animscripts.txt)
		  Implements: Accelerock animation
+ 1D2E93 -> 1E29D80 (repoint): Move_Vital_Drain (see animscripts.txt)
		  Implements: Vital Drain animation
+ 1D42C0 -> 1306918 (repoint): Move_Overheat (see animscripts.txt)
		  Implements: makes user in Overheat animation glow orange and adds a background
+ 1D45B2 -> 13052A8 (repoint): Move_Hydro_Cannon (see animscripts.txt)
		  Implements: completely overhauls Hydro Cannon animation
+ 1D499B -> 1E2A100 (repoint): Move_Gravel_Breath (see animscripts.txt)
		  Implements: Gravel Breath animation
+ 1D4A9F -> 1CF1E2 (repoint): Move_??? ([move161] has Sludge Bomb animation)
+ 1D51AA: 01 -> 03
  1D51BA: 03 -> 01
  1D51BC: CD 52 -> 6D 53
  1D51C4: 6D 53 -> CD 52
		  Implements: switches around weather cases for Weather Ball animation (sun -> "ice", sand -> "fire", hail -> "rock")
		  Relies on: probably means that the weather constant is changed from (none, sun, rain, sand, hail) to (none, hail, rain, sun, sand) (why???)
		  Note: check again after weather refactor is done
		  GLITCH!: the cases are wrong
+ 1D53D9 -> 14294F0 (repoint): Move_Stone_Edge (see animscripts.txt)
		  Implements: Grand Boulder/Stone Edge animation
+ 1D5C5F -> 1303564 (repoint): General_TurnTrap (see animscripts.txt)
		  Implements: move animations and end-of-turn animations for Infestation and Magma Storm
+ 1D65A8, 1D65EC, 1D66E0, 1D673C, 1D6744, 1D67A8 <except done on the new table>: 00 -> 26 (certain moves skip pointless Surf check, this doesn't actually do anything)
+ 1D6684 <except done on the new table>: 00 69 1D 08 -> C0 24 05 09 (BattleScript_EffectPowerSplit (see movescripts.txt))
		  Implements: Power Split
+ 1D6688 <except done on the new table>: 00 69 1D 08 -> E0 24 05 09 (BattleScript_EffectGuardSplit (see movescripts.txt))
		  Implements: Guard Split
+ 1D669C <except done on the new table>: 00 69 1D 08 -> 80 05 05 09 (BattleScript_EffectSynchronoise (see movescripts.txt))
		  Implements: Synchronoise
+ 1D66A4 <except done on the new table>: 00 69 1D 08 -> F0 05 05 09 (BattleScript_EffectHealPulse (see movescripts.txt))
		  Implements: Heal Pulse
+ 1D66A8 <except done on the new table>: 00 69 1D 08 -> A0 39 05 09 (BattleScript_EffectRandomPoisonOrParalyze (see movescripts.txt))
		  Implements: move that either poisons or paralyzes, randomly choosing which
+ 1D6760 <except done on the new table>: 00 69 1D 08 -> 80 0C 05 09 (BattleScript_EffectIncinerate (see movescripts.txt))
		  Implements: Incinerate
		  Glitch?: Due to off-by-one error, Retro Mail gets incinerated and Enigma Berry doesn't
		  Glitch?: No upper limit, so Power items, Apricorn balls, Honey, and Destiny Knot get incinerated
+ 1D67B4 <except done on the new table>: 00 69 1D 08 -> F8 39 05 09 (BattleScript_EffectStatBoostsToPower (see movescripts.txt))
		  Implements: Stored Power, (+6 speed = 110 power, +5/+4 speed = 100 power, +3/+2 speed = 90 power, else displayed base power)
+ 1D67BC <except done on the new table>: FC 79 1D 08 -> EC 80 01 08 (BattleScript_EffectTailwind (j178FC, see movescripts.txt))
		  Implements: removes Synthesis effect entirely (folded into Morning Sun), adds new effect for Tailwind
		  Relies on: DoFieldEndTurnEffects changes (to make space)
+ 1D67C0 <except done on the new table>: FC 79 1D 08 -> B8 80 01 08 (BattleScript_EffectTrickRoom (j178C8, see movescripts.txt))
		  Implements: removes Moonlight effect entirely (folded into Morning Sun), adds new effect for Trick Room
		  Relies on: DoFieldEndTurnEffects changes (to make space)
+ 1D67DC <except done on the new table>: 00 69 1D 08 -> C0 0F 05 09 (BattleScript_EffectChipAway (see movescripts.txt))
		  Implements: Chip Away/Sacred Sword
		  Glitch?: supposed to ignore evasion boosts, but accuracy is calculated before temporarily setting stats to +0, so this doesn't work
= 1D6834 <except done on the new table>: 00 69 1D 08 -> A0 10 05 09 (BattleScript_EffectHeadSmash (see movescripts.txt))
		  Implements: 50% recoil effect
		  Relies on: changes at 020F78
+ 1D68C8 <except done on the new table>: 55 6A 1D 08 -> E0 01 05 09 (BattleScript_ParameterizedEffectHitAnd30PercentInfatuation (see movescripts.txt))
		  Implements: removes Blaze Kick effect entirely (folded into burn hit), adds new effect for BattleScript_ParameterizedEffectHit but with an additional 30% chance to infatuate the target
		  Relies on: BattleScript_Parameterized
		  Note: Doesn't show the status animation when infatuation starts
		  Glitch?: always infatuates, skipping check?
+ 1D68EC <except done on the new table>: DC 69 1D 08 -> 80 3A 05 09 (BattleScript_EffectAtkAndSpAtkUp (see movescripts.txt))
		  Implements: removes Poison Tail effect entirely (folded into poison hit), adds new effect for +Atk/+Sp. Atk moves (modern Growth, Work Up, Energize)
		  Relies on: weather refactor
		  Note: stat boost anim was wrong, see movescripts.txt
+ 1D696D -> 1050000 (repoint): BattleScript_EffectSleep_New (see movescripts.txt)
		  Implements: Dreamy Mist
+ 1D69DC -> 1050040 (repoint): BattleScript_EffectPoisonHit_New (see movescripts.txt)
		  Implements: Severe Poison
! 1D69E7 -> 1050060 (repoint): BattleScript_EffectAbsorb_New (see movescripts.txt)
		  Implements: Draining Kiss
		  GLITCH!: crashes when not Draining Kiss
+ 1D6A55 (first one), 1D6A60, 1D6A6B, 1D6DB2, 1D6E69, 1D6E7D, 1D6900 (the one after 1D6FC8), 1D725F, 1D726A, 1D7275, 1D7280, 1D728B, 1D6900 (the one after 1D7296), 1D72C9, 1D6900 (the one after 1D750D), 1D752C, 1D7977, 1D7A47, 1D7E16, 1D817E, [effectD9], [effectDA] -> 1054000 (repoint): BattleScript_ParameterizedEffectHit (see movescripts.txt)
+ 1D7119, 1D7124 -> 1053720 (repoint): BattleScript_ParameterizedEffectAltTypeCalcHit (see movescripts.txt)
+ 1D6B77, 1D6B82, 1D6900, 1D6B8D, 1D6900, 1D6900, 1D6B98 -> 1054010 (repoint): BattleScript_ParameterizedStatUp (see movescripts.txt)
+ 1D6BEC, 1D6BF7, 1D6900 (the one before 1D6C02), 1D6C02, 1D6C0D -> 1054020 (repoint): BattleScript_ParameterizedStatDown (see movescripts.txt)
+ [none yet] -> 1054030 (repoint): BattleScript_ParameterizedStatDownPerfectAccuracy (see movescripts.txt)
		  Implements: refactor all additional-effect hit moves and stat-up/stat-down moves into a parameterized script to reduce redundant code (too many actual moves to list here, see the move list near the top; below is the list of effects refactored by this)
			EffectHit: EFFECT_BURN_HIT, EFFECT_FREEZE_HIT, EFFECT_PARALYZE_HIT, EFFECT_FLINCH_HIT, EFFECT_PAY_DAY, EFFECT_TRI_ATTACK, EFFECT_HIGH_CRIT, EFFECT_ATTACK_DOWN_HIT, EFFECT_DEFENSE_DOWN_HIT, EFFECT_SPEED_DOWN_HIT, EFFECT_SPECIAL_ATTACK_DOWN_HIT, EFFECT_SPECIAL_DEFENSE_DOWN_HIT, EFFECT_ACCURACY_DOWN_HIT (indirectly), EFFECT_EVASION_DOWN_HIT, EFFECT_CONFUSE_HIT, EFFECT_SELF_STATUS_HIT, EFFECT_SLEEP_HIT, EFFECT_THAW_HIT, EFFECT_STAT_UP_HIT, EFFECT_UPROAR, EFFECT_SUPERPOWER, EFFECT_STAT_TWO_DOWN_HIT (indirectly), EFFECT_0xD9, EFFECT_TARGET_STAT_UP_HIT
			EffectAltTypeCalcHit: EFFECT_0x35, EFFECT_0x36
			StatUp: EFFECT_ATTACK_UP, EFFECT_DEFENSE_UP, EFFECT_SPEED_UP, EFFECT_SPECIAL_ATTACK_UP, EFFECT_SPECIAL_DEFENSE_UP, EFFECT_ACCURACY_UP, EFFECT_EVASION_UP
			StatDown: EFFECT_ATTACK_DOWN (indirectly), EFFECT_DEFENSE_DOWN, EFFECT_SPEED_DOWN, EFFECT_SPECIAL_ATTACK_DOWN (indirectly), EFFECT_SPECIAL_DEFENSE_DOWN, EFFECT_ACCURACY_DOWN, EFFECT_EVASION_DOWN
			StatDownPerfectAccuracy: EFFECT_ATTACK_DOWN (indirectly), EFFECT_SPECIAL_ATTACK_DOWN (indirectly)
		  Relies on: BattleScript_ParameterizedEffectAltTypeCalcHit relies on AlternateTypeCalc (1833D0)
		  Note: code is horrifying, get someone to fix this
		  Glitch?: Poison Leaf is missing its poison chance (might just be transcription error)
		  Note: check Magnet Force in Vega; if it lowers the user's stats, fix the Vega description; if it lowers the target's stats, it's bugged in PD
		  Note: Freeze-Dry has a 10% effect chance but no effect
		  Note: Check Fire Lash (is attack, should be defense)
+ 1D6A76 -> 1053960 (repoint): BattleScript_EffectExplosion_New (see movescripts.txt)
  1D6AF6 -> 1053968 (repoint): BattleScript_EffectDreamEater_New (see movescripts.txt)
  1D6F01 -> 1053970 (repoint): BattleScript_EffectRazorWind_New (see movescripts.txt)
  1D6FC8 -> 1053978 (repoint): BattleScript_EffectTrap_New (see movescripts.txt)
  1D6FF9 -> 1053980 (repoint): BattleScript_EffectDoubleHit_New (see movescripts.txt)
  1D7092 -> 1053988 (repoint): BattleScript_EffectRecoil_New (see movescripts.txt)
  1D72A1 -> 10539A8 (repoint): BattleScript_EffectSkyAttack_New (see movescripts.txt)
  1D734D -> 10539B0 (repoint): BattleScript_EffectRage_New (see movescripts.txt)
  1D774D -> 10539C8 (repoint): BattleScript_EffectCurse_New (see movescripts.txt)
  1D78BB -> 10539D0 (repoint): BattleScript_EffectSwagger_New (see movescripts.txt)
  1D7954 (first) -> 10539D8 (repoint): BattleScript_EffectReturn_New (see movescripts.txt)
  1D7954 (second) -> 10539E0 (repoint): BattleScript_EffectFrustration_New (see movescripts.txt)
  1D7A9F -> 1053A00 (repoint): BattleScript_EffectSkullBash_New (see movescripts.txt)
  1D7AEE -> 1053A08 (repoint): BattleScript_EffectTwister_New (see movescripts.txt)
  1D7B13 -> 1053A10 (repoint): BattleScript_EffectEarthquake_New (see movescripts.txt)
  1D7BAE -> 1053A18 (repoint): BattleScript_EffectGust_New (see movescripts.txt)
  1D7BCD -> 1053A20 (repoint): BattleScript_EffectStomp_New (see movescripts.txt)
  1D7BE3 -> 1053A28 (repoint): BattleScript_EffectSolarBeam_New (see movescripts.txt)
  1D7C39 -> 1053A30 (repoint): BattleScript_EffectThunder_New (see movescripts.txt)
  1D7CE1 -> 1053A38 (repoint): BattleScript_EffectSemiInvulnerable_New (see movescripts.txt)
  1D7DDF -> 1053A40 (repoint): BattleScript_EffectFakeOut_New (see movescripts.txt)
  1D7ECD -> 1053A48 (repoint): BattleScript_EffectFlatter_New (see movescripts.txt)
  1D7F2B -> 1053A50 (repoint): BattleScript_EffectWillOWisp_New (see movescripts.txt)
  1D8042 -> 1053A58 (repoint): BattleScript_EffectFacade_New (see movescripts.txt)
  1D8511 -> 1053A78 (repoint): BattleScript_EffectSkyUppercut_New (see movescripts.txt)
		  Implements: adds a duplicate attackcanceler and attackstring to the scripts; this makes two-turn moves display the name on the first turn, but this doesn't explain the rest - only guess is that this is somehow related to the change in atk02_attackstring
		  Note: message scrolls off too soon, maybe add wait
+ 1D6ABE, 1D6AD9, 1D6D4A, 1D7663, 1D7B78, 1D7B90, 1D7CDA, 1D839C, 1D94E8, 1D9502, 1D9519: 10 -> 12
  1D6D8F: 02 -> 03
  1D6D98, 1D89A1: 04 -> 05
  1D76C4, 1D8E7E: 0E -> 10
  1D89AA, 1D9AE0, 1D9B0F, 1D9B33, 1D9B55, 1D9B77: 0F -> 11
  1D89D6: 03 -> 04
  1D89D9: 06 -> 07
  1D8E7B: 0B -> 0C
		  Implements: part of moveend refactor
+ 1D6BE1 -> 1052DB0 (repoint): BattleScript_EffectAttackDown (see movescripts.txt)
  1D6900 (the one after 1D6BF7) -> 1052470 (repoint): BattleScript_AttackDown_Standard (see movescripts.txt)
		  Implements: Confide, Play Nice, Strength Sap; also refactors into the parameterized script
		  Relies on: BattleScript_ParameterizedStatDown, BattleScript_ParameterizedStatDownPerfectAccuracy
		  Note: Strength Sap message is wrong, fair enough since it's not implemented yet
+ 1D6C72 -> 10500E0 (repoint): BattleScript_EffectHaze_New (see movescripts.txt)
		  Implements: Clear Smog
		  Relies on: BattleScript_DamageAndEffect
+ 1D6C83 -> 10500B0 (repoint): BattleScript_EffectBide (see movescripts.txt)
		  Implements: adds an accuracy check to Magic Coat, but it's specified elsewhere to not miss anyway? (also, since when did Magic Coat have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
+ 1D6CB1 -> 10519C0 (repoint): BattleScript_EffectPhaze (see movescripts.txt)
		  Implements: Dragon Tail/Circle Throw
		  Relies on: BattleScript_DamageAndEffect
+ 1D6CCD: 01 60 69 1D 08 -> 00 00 00 00 00 (Roar/Whirlwind have perfect accuracy)
+ 1D6D51, 1D766A: 40 -> 00 (Endure displays the pokemon getting hit and enduring all hits of multihit moves, not the old behavior of it hitting once then getting endured)
+ 1D6D9D -> 10502D0 (repoint): BattleScript_EffectFreeze (see movescripts.txt)
		  Implements: removes Conversion entirely, adds new effect for moves that freeze without doing damage (aka Hypnosis for freeze)
+ 1D6F99 -> 1053760 (repoint): BattleScript_EffectSetDamageOrMove29F (see movescripts.txt)
		  Implements: [move29F] is Ground-type, but bypasses Levitate and is neutral to Flying; condenses Sonic Boom into Dragon Rage's effect slot to free up space
		  Relies on: ConsumeItem (e01FCCC, j01F4DC), BattleScript_UseGem (e1FD42, j1F552), HasItemWithTypeEffect, AteAbilityConversionTable (j168CB4)
		  Relies on: AlternateTypeCalc (1833D0)
		  Glitch: AteAbilityConversionTable ptr is wrong, currently points to j168CA4; fixed when importing (not like it matters)
		  Glitch?: the Levitate bypassing is done by temporarily swapping abilities, which means if used on a target with Levitate, [move29F] doesn't receive the effects of the user's Adaptability, Normalize, Tinted Lens, or Klutz (as in, Expert Belt actually works despite Klutz); the target receives the effects of the user's Solid Rock, Filter, and Wonder Guard; and if both mons have Levitate, the target is still immune to the move
+ 1D7011: BattleScript_EffectRecoilIfMiss (see movescripts.txt)
		  Implements: [High] Jump Kick crashes through Ghost-types, always does half HP recoil
		  Relies on: atk80_manipulatedamage changes
+ 1D70F8 -> 105039D (repoint): BattleScript_EffectConfuseAndLowerEvasion (see movescripts.txt)
		  Implements: removes +2 Atk effect entirely (folded into +1 Atk), adds new effect for confuse + -1 evasion
		  Glitch?: Stench and Oblivious block this move entirely?
+ 1D7103 -> 10527C0 (repoint): BattleScript_EffectSpAtkOrSpeedUpHit (see movescripts.txt)
		  Implements: removes +2 Def effect entirely (folded into +1 Def), adds new effect for (if target moved first, damage with chance to raise speed; otherwise, damage with chance to raise sp. atk)
+ 1D710E -> 1053998 (repoint): BattleScript_EffectGravelBreath (see movescripts.txt)
		  Implements: removes +2 Speed effect entirely (folded into +1 Speed), adds new effect for Gravel Breath
+ 1D7142 -> 1052500 (repoint): BattleScript_EffectPowerSwap (see movescripts.txt)
		  Implements: removes -2 Atk effect entirely (folded into -1 Atk), adds new effect for Power Swap
+ 1D714D -> 1052520 (repoint): BattleScript_EffectGuardSwap (see movescripts.txt)
		  Implements: removes -2 Def effect entirely (folded into -1 Def), adds new effect for Guard Swap
+ 1D7158 -> 1052540 (repoint): BattleScript_EffectReflectType (see movescripts.txt)
		  Implements: removes -2 Speed effect entirely (folded into -1 Speed), adds new effect for Reflect Type
+ 1D7163 -> 1050590 (repoint): BattleScript_EffectFoulPlay (see movescripts.txt)
		  Implements: removes -2 Sp. Def effect entirely (folded into -1 Sp. Def), adds new effect for Foul Play/Wildcard
+ 1D71F6: Part of BattleScript_EffectParalyze (see movescripts.txt)
		  Implements: Electric-type paralysis immunity (Thunder Wave)
+ 1D7296 -> 1052F40 (repoint): BattleScript_EffectAccuracyDownHit (see movescripts.txt)
		  Implements: [move29E], also refactors into the parameterized script
		  Relies on: BattleScript_ParameterizedEffectHit
+ 1D741B -> 10539B8 (repoint): BattleScript_EffectDoubleDamageOnStatus (see movescripts.txt)
		  Implements: removes Psywave effect entirely, adds new effect for Venoshock, Hex, and moves that cure status and double damage when they do so (Smelling Salts is moved into this effect, plus options for Wake-Up Slap, (double damage if it cures infatuation), (double damage if it cures burn), (double damage if it cures freeze), and (double damage if it cures poison))
		  Relies on: changes at 0x20F00
		  GLITCH!: Venoshock doesn't double on toxic, only regular poison
		  GLITCH!: attract cure move always doubles damage
		  Note: Since it just displays status cure msg in real games, rewrite this code for correct msg later
+ 1D7433 -> 10539C0 (repoint): BattleScript_EffectCounter_New (see movescripts.txt)
		  Implements: Shell Trap
		  Note: message scrolls off too soon, maybe add wait
+ 1D749C -> 1050AA0 (repoint): BattleScript_EffectUsableWhileAsleep (see movescripts.txt)
		  Implements: condenses Sleep Talk into Snore's effect slot to free up space
+ 1D74D6 -> 1050AC0 (repoint): BattleScript_EffectVenomDrench (see movescripts.txt)
		  Implements: removes Conversion 2 entirely, adds new effect for Venom Drench/[move2A3]
		  Relies on: BattleScript_DamageAndEffect, BattleScript_LowerOneOfMultipleStats
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+ 1D7581, 1D81B5, 1D82AB, 1D8417: 00 -> 26 (certain moves skip pointless Surf check, this doesn't actually do anything)
+ 1D75E6 -> 1052250 (repoint): BattleScript_EffectBestow (see movescripts.txt)
		  Implements: removes Triple Kick entirely, adds new effect for Bestow
+ 1D76C9 -> 1052620 (repoint): BattleScript_EffectThief (see movescripts.txt)
		  Implements: Unclear, only change seems to be that the Sticky Hold message is different
		  Relies on: BattleScript_DoDamageFunction
+ 1D76D4 -> 1053AD0 (repoint): BattleScript_EffectEscapePrevention (see movescripts.txt)
		  Implements: Spirit Shackle, etc.; Ghost-type immunity to trapping
+ 1D7747: 17 -> 27 (Minimize +1 -> +2 evasion)
+ 1D7938 -> 1052B20 (repoint): BattleScript_EffectFailsOnSameGender (see movescripts.txt)
		  Implements: Captivate, Pheromone Poison
		  Relies on: atk97_tryinfatuating changes
		  Glitch?: Mold Breaker is done by swapping abilities, meaning Simple targets (and probably others) won't work right?
+ 1D7995 -> 10539E8 (repoint): BattleScript_EffectSwitchOutMove (see movescripts.txt)
		  Implements: U-Turn/Volt Switch
		  Note: "went back to" is missing, fix later
+ 1D79CD -> 10539F0 (repoint): BattleScript_EffectPunishment (see movescripts.txt)
		  Implements: removes Sonic Boom effect entirely (folded into Dragon Rage), adds new effect for Punishment
		  Relies on: BattleScript_EffectSetDamageOrMove29F (to not break existing Sonic Boom)
		  Note: "failed" should probably be "missed"
		  Note: This isn't how Punishment works at all?
+ 1D7A31 -> 1697DA0 (repoint): BattleScript_EffectBurnUserAndTarget (see movescripts.txt)
		  Implements: removes -Def chance effect entirely (folded into something else), adds new effect that burns user and target
+ 1D7A3C -> 1697D00 (repoint): BattleScript_EffectPoisonUserAndTarget (see movescripts.txt)
		  Implements: removes -Atk chance effect entirely (folded into something else), adds new effect that poisons user and target
+ 1D7BF5: 60 -> 30 (part of weather refactor - sun)
+ 1D805C -> 1052E60 (repoint): BattleScript_EffectMustFocus (see movescripts.txt)
		  Implements: some move that does +2 Def/+2 Sp. Def but only if the user isn't attacked
		  GLITCH!: crashes if Defense is at +6 but Sp. Def isn't
+ 1D806E -> 1053A60 (repoint): BattleScript_EffectQuickTurn (see movescripts.txt)
		  Implements: removes Smelling Salts effect entirely (folded into DoubleDamageOnStatus), adds new effect for Quick Turn
+ 1D80B6 -> 11BA88C (repoint): BattleScript_EffectCharge_New (see movescripts.txt)
		  Implements: Charge Sp. Def boost
		  Relies on: changes at 1D80BA
		  Note: Code is hideously broken, fix later
+ 1D80BA: 09 0A -> 00 00
		  Implements: removes Charge animation (moved to BattleScript_EffectCharge_New)
		  Relies on: BattleScript_EffectCharge_New
+ 1D80F8 -> 1055D80 (repoint): BattleScript_EffectTrick (see movescripts.txt)
		  Implements: Trick no longer fails when used by the AI
		  Note: Sticky Hold message scrolls off too soon, maybe add wait
+ 1D8126 -> 1050440 (repoint): BattleScript_EffectAbilityTransfer (see movescripts.txt)
		  Implements: Entrainment; condenses Skill Swap into Role Play's effect slot to free up space
		  Note: Skill Swap msg needs what target's ability became
+ 1D8189 -> 1050480 (repoint): BattleScript_EffectMagicCoat (see movescripts.txt)
		  Implements: adds an accuracy check to Magic Coat, but it's specified elsewhere to not miss anyway? (also, since when did Magic Coat have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
+ 1D82A9 -> 1053A70 (repoint): BattleScript_EffectHPScaled (see movescripts.txt)
		  Implements: Wring Out/Crush Grip
		  Relies on: atkD9_scaledamagebyhealthratio changes
+ 1D82AF -> 1051160 (repoint): BattleScript_EffectChangeTargetAbility (see movescripts.txt)
		  Implements: Gastro Acid, Worry Seed, Simple Beam
+ 1D82CB -> 10504A0 (repoint): BattleScript_EffectImprison (see movescripts.txt)
		  Implements: adds an accuracy check to Imprison, but it's specified elsewhere to not miss anyway? (also, since when did Imprison have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
+ 1D830C -> 10504C0 (repoint): BattleScript_EffectSnatch (see movescripts.txt)
		  Implements: adds an accuracy check to Snatch, but it's specified elsewhere to not miss anyway? (also, since when did Snatch have a target?)
		  Relies on: AccuracyCalcHelper (so the move can't miss)
+ 1D8415 -> 1051220 (repoint): BattleScript_EffectWeatherDependent (see movescripts.txt)
		  Implements: Raid, weather ball animation in sandstorm is set to the animation in hail
		  Relies on: weather refactor
		  Note: check weather ball miss in sand once weather refactor is done, might be wrong ptr
		  Note: check Raid effect once weather refactor is done, might not work
+ 1D841B -> 1053B60 (repoint): BattleScript_EffectStatTwoDownHit (see movescripts.txt)
		  Implements: [move289]
		  Relies on: BattleScript_Parameterized, BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
+ 1D8A72: 02 -> 01 (part of DoFieldEndTurnEffects changes)
! 1D8B6E: Part of BattleScript_LeechSeedTurnDrain (see movescripts.txt)
		  Implements: Magic Guard (vs Leech Seed)
		  Relies on: script at j17D18/e18508
		  Note: implementation is actually caused by atk88_negativedamage changes, this just enables that to work on Leech Seed
		  GLITCH!: message is mangled for Magic Guard on Liquid Ooze
+ 1D8C10 -> 1051B20 (repoint): BattleScript_SuccessForceOut (see movescripts.txt)
		  Implements: if the move used to force out was above ID 0x200, don't play the move animation (presumably for dragon tail, etc.)
+ 1D9015 -> 1052EE0 (repoint): BattleScript_FocusPunchSetUp (see movescripts.txt)
		  Implements: Shell Trap message
		  Note: no message, some other change probably needed
+ 1D90B1 -> 018539 (repoint): BattleScript_MoveUsedFlinched (10 4A 00 12 40 00 1E 01 50 4B 85 01 08 28 4E 69 1D 08 2E DE 3F 02 02 13 89 41 4E 69 1D 08 29 00 87 3E 02 02 02 4E 69 1D 08 47 45 01 01 D4 3F 02 02 10 A2 01 12 40 00 28 4E 69 1D 08) (implements steadfast)
+ 1D9366: 1C -> 16 (resets the statchanger, needed for Intimidate to keep working after addition of Defiant)
+ 1D9444 -> 1050260 (repoint): BattleScript_ObliviousPreventsAttraction (see 57disasm)
		  Implements: Oblivious changed from "prevents romance" to "made [MOVE] useless", EXCEPT for move ID 0x257
		  Note: re-add "prevents romance" for consistency; possibly remove "prevents romance" message for 0x257 entirely, also for consistency
+ 1D9C1C: ptr ED BC 1D 08 -> 30 C0 1F 09 (add new AI table entry for script at 11FC030)
			btw temp 2064C0: 01 21 08 40 -> 01 20 00 00
		  Implements: New level of smart AI (enough stuff to warrant breaking the usual format)
		  * Won't use Explosion
		  * Won't use status moves on Substitute (unless Infiltrator or sound move)
		  * At full HP with Focus Sash, won't use status moves if it could be brought down to its sash
		  * Won't use moves that would be blocked by immunity abilities
		  * At full HP with Focus Sash, tries to use priority if the target is faster and it could be brought down to its sash
		  * If target just used Sucker Punch, tries to use status moves
		  * Tries to use a move that can KO
		  * If it can KO, tries to use the most powerful move it has
		  * If it can KO and isn't choiced, tries to use moves with 100% accuracy
		  * If it can KO and isn't choiced, tries to use moves with perfect accuracy
		  * If it can KO and isn't choiced and the target is faster, tries to use priority
		  * If its party has an average Speed of lower than 100 (or higher than 100 in Trick Room), tries to use Trick Room (and tries not to if not)
		  * If choiced and has no living teammates, won't use moves with less than 5 power (aka status and variable BP)
		  * If choiced and has no living teammates, won't use moves that anyone on the target's team is immune to
		  * Won't use Trick on a Substitute
		  * Tries to use Foul Play if the target last used a physical move
		  * (something, glitched) to Foul Play if the target last used a special move, or last used a status move but has higher Sp. Atk
		  * Tries to use Wildcard if the target last used a special move
		  * (something, glitched) to Wildcard if the target last used a physical move, or last used a status move but has higher Attack
		  * Tries to use Baton Pass if it has living teammates and it has a type advantage
		  * Won't use Sucker Punch if the target is slower
		  * Won't use Sucker Punch if it has a type advantage
		  * If target doesn't have active Focus Sash and can be OHKOed, tries to use Sucker Punch
		  * If target just used an attack, tries to use Sucker Punch
		  * If target is offensive and choiced, tries to use Sucker Punch
		  * If target is offensive, uses Sucker Punch less often if the move has low PP
		  * If target is offensive, the move has low PP, and the user can be KOed, tries to use Sucker Punch
		  * If target is defensive and just used a status move, won't use Sucker Punch
		  * Tries not to use Rest unless it has a berry or Hydration in rain
		  * Tries to use Pursuit if it has a type advantage
		  * (effect list for below: +Atk, +Spe, (+2 Atk +2 Def -1 Spe), Quiver Dance, Coil, Shell Smash, (+Atk +Spe +evasion), (+Spe +evasion), Hone Claws, Focus Punch, OHKO)
		  * Tries to use effectlist moves if behind Substitute
		  * Tries to use effectlist moves if it has a type advantage
		  * Tries to use effectlist moves if Focus Sash active
		  * Won't use effectlist moves if it can be OHKOed
		  * Tries to use effectlist moves in general
		  * Tries to heal if target slower and not at full HP
		  * Won't heal if target slower and at more than 70% HP
		  * Tries to heal if target doesn't have Snatch
		  * Tries to heal even if target has Snatch, if at less than half HP
		  * Tries to use Protect or Substitute with Speed Boost or Moody
		  * Won't use Protect or Substitute twice in a row
		  * Tries to use Substitute (or Protect, oversight) if has pinch berry
		  * Tries to use Protect or Substitute if poisoned with Poison Heal
		  * Tries not to use Protect or Substitute if poisoned without Poison Heal
		  * Tries to use Protect or Substitute with Ice Body or Snow Cloak in hail
		  * Tries to use Protect or Substitute with Rain Dish in rain
		  * Tries to use Protect or Substitute with Sand Veil in sand
		  * Tries to use Taunt if target is defensive
		  * Tries to use Taunt if target just used a status move
		  Relies on: new AI script commands, weather refactor
		  Requires in future: IsMoveBlockedByAbility (251DA0)
		  Glitch?: Foul Play logic has cases that loop back to the start of the AI function, this may cause infinite loops
		  Glitch?: Wildcard checks if a move isn't special to determine that it is physical - but it could be status too; fix this by moving the status move check above that
		  Glitch?: sub encouragement for berries only checks Lansat (?)
+ 1D9C74 -> 1005000 (repoint): AI_CheckBadMove
		  Implements: enough stuff to warrant breaking the usual format
		  * Bugfixes: checks for "ultra effective" as well against Wonder Guard instead of strictly exactly 2x SE
		  * Other improvements: Safeguard, Curse, Yawn, and Taunt are now checked; Sky Attack counts as a risky move; Curse isn't used when at less than half HP at the start of the turn; AI will now use Knock Off on itemless foes (due to buff)
		  * New mechanics that old scripts are updated for: electric-type paralysis immunity, dark-type Prankster immunity, grass-type powder immunity, Lightning Rod (immunity), Motor Drive, Poison Heal, Magic Guard, Leaf Guard, Storm Drain, Overcoat, Big Pecks, Sap Sipper, Aroma Veil, Sweet Veil, Bulletproof, Dazzling, Queenly Majesty
		  * Moves that bypass AI restrictions: burn moves that aren't Will-O-Wisp (this only bypasses the Fire-type check); trapping moves that aren't Mean Look / Block (aka Spirit Shackle, etc); switch-out moves that aren't Baton Pass (aka U-Turn/Volt Switch); stat-resetting moves that aren't Haze (aka Clear Smog); phazing moves that aren't Roar / Whirlwind (aka Dragon Tail/Circle Throw)
		  * New moves: Captivate, Pheromone Poison (factored into Attract script)
		  * New move effects: freeze, (confuse and lower evasion), Power Swap, Guard Swap, Reflect Type, Synchronoise, Neurotoxin, Venom Drench, Tailwind, Inflammation, Infection, Work Up, Dizzy Whirl, Zombie Touch, (lowers Sp. Atk and Sp. Def), (+2 Attack +2 Defense -1 Speed to user), Quiver Dance, Coil, Shell Smash, Stretch, Thicket Slip, Hone Claws
		  Relies on: new AI script commands, weather refactor
		  Glitch?: due to misaligned goto, only will-o-wisp is checked for prankster immunity
		  Glitch?: looks like thunder wave is checked against electric-types twice instead of electric and ground (might be a transcription error? test this)
		  Glitch?: freeze effect (1E) checks Flame Body instead of Magma Armor
		  Glitch?: Reflect Type -> Synchronoise -> Power Swap is fallthrough
		  Glitch?: [move2A3] won't be used if Venom Drench would have no effect, despite also doing damage
+ 1DA445 -> 1005C00 (repoint): AI_CheckViability
		  Implements: enough stuff to warrant breaking the usual format
		  * Bugfixes: won't use a speed-lowering move like Mud Shot if the target is immune; no longer inexplicably encourages Toxic when it has a +SpDef move; no longer inexplicably discourages Protect/encourages Snatch when the opponent has specifically Defense Curl; Protect/Snatch correctly factors in all healing moves instead of just vanilla Recover-types; sandstorm and hail are no longer the wrong way around in the Fly script; Facade correctly checks the user for status instead of the target; Brick Break is encouraged vs Light Screen, not just Reflect
		  * Other improvements: instead of a bizarre mix of moves, Mirror Move tries to prioritize any copiable move; doesn't discourage recovery when the user is faster; encourages OHKO moves after use of Mind Reader; Mean Look (because Spirit Shackle uses the same effect byte), Dragon Dance (why?), and Knock Off are no longer encouraged to be Encored; Teleport and +Sp. Def are encouraged to be Encored; instead of encouraging stealing a short list of items, Thief is encouraged for all items that don't have a downside; Chlorophyll users prioritize Sunny Day; Volt Absorb, Water Absorb, Soundproof, Thick Fat, Flame Body, and Shell Armor are considered "good" abilities; "bad" abilities (to avoid/get rid of) are also listed
		  * New mechanics that old scripts are updated for: p/s split (also includes removing the discouraging of, for example, -Atk moves or Reflect on a water-type since it can have physical STAB now), new Lightning Rod, Dry Skin, Hydration, Solar Power, Leaf Guard, Flower Gift, Harvest, Choice items, Assault Vest, Lagging Tail
		  * New moves: 0x22D, Wring Out (factored into Eruption script); Venoshock, Hex, Wake-Up Slap, Farewell Slap, 0x266, Ice Crush, 0x283 (factored into double-damage-on-status script); Brine, 0x272, 0x27A (factored into Brine script); Hone Claws (factored into Dinosword script)
		  * New move effects: (confuse and lower evasion), Gravel Breath, Power Swap, Guard Swap, Synchronoise, Neurotoxin, double-damage-on-status effects, Venom Drench, Trick Room, Work Up, Hammer Arm, Close Combat, V-Create, Hurricane, Brine, Barrier Blast, Dinosword, (lowers Sp. Atk and Sp. Def), (+2 Attack +2 Defense -1 Speed to user), Quiver Dance, Coil, Shell Smash, Stretch, Thicket Slip, Hone Claws, Payback, Psycho Shift, Acrobatics, Metal Burst
		  Relies on: new AI script commands, weather refactor
		  Glitch?: due to misaligned goto, Substitute will fall through into the Hyper Beam logic under certain circumstances
		  Glitch?: due to misaligned goto, Gravel Breath will probably crash
		  Glitch?: might cause inexplicable use of recovery moves at full HP, this might be a misreading though (test)
		  Glitch?: Destiny Knot is considered a "bad" item for Thief?
		  Glitch?: an AI script for Sandstorm is fully implemented but not actually accessed
		  Glitch?: Psycho Shift -> Acrobatics is fallthrough
		  Glitch?: Venom Drench uses Lock-On's AI script
+ 1DBA8D -> 1007300 (repoint): AI_SetupFirstTurn
		  Implements: changes which moves the AI counts as setup (removes every +2/-2, Conversion; adds sleep, Toxic, (confuse and lower evasion), Neurotoxin, Inflammation, Infection, Charge, Work Up, Dragon Dance, Dizzy Whirl, (lowers Sp. Atk and Sp. Def), (+2 Attack +2 Defense -1 Speed to user), Quiver Dance, Coil, Shell Smash, Stretch, Thicket Slip, Hone Claws)
		  GLITCH!: This actually does nothing at all due to a misplaced pointer
+ 1DBB3B -> 1007380 (repoint): AI_Unknown
		  Implements: AI layer that discourages supereffective moves for some reason
+ 1DD0C9: C5 -> CC (no idea what this does (m4a))
+ 1E3B27: D0 -> E0 (no idea what this does (isagbprn))

data:
+ 209D40-209E48 (j1D9634-j1D973C): part of gFont2JapaneseGlyphs [figure out what this does in full version]
= 20F5A2 (j1DEE96): 07 -> 08 (extension of above changes (gFont2JapaneseGlyphWidths))
= 2349CC (j1F3FB0): gMonFrontPicCoords
= 2350AC (j1F4690): gMonFrontPicTable
= 235E6C (j1F5450): gMonBackPicCoords
= 23654C (j1F5B30): gMonBackPicTable
= 23730C (j1F68F0): gMonPaletteTable
= 23957C (j1F8B60): gTrainerFrontPicTable
= 239A1C (j1F9000): gTrainerFrontPicPaletteTable
= 23A004 (j1F95E8): gEnemyMonElevation
= 23A1A0-23E558 (j1F9784-j1FDB3C): trainer party data
= 23E558 (j1FDB3C): gTrainerClassNames
= 23EAC8 (j1FDFD8): gTrainers
= 248330 (j20520C): gStandardBattleWindowTemplates (merge pd and en changes, see windo.txt)
= 24EE34 (j20BD10): battle backgrounds
+ 24F050 (j20BF24): gTypeEffectiveness
		  Implements: Fairy, modern Steel
= 24F220 (j20C0D0): gTrainerMoneyTable
+ 250530 (j20CF38): sCriticalHitChance
		  Implements: modern crit stages
+ 2507E0 (j20D1E8): sProtectSuccessRates
		  Implements: multiple protect success rate 1/2 -> 1/3
+ 25081C (j20D224): sNaturePowerMoves
		  Implements: new Nature Power
					  (old: Stun Spore, Razor Leaf, Earthquake, Hydro Pump, Surf, Bubble Beam, Rock Slide, Shadow Ball, Swift, Swift)
					  (new: Energy Ball, Wild Growth, Sonic Sand, Hydro Pump, Surf, Wave Splash, Rock Slide, Diamond Blast, Tri Attack, Earthquake)
+ 250830 (j20D238): sWeightToDamageTable
		  Implements: very slight changes to Low Kick formula
+ 250890 (j20D298): 00 -> 04 (sTerrainToType)
		  Implements: Camouflage in link battles = Normal-type -> Ground-type
		  Note: This is only true in Gen 5
+ 2526EC-2528BC (j20F0F4-j20F2C4): usable item data
  2528BC (j20F2C4): gItemEffectTable
		  Implements: modern healing item values, X items +1 -> +2, X Sp. Def, X Evasiveness, regional treats, other unknown items
= 252BC8 (j20F5D0): gTMHMLearnsets
= 254784 (j21118C): gBaseStats
= 257494-259754 (j213E9C-j21615C): mon level-up learnsets
= 259754 (j21615C): gEvolutionTable
= 25D7B4 (j21A1BC): gLevelUpLearnsets
+ 25DEEE (j21A8F6): 00 00 -> 1D 09 (sHoldEffectToType)
		  Implements: Fairy Wing, Fairy Gem, Roseli Berry
= 25E026 (j21AA2E): sDeoxysBaseStats
= ?????? (j220C8E): C6 EA -> F9 05 (on some trade-related screen, change "Lv" text to the "Lv" single character; unclear how to translate this to english - check the trade screens when full version)
= ?????? (j220C9B): 00 -> FF (on some trade-related screen, remove space after jp "and"; unclear how to translate this to english - check the trade screens when full version)
= 261FA5 (j220E79): 03 -> 02
  261FB5 (j220E89): 12 -> 11
		  Implements: move some kind of windows on some trade-related screen left (test when actually possible to test)
= 26CF8C (j22D2F8): gIngameTrades
= EA1B68 (j230004): a tileset graphic
= 26D37C-283BB0 (j230204-j246FF0): tileset gfx
= 29F6C8-2D415C (j263778-j29820C): tileset metatiles
= 2D4A94 (j298B44): tilesets
= 2D5224-34EB8C (j2992D4-j312C3C): map data
= 34EB8C (j312C3C): gMapLayouts
= 34F188-352004 (j313238-j3160B4): map headers
= 352004 (j3160B4): gMapGroups
= 352F0B (j316FBB): 60 -> 70
  352F16 (j316FC6): 1D -> 1C
		  Implements: Part of MetatileAttributes refactor
= 354C28 (j318CB0-j3192F0): door animation gfx
= 35B550-35B570 (j31F5D8-j31F5F8): door animation palettes
= 35B5FC (j31F684): A3 -> AC
  35B608 (j31F690): AC -> A3
		  Implements: swap two doors (later)
= 35B968-35B9A8 (j31F9F0-j31FA30): an overworld event object sprite palette
= 35BB68-39FBC0 (j31FBF0-j363C50): overworld event object sprite gfx
= 3A00A0 (j364128): gEventObjectGraphicsInfoPointers
= 3A3BB0-3A5158 (j367C38-j3691E0): overworld event object graphics info
+ 3A51AC (j369234): 02 -> 0E (sEventObjectSpritePalettes)
		  Implements: change an event object palette id (?)
= 3AE340-3BF3F8 (j372370-j383410): map event data
! EAB6C4 -> 1D97800 (3835A4 old, D97800 new) - title screen pokemon logo palette
! EAB8C4 (383604 old, F00000 new) - title screen pokemon logo
! EAD390 -> 8E0B00 (385018 old, 8E0B00 new) - title screen pokemon logo tilemap
= EAD5E8 -> F03730 (385228 old, F03730 new) - title screen charizard palette
= EAD608 (385248 old, 8E38A0 new) - title screen charizard
= EADEE4 (385B24 old, F03460 new) - title screen charizard tilemap
= EAE094 (385CD8 old, F03020 new) - title screen background palette
= EAE0B4 (385CF8 old, F01A00 new) - title screen copyright
= EAE374 (385FDC old, F03050 new) - title screen background tilemap
= 3BF58C -> 783890 (3860F0 old, 783890 new) - changes the title screen background to (currently red) [wait for rest of title screen]
+ EAE4A8 (j3861D0): japanese "fire red" logo (ignore)
= 3BF77C (j386500): title screen background fire palette
= 3C683F (j38D5C3): 12 -> 00 (turns the sand black in overworld sandstorms?)
+ 3C6AC8-3C6FC8 (j38D944-j38DE44): graphics for trainer "!" and variants (part 1)
+ BC6FC8-BC7248 (j38DE44-j38E0C4): graphics for trainer "!" and variants (part 2)
= 3C73A0-3C9CB8 (j38E21C-j390B34): wild mon data
= 3C9CB8 (j390B34): gWildMonHeaders
= 3CAFD0-3CB3D0 (j391E4C-39224C): flashing screen during pkmn center healing [change when pkmn center gfx change]
+ 3CC350 (j3931CC): 3B 9E 41 08 46 9E 41 08 -> 36 9E 41 08 EE 00 72 08 (remove Mono as an audio option entirely)
= 3CD2E0 (j39501C): badges turn blue after some requirement [change badge gfx first]
= 3CD5E8 (395324 old, 90C190 new) - badges
= 3CD8AD (j3955E9): 08 -> 02 (change palette for trainer pic on card (possibly male only)) 
! 3CDAB8 (j3957F0): now-unused box selection popup gfx (ignore) [would need to merge en and pd changes here, but it's pointless anyway]
! 3CE2B8 (j395FF0): now-unused box selection popup gfx (ignore)
= 3CE5FC -> 1396D18 (396334 old, 396D18 new) - tilemap for left window in main box screen
= E9C3F8 -> 1396334 (396470 old, 396334 new) - palette for left window in main box screen
= E9C418 -> 1396354 (396490 old, 396354 new) - palette for "PKMN DATA" header in main box screen
= E9C3D8 -> 1396374 (3964B0 old, 396374 new) - palette for "Party Pokemon" dropdown in main box screen
= 3CE738 -> 1396394 (3964D0 old, 396394 new) - palette for bottom of left window in main box screen
= 3CE758 -> 13963B4 (3964F0 old, 3963B4 new) - palette for bottom of left window in main box screen during "Move Items"
= E9C438 -> 1396470 (396510 old, 396470 new) - box gfx [need to convert correctly]
= E9CAEC -> 1396E04 (396BD0 old, 396E04 new) - tilemap for "Party Pokemon" dropdown in main box screen
+ 3CE7F0 (j396CF8): box cursor palette
+ 3CE810 -> 2207D0 (396D18 old, 2207D0 new) - removes the zaps from the sides of "PKMN DATA" header in main box screen
= 3CEC40-3D29D0 (j397148-j39AED8): box wallpaper gfx/palettes
+ 3D2AD0 (j39AFD8): box scroll arrows
+ 3D2BCC (j39B0D4): box cursor palette on multiselect mode
+ 3D2BEC (j39B0F4): box cursor
+ 3D33EC (j39B8F4): box cursor shadow
= 3D3E80 (j39C388): gMonIconPaletteIndices
= 3D4ECC-3DB028 (j39D3D4-j3A06F8): item descriptions
= 3DB028 (j3A06F8): gItems
= 3DFD50-3E04B0 (j3A4E44-j3A557C): multichoice list string pointers
= 3E04B0-3E06B8 (j3A557C-j3A577C): gMultichoiceLists
+ ?????? (j3A577C): multichoice list widths (autogenerated in en, so this is useless)
= 3E0780 (3A5884 old, 504AB0 new) - aerodactyl fossil gfx
= 3E0FA0 (j3A60A4): kabutops fossil gfx
= 3E17A0 (j3A68A4): museum fossil palette
+ ptr 3E1980 -> 38A428 (3A7484 old, 34E4B0 new) - copy of Blue sprite for naming screen -> actual Blue sprite
+ ptr E98004 -> 36D888 (3A7DA4 old, 331910 new) - copy of Blue sprite palette for naming screen -> actual Blue sprite palette
= ?????? (j3A8560): 78 -> 79 (remove space before jp "'s nickname?" in naming screen to offset extra letter in name, unclear how to implement in en)
+ 3EE008 (j3B4DB0): pc box mon markings palette
= 3EECFC-3EF23C (j3B5A48-j3B5DC4): map location names
= 3EF27C (j3B5E04): palette for head icon on map (male)
= 3EF29C (j3B5E24): palette for head icon on map (female)
= 3EF31C (j3B5EA4): palette for town map "return" button
= 3EF524 (3B60AC old, 8E1C70 new) - head icon on map (male)
= 3EF59C (3B6124 old, 8E1CF0 new) - head icon on map (female)
= 3EF61C (3B61A4 old, 8DC3D0 new) - town map gfx
= 3F089C -> 8DD390 (3B7424 old, 8DD390 new) - town map tilemap
= 3F0AFC -> 77C4F0 (3B7684 old, 77C4F0 new) - town map tilemap (one island)
= 3F1B3C (j3B86C4): map points of interest name/description table
= 3F1CAC (j3B8834): map location name table
= 3F1E60 (j3B89E8): map location position table
= 3F2178 (j3B8D00): map location dimensions table
= 3F2490 (j3B9018): map paths tilemap (main region)
= 3F2724 (j3B92AC): map paths tilemap (subregion 1)
= 3F2EE0 (j3B9A68): fly locations table
= 3F5F26 (j3BCA86): table for warp0_in_pokecenter
		  Implements: Some kind of link functionality; only the map at (0, 4) returns TRUE, removing all Pokemon Centers from the list
+ 3FB219-3FDF3C (j3C1D85-j3C3F08): battle strings
+ 3FDF3C (j3C3F08): gBattleStringsTable
+ 3FE57C (j3C4548): D5 00 D6 00 -> D7 00 D8 00 (gStatUpStringIds)
		  Implements: makes room for "drastically"/"severely"
+ 3FE602, 3FE608 (j3C45CE, j3C45D4): 10 01 -> 8B 01 (gWeatherContinuesStringIds)
		  Implements: overworld hail msg
= 3FEC94 (j3C4B28): gSaveSectionOffsets [need to merge en and pd changes here]
= 3FFA44 (j3C5C1C): window templates for learning moves [need to merge en and pd changes here]
= 3FFA8C (j3C5C64): another window template for learning moves [need to merge en and pd changes here]
= 3FFA94 (j3C5C6C): a ListMenuTemplate for learning moves [need to merge en and pd changes here]
= 405DA4 (j3CBF7C): intro gengar palette
= 405DC4 (3CBF9C old, E2A880 new) - intro gengar front
= 40644C -> 1E2B180 (3CC624 old, E2B180 new) - intro gengar front tilemap
= 406634 (j3CC80C): intro nidorino back palette
= 406654 (3CC82C old, E2BB10 new) - intro nidorino back
= 4071D0 -> 1E2C570 (3CD3A8 old, E2C570 new) - intro nidorino back tilemap
= 407B9C (3CDD74 old, 96A430 new) - intro gengar back frame 1
= 408D98 -> 96B5E0 (3CEF70 old, 96B5E0 new) - intro gengar back tilemap
= 40926C (3CF444 old, E2B390 new) - intro gengar side
= 4096AC (j3CF884): intro nidorino front palette
= 4096CC (3CF8A4 old, E2B760 new) - intro nidorino side
= 409D20 (3CFEF8 old, 96BB30 new) - intro gengar back frame 2
= 40A3E4 (3D05BC old, 9690C0 new) - intro nidorino animation
= 40CB8C (3D3EA8 old, 8F8780 new) - credits charizard 1
= 40D228 (3D4544 old, 8E99B0 new) - credits charizard 2
= 40E158 (3D5474 old, 8F8C70 new) - credits venusaur 1
= 40E904 (3D5C20 old, 8F7F60 new) - credits venusaur 2
= 40F240 (3D655C old, 8F9260 new) - credits blastoise 1
= 40F944 (3D6C60 old, 8F7640 new) - credits blastoise 2
= 410198 (3D74B4 old, 204D10 new) - credits pikachu 1
= 4105B4 (3D78D0 old, 427E80 new) - credits pikachu 2
= 410E10 (j3D865C): credits red palette
= 410E30 (3D867C old, 428700 new) - credits red
= 411BF8 (j3D9444): credits leaf palette
= 411C18 (j3D9464): credits leaf
= 4129A0 (j3DA1EC): credits blue palette
= 4129C0 (3DA20C old, 7FC460 new) - credits blue
= 415DB8, 415DD1-415F51 (j3DD4DE, j3DD4FA-j3DD5F3): set to all FF
		  Implements: removes most text from the main dex screen
		  Relies on: layout rework to make this not look broken
= 4178EB-4180A7 (j3DE850-j3DEDC6): multichoice list strings [spoilers probably]
+ 4185AD-418690 (j3DF1A5-j3DF21C): storage system option descriptions
	+ 4185AD (j3DF1A5) - "You can withdraw a Pokemon if you have any in a Box." (in jp, it changes it to this from "Y'can withdraw a Pokemon if ya got any in a Box." so no english change needed)
	+ 4185E2 (j3DF1C0) - "You can deposit your party Pokemon in any Box." (in jp, it changes it to this from "Y'can deposit yer party Pokemon in any Box." so no english change needed)
	+ 418611 (j3DF1D7) - "You can move Pokemon that are stored in any Box." (in jp, it changes it to this from "Y'can move Pokemon that're stored in any Box." so no english change needed)
	+ 418642 (j3DF1F3) - "You can move items held by any Pokemon in a Box or your party." (in jp, it changes it to this from "Y'can move items held by any Pokemon in a Box or yer party." so no english change needed)
	+ 418681 (j3DF216) - "See you later!" (in jp, it changes it to this from "Y'all come back now, y'hear?" so no english change needed)
= 419B44-419C0B (j3E017D-j3E01FB): Egg Watch strings (use less line breaks) [requires layout change]
= 41ADC8-41B285 (j3E0D84-j3E107E): quest log strings
	= 41ADC8 (j3E0D84) - "Played a lot of games at the Rocket Game Corner in [LOCATION]."
	= 41AE1E (j3E0DBB) - "[PLAYER] left Prof. Oak's Pokemon Research Lab."
	= 41AF0C (j3E0E3D) - "Took on [LOCATION] Gym Leader [NAME]'s [PKMN] with [PKMN] and won [BADGE]!"
	= (the rest are pointed to by a table in 456ACC (j416F64))
+ 41F1C8 (j3E2E6C): out-of-battle text window gfx
+ 41F462 (j3E3106): 01 -> 00 (reduce letter spacing for font 2, doesn't seem to do anything)
= 420D98-436854 (j3E4A3C-j3FA4F8): map preview screen gfx
= 43E9E8 (j40268C): map preview screen gfx table
+ 440274 -> 1E98420 (404928 old, E98420 new) - regional dex gfx
+ 4403AC -> 1E98420 (404A60 old, E98420 new) - national dex gfx
+ 4404C8 (j404B7C): regional dex palette
+ 4406E0 (j404D94): national dex palette
= 443620 (407FB8 old, E016A0 new) - pokedex map (main region)
+ 443910 (j4082A8): remove pokedex map (subregion 1)
= 443FC0 (j408958): table of mons in alphabetical order
= 4442F6 (j408C8E): table of mons in type order
= 4445FA (j408F92): table of mons from lightest to heaviest
= 4448FE (j409296): table of mons from shortest to tallest
= 44E850 (j40E2D0): gPokedexEntries
= 451ED1, 451ED9 (j410D39, j410D41): 0F -> 0D (change the dex border palette, currently just makes it black)
= 451F54-451F6C (j410DBC-j410DD4): moves dex window, currently just makes it off the right side of the screen
+ 451F78 (j410DE0): 09 -> 0E (does something to dex menu, unclear what)
+ 4520EC (j410F54): 0B -> 0A (dex scroll down arrow disappears early))
= 45216D (j410FD5): 02 -> 1E (moves pokedex list left) [too far]
= 452182 (j410FEA): 09 -> 0C (currently just breaks scrolling on dex list
= 45219C (j411004): 07 00 08 -> 00 00 01 (makes the pokemon names on the dex list disappear)
= 4521B5, 4521B8 (j41101D, j411020): C8 -> A0 (move a dex scroll arrow pair left)
+ 4521ED (j411055): 01 02 -> 11 03
  4521F5 (j41105D): 05 02 -> 15 03
  4521FD (j411065): 02 07 -> 01 03 (jp 03 07 -> 02 03)
  452206 (j41106E): 02 -> 14
  45220D (j411075): 05 05 -> 15 06
		  Implements: moves the mon icon, name, type on the back of the dex card to the top right
= 4524D0 (j411338): table of mons in habitat order
= 4527D4 (j41163C): table of pages on the habitat list
= 452C4C (j411AB4): table of categories on the habitat list
= E95DBC (j411B7C): type icon palette
= E95DDC (j411B9C): type icon gfx [need to figure out how to add another type]
= 452C94 -> 1411C1C (411AFC old, 411C1C new) - tilemap for TM data in TM case
+ 453104 (j413FAC): expand sell windows
= 45318C (j414034): sVsSeekerData
= 459B60 (j4192F0): gTutorMoves
= 459B7E (j41930E): sTutorLearnsets
= 459EC4 (j419654): unknown struct (party menu related) [need to merge en and pd changes here]
= 459EE4 (j419674): unknown struct (party menu related) [need to merge en and pd changes here]
= 459F04 (j419694): unknown data table (party menu related) [need to merge en and pd changes here]
= 45A010 (j4197A0): some party menu windows (moved, resized) [only the first 0x30 bytes to avoid overwriting en changes]
= 45A050 (j4197E0): some party menu windows (moved, resized, remapped) [only the first 0x30 bytes to avoid overwriting en changes]
= 45A090 (j419820): some party menu windows (moved, resized, remapped) [only the first 0x30 bytes to avoid overwriting en changes]
= 45A0D0 (j419860): some party menu windows (moved, resized, remapped)
= 45A180 (j419910): tilemap for a party menu background rectangle
= 45A1C6 -> 45A1BC (419956 old, 41994C new) - tilemap for a party menu background rectangle
= 45A20C -> 45A180 (41999C old, 419910 new) - tilemap for a party menu background rectangle
= 45A242 -> 45A1C8 (4199D2 old, 419958 new) - tilemap for a party menu background rectangle
= 45A278 -> 45A210 (419A08 old, 4199A0 new) - tilemap for a party menu background rectangle
= 45A5A4 (j419D34): copy of gTMHMMoves (possibly unused)
= 45A80C (j419F9C): gTMHMMoves
= 460ED4 (j4231E8): intro leaf palette
= 460F14 (423228 old, 8DBCC0 new) - intro leaf
= 4615FC (j423910): intro red palette
= 46163C (423950 old, 68AE40 new) - intro red
= 461CD0 (j423FE8): intro oak palette
= 461D14 (424028 old, 8DEF50 new) - intro oak
= 4623AC (j4246C0): intro blue palette
= 4623EC (424700 old, 8DD7B0 new) - intro blue
= 463190 (j42549C): some tm case windows (moved, resized, remapped) [need to merge en and pd changes here]
= 4631E0 (j4254EC): some tm case window (remapped) [need to merge en and pd changes here]
+ 46324A (j4255D6): 00 00 -> 10 01 (fairy-type tm color)
= 463580 (j42590C): pokedex map area coordinates
= E9B310 (j425A4C): pokemon summary screen main palette
= E9B3D0 (j425B0C): pokemon summary screen shiny palette
= 463700 (j425B6C): unknown palette (pokemon summary screen related)
= E9A460 (j425B8C): pokemon summary screen first page gfx [need to convert correctly]
= E9A460 -> 14F3040 (42631C old, 4F3040 new) - pokemon summary screen second page gfx [need to convert correctly]
= 463720 (j426C38): palette for move selection cursor on pokemon summary screen
= 463740 (j426C58): left half of move selection cursor on pokemon summary screen
= 46386C -> 1426D80 (426D84 old, 426D80 new) - right half of move selection cursor on pokemon summary screen
= 463B00 (j427440): palette for pokerus icon
= 463B20 -> 14267BC (427460 old, 4267BC new) - pokerus icon
= 463B44 (j427484): unknown palette (pokemon summary screen related)
= E9B598 (j4274C8): pokemon summary screen first page tilemap
= E9B750 -> 1427654 (427680 old, 427654 new) - pokemon summary screen second page tilemap
= E9B950 -> 1427828 (427870 old, 427828 new) - pokemon summary screen third page tilemap
= E9BA9C -> 1427950 (4279DC old, 427950 new) - move summary page tilemap
= E9BBCC -> 1427AF4 (427B0C old, 427AF4 new) - (unknown tilemap, pokemon summary screen)
= 463B88 -> 463BC8 (427C40 old, 427C80 new) - pokemon summary screen background tilemap
= 463C80 -> 463BC8 (427D38 old, 427C80 new) - pokemon summary screen background tilemap
= 463F0C/463F2C (j42D298/j42D2B8): move name, level, gender up on pokemon summary screen
= 463F3C (j42D2C8): some summary screen windows (moved, resized, remapped) [need to merge en and pd changes here]
= 463F5C (j42D2E8): some summary screen windows (moved, resized, remapped) [need to merge en and pd changes here]
= 463F7C (j42D308): rearrange the move summary page, most notably switching the two halves
+ 464128 (j42D4B4): help system palette
= 464148 (j42D4D4): pokedex map area ids
= 4643D8 (j42D760): some berry pouch windows (moved, resized, remapped) [need to merge en and pd changes here]
= 4643F8 (j42D780): some berry pouch window (remapped) [need to merge en and pd changes here]
= 464440 (j42D788): some berry pouch window (remapped) [need to merge en and pd changes here]
= 464804 (j42DB8C): some shop menu windows (moved, resized, remapped) [need to merge en and pd changes here]
= 46483C (j42DBC4): some tm shop menu windows (moved, resized, remapped) [currently broken]
+ 46487C (j42DC04): some shop menu window (remapped) [unclear what this did]
= 464974 (j42DCFC): palette for slot reel psyduck and pikachu
= 4649D4 (j42DD5C): palette for slot reel shellder
= 4649F4 (j42DD7C): palette for slot reel magnemite
= 464A14 (42DD9C old, 919B80 new) - slot machine reels
= 46504C (j42E3D4): palette for slot machine clefairy
= 46506C (42E3F4 old, 919660 new) - slot machine clefairy
= 4665C0 (j42F948): palette for slot machine score icons
= 466620 (42F9A8 old, 922730 new) - slot machine score icons
+ 470B0C (j43E744): sign message border gfx
+ 471DEC (j43FA24): text border palette
= 479D34 (j447938): unknown struct (trainer tower related) [figure this out later]

! 489C8C-6FC03C: [sound_data, go through here thoroughly after full jp release; jp 44E8CC-6C0C7C]

+ D004D8 (jC004D8): gBattleTextboxPalette
= D0051C (C0051C old, EB8990 new) - gFile_graphics_interface_menu_map_tilemap [need to merge en and pd changes here]
+ D0DD94 (jC0DD94): Amnesia "?" -> "!"
+ D11B84 (jC11B84): HP bubble palette
+ D11BA4 (jC11BA4): HP bar palette
+ D11BC4 (jC11BC4): HP bar gfx [need to convert correctly] [probably can convert, check]
+ D12404 (jC12404): status effect and pokeball icons [need to convert correctly] [probably can convert, check]
+ D1F340 (C1F340 old, 11266CC new) - player singles HP bubble gfx 1
+ D1F604 (C1F604 old, 1126A50 new) - opponent doubles HP bubble gfx 1
+ D1F794 (C1F794 old, 1126C8C new) - player doubles HP bubble gfx
+ D1F928 (C1F928 old, 1126EBC new) - opponent doubles HP bubble gfx 2
+ D1FABC (C1FABC old, 11270F0 new) - player singles HP bubble gfx 2
= D3018C-E48D58 (jC3018C-jD48D58): mon icons
= E49094-E69EBC (jD49094-jD69E6C): trainer frontsprites/palettes
= E69EBC-E76F5C (jD69E6C-jD76F0C): trainer backsprites/palettes
+ E76F5C (jD76F0C): "?" mon icon
+ E7BB04 (D7BAB4 old, 11273E8 new) - EXP bar gfx
= E82700 -> 924320 (D826B0 old, 924320 new) - party menu background gfx
= E829C8 (jD82978): party menu palette
= E82BE8 (D82B98 old, 924150 new) - party menu pokeball gfx
= E8362C (D83638 old, 923050 new) - bag gfx (male)
= E83DBC (D83DC8 old, 923860 new) - bag gfx (female)
+ E84560 (D8456C): bag palette
+ E85068 -> 251A80 (D85074 old, 251A80 new) - tm case tms palette
= E87028-E93748 (jD87050-jD93770): item icons/palettes

entirely new things:
+ 20E550: Move_Shadow_Claw (see animscripts.txt)
		  Implements: Shadow Claw animation
+ 20E5A0: Move_Dark_Cutter (see animscripts.txt)
		  Implements: Dark Cutter animation
+ 221B78: movement action function 0xC2
  221B94: movement action function 0xC3
  221BB0: movement action function 0xC4  
  221BCC: movement action function 0xC5 (see 271disasm)
		  Implements: works like regular walking, but the directions are different (south/west = southwest, north = northwest, east = southeast)
+ 221BE8: movement action function 0xC6
  221C04: movement action function 0xC7
  221C20: movement action function 0xC8
  221C3C: movement action function 0xC9 (see 272disasm)
		  Implements: works like regular walking, but the directions are different (north/east = northeast, south = southeast, west = northwest)
+ 221D08: movement action function 0xD2
  221D24: movement action function 0xD3
  221D40: movement action function 0xD4
  221D5C: movement action function 0xD5 (see 273disasm)
		  Implements: works like regular running, but the directions are different (south/west = southwest, north = northwest, east = southeast)
+ 221D78: movement action function 0xD6
  221D94: movement action function 0xD7
  221DB0: movement action function 0xD8
  221DCC: movement action function 0xD9 (see 274disasm)
		  Implements: works like regular running, but the directions are different (north/east = northeast, south = southeast, west = northwest)
+ 221F88: movement action function 0xDA
  221FA4: movement action function 0xDB
  221FC0: movement action function 0xDC
  221FDC: movement action function 0xDD (see 275disasm)
		  Implements: works like regular "ministep" speed 1 (?), but the directions are different (south/west = southwest, north = northwest, east = southeast)
+ 221FF8: movement action function 0xDE
  222014: movement action function 0xDF
  222030: movement action function 0xE0
  22204C: movement action function 0xE1 (see 276disasm)
		  Implements: works like regular "ministep" speed 1 (?), but the directions are different (north/east = northeast, south = southeast, west = northwest)
+ 222068: movement action function 0xCA
  222084: movement action function 0xCB
  2220A0: movement action function 0xCC
  2220BC: movement action function 0xCD (see 277disasm)
		  Implements: works like regular "ministep" speed 0 (?), but the directions are different (south/west = southwest, north = northwest, east = southeast)
+ 2220D8: movement action function 0xCE
  2220F4: movement action function 0xCF
  222110: movement action function 0xD0
  22212C: movement action function 0xD1 (see 278disasm)
		  Implements: works like regular "ministep" speed 0 (?), but the directions are different (north/east = northeast, south = southeast, west = northwest)
+ 222358: movement action function 0xBE
  22237E: movement action function 0xBF
  2223A4: movement action function 0xC0
  2223CA: movement action function 0xC1 (see 279disasm)
		  Implements: works like regular jumping (speed 0), but in the opposite direction
+ 222404: movement action function 0xBA
  22242A: movement action function 0xBB
  222450: movement action function 0xBC
  222478: movement action function 0xBD (see 280disasm)
		  Implements: works like regular jumping (speed 2), but in the opposite direction
+ 222630: movement action function 0xB6
  22264C: movement action function 0xB7
  222668: movement action function 0xB8
  222684: movement action function 0xB9 (see 281disasm)
		  Implements: works like regular walking (speed 1), but in the opposite direction
+ 2226B0: movement action function 0xB2
  2226CC: movement action function 0xB3
  2226E8: movement action function 0xB4
  222704: movement action function 0xB5 (see 282disasm)
		  Implements: works like regular walking (speed 0), but in the opposite direction
+ 222818: movement action function 0xAE
  222832: movement action function 0xAF
  22284C: movement action function 0xB0
  222866: movement action function 0xB1 (see 283disasm)
		  Implements: works like regular slow-walking, but in the opposite direction
+ 22292C: movement action function 0xAA
  222946: movement action function 0xAB
  222960: movement action function 0xAC
  22297A: movement action function 0xAD (see 284disasm)
		  Implements: works like regular slow-walking (again? maybe this is wrong), but in the opposite direction
+ 3C44F4: E8 00 E9 00 E5 00 ED 00 F0 00 F3 00 EE 00 F4 00 -> E8 00 E9 00 E5 00 ED 00 F0 00 F3 00 EE 00 F1 00 F4 00 (part of DoFieldEndTurnEffects changes)
+ 814082: Move_Flare_Blitz (see animscripts.txt)
		  Implements: Flare Blitz animation
+ 8B6040: Move_Sludge_Wave (see animscripts.txt)
		  Implements: Sludge Wave animation
+ EB7E00: atkF8_doubledamageatlowhp (see 263disasm)
		  Implements: new battle script command that doubles damage if the given mon is at less than half HP
+ EB7E60: atkF9_setmondata (see 264disasm)
		  Implements: new battle script command that sets any given data for the given mon
+ EB7EB0: atkFA_swaporcopymondata (see 265disasm)
		  Implements: new battle script command that swaps, copies, or averages any given data for the attacker and target, depending on case (0 = average the two and set both to that average; 1 = swap the two; 2 = set the attacker's to the target's; 3 = set the target's to the attacker's)
+ EB7F70: atkFB_swapdataonmon (see 266disasm)
		  Implements: new battle script command that swaps the two given values for the given mon
		  Glitch?: first param controls data size and battler index, second param is never read; obviously one of those is meant for the second param
+ EB7FC0: atkFC_jumpifitem (see 267disasm)
		  Implements: new battle script command that jumps if the held item comparison is true, depending on case (0 = equal, 1 = not equal, 2 = less than, 3 = greater than)
+ EB8030: atkFD_jumpifnocommontype (see 268disasm)
		  Implements: new battle script command that jumps if the attacker and target don't share any types
+ EB8090: atkFE_statbooststomovepower (see 269disasm)
		  Implements: new battle script command that either counts the stat boosts (case 0) or counts the boosted stats (case 1), then adds that to the base power
		  Note: this isn't the way it works in the actual games, stat drops should subtract from the number (for case 0, what even is case 1?)
+ EB8100: atkFF_exec (see 270disasm)
		  Implements: new battle script command that executes the given ASM function then continues running the battle script
+ FE5000: ItemUseOutOfBattle_AbilityChange (see 287disasm)
		  Implements: field function for Ability Capsule
		  Note: was using the old ability name table, fixed for en
+1051320: BattleScript_EffectAllStatsDownHit (see movescripts.txt)
		  Implements: (move that has a chance to lower all of the target's stats, aka Ancient Power in reverse)
		  Note: stat boost anim was wrong, see movescripts.txt
		  Note: fixed to end move instead of "stats can't be lowered", see movescripts.txt
+1051480: BattleScript_EffectDoubleDamageAtLowHP (see movescripts.txt)
		  Implements: Brine/(one other move), [move272]
+10514A0: BattleScript_EffectChangeTargetType (see movescripts.txt)
		  Implements: Soak/[move227]/[move277]/[move279]
+1051580: BattleScript_EffectZombieTouch (see movescripts.txt)
		  Implements: Zombie Touch
+1051700: BattleScript_EffectBarrierBlast (see movescripts.txt)
		  Implements: Barrier Blast
		  Note: Also added in the Brick Break changes from my battle message overhaul
+1051790: BattleScript_EffectBarrierAttack (see movescripts.txt)
		  Implements: Barrier Attack
+10517C0: BattleScript_EffectDinosword (see movescripts.txt)
		  Implements: Dinosword
		  Note: message scrolls off too soon, maybe add wait
+1051840: BattleScript_EffectRevelationDance (see movescripts.txt)
		  Implements: Revelation Dance
		  Relies on: SetTypeToBattlerType1 (jEB8340, e1EB8340)
+1051850: BattleScript_EffectSpreadStatDownHit (see movescripts.txt)
		  Implements: Bulldoze, Sandblast
		  Relies on: moveend refactor
		  Glitch?: might hit underwater foes, check
+1051870: BattleScript_EffectSpreadStatusHit (see movescripts.txt)
		  Implements: Discharge, Lava Plume, Sludge Wave
		  Relies on: moveend refactor
		  Glitch?: might hit underwater foes, check
+1051910: BattleScript_EffectSpAtkSpDefDown (see movescripts.txt)
		  Implements: (move that lowers Sp. Atk and Sp. Def)
		  Relies on: BattleScript_LowerOneOfMultipleStats
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1051970: BattleScript_EffectHoneClaws (see movescripts.txt)
		  Implements: Hone Claws
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1051C50: BattleScript_EffectPsychoShift (see movescripts.txt)
		  Implements: Psycho Shift
		  GLITCH!: Poison and Sleep cases are reversed
		  Note: Removes status before checking for most failures, is that how it works?
		  Note: Messages might be different than gen 7, check
+1051D00: BattleScript_EffectPowerTrick (see movescripts.txt)
		  Implements: Power Trick, Wonder Trick
+1051D40: BattleScript_EffectAcrobatics (see movescripts.txt)
		  Implements: Acrobatics
+1051D50: BattleScript_EffectMetalBurst (see movescripts.txt)
		  Implements: Metal Burst
!1051D80: BattleScript_EffectCalcWithExtraBoosts (see movescripts.txt)
		  Implements: (move that calculates damage as if any Defense boosts were added to Sp. Atk, then has a 20% chance to raise Def and Sp. Atk); [moveDD]
		  Note: on paper, it looks like stat drops are factored in inconsistently (only if one stat is above +0) - for example ([moveDD]), +0 Atk/-2 Sp. Atk results in +0 Atk, -3 Atk/-2 Sp. Atk results in -3 Atk, and +3 Atk/-2 Sp. Atk results in +1 Atk
		  Glitch?: Might crash if combined boosts are greater than +6 (or less than +0 if one of them is positive)
		  Glitch?: [moveDD] crashes if Atk is at +6 but Sp. Atk isn't
		  GLITCH!: just crashes in general (understandable, this isn't fully implemented)
+1052D20: BattleScript_EffectChangeAbilityToMegaLauncherThenHit (see movescripts.txt)
		  Implements: Launcher Arm
		  Note: String doesn't stay long enough
+1053940: BattleScript_EffectUseExplosionInstead (see movescripts.txt)
		  Implements: (move that just uses Explosion instead)
+1053A90: BattleScript_EffectVCreate (see movescripts.txt)
		  Implements: V-Create/Nova Inferno
+1053AA0: BattleScript_EffectBlizzard (see movescripts.txt)
		  Implements: Blizzard has its own effect byte that it shares with Starfreeze, unclear why
+1053AA8: BattleScript_EffectSuckerPunch (see movescripts.txt)
		  Implements: Sucker Punch
+1053AB8: BattleScript_EffectPayback (see movescripts.txt)
		  Implements: Payback
+1053CB0: BattleScript_EffectHammerArm (see movescripts.txt)
		  Implements: Hammer Arm
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
+1053CE0: BattleScript_EffectCloseCombat (see movescripts.txt)
		  Implements: Close Combat
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1053D30: BattleScript_EffectDefensiveStatAlwaysDownHit (see movescripts.txt)
		  Implements: Diamond Blast, Giga Spark
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
+1053DB0: BattleScript_EffectTyphoon (see movescripts.txt)
		  Implements: Typhoon
		  Relies on: BattleScript_DoDamageFunction, BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1053E90: BattleScript_EffectDizzyWhirl (see movescripts.txt)
		  Implements: Dizzy Whirl
		  Relies on: BattleScript_PlayStatChangeAnim
+1053EE0: BattleScript_EffectUserAtkDefUp2SpeedDown (see movescripts.txt)
		  Implements: (move that gives +2 Attack +2 Defense -1 Speed to user)
		  Relies on: BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1055600: BattleScript_EffectCoil (see movescripts.txt)
		  Implements: Coil
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1055670: BattleScript_EffectQuiverDance (see movescripts.txt)
		  Implements: Quiver Dance
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+10556E0: BattleScript_EffectShellSmash (see movescripts.txt)
		  Implements: Shell Smash
		  Relies on: BattleScript_PlayStatChangeAnim
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+10557E0: BattleScript_EffectStretch (see movescripts.txt)
		  Implements: Stretch
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+1055850: BattleScript_EffectThicketSlip (see movescripts.txt)
		  Implements: Thicket Slip
		  Relies on: BattleScript_PlayStatChangeAnim, BattleScript_CantRaiseMultipleStats_Unknown
		  Note: stat-change animation color is only the first stat, fix this to be gray later
+10558A0: BattleScript_EffectPartiallyBypassProtect (see movescripts.txt)
		  Implements: (a Ground-type move that if used on Protect, does half damage and harshly lowers user's Sp. Atk), Feint
+1080000: extra battle strings table
+11AADD0: Move_Zen_Headbutt (see animscripts.txt)
		  Implements: Zen Headbutt animation
+11BA7EF: BattleScript_EffectTripleHit (see movescripts.txt)
		  Implements: Metal Pincer
+1300048: Move_Fin_Smack (see animscripts.txt)
		  Implements: Fin Smack animation
+1300090: Move_Moonblast (see animscripts.txt)
		  Implements: Moonblast animation
+1300110: Move_Fairy_Wind (see animscripts.txt)
		  Implements: Fairy Wind animation
+13002F8: Move_Pyrokinesis (see animscripts.txt)
		  Implements: Pyrokinesis animation
+1300428: Move_??? (see animscripts.txt)
		  Implements: [move274] animation
+1300490: Move_Power_Up_Punch (see animscripts.txt)
		  Implements: Power-Up Punch animation
+13004E8: Move_Jet_Shoot (see animscripts.txt)
		  Implements: Jet Shoot animation
+1300578: Move_??? (see animscripts.txt)
		  Implements: [move257] animation
+13006A8: Move_Splatter (see animscripts.txt)
		  Implements: Splatter animation
+13006F8: Move_Metal_Horn (see animscripts.txt)
		  Implements: Metal Horn animation
+1300800: Move_??? (see animscripts.txt)
		  Implements: [move245] animation
+1300890: Move_Play_Nice (see animscripts.txt)
		  Implements: Play Nice animation
+13008D8: Move_Nuzzle (see animscripts.txt)
		  Implements: Nuzzle animation
+1300928: Move_??? (see animscripts.txt)
		  Implements: [move283] animation
+1300950: Move_Cotton_Guard (see animscripts.txt)
		  Implements: Cotton Guard animation
+1300A10: Move_Dragon_Bite (see animscripts.txt)
		  Implements: Dragon Bite animation
+1300B08: Move_Draining_Kiss (see animscripts.txt)
		  Implements: Draining Kiss animation
+1300B80: Move_Trick_Room (see animscripts.txt)
		  Implements: Trick Room animation
+1300B98: Move_Soak (see animscripts.txt)
		  Implements: Soak animation
+1300BD8: Move_Dreamy_Mist (see animscripts.txt)
		  Implements: Dreamy Mist animation
+1300C40: Move_Zombie_Touch (see animscripts.txt)
		  Implements: Zombie Touch animation
+1300C90: Move_??? (see animscripts.txt)
		  Implements: [move23F] animation
+1300D50: Move_??? (see animscripts.txt)
		  Implements: [move227] animation
+1300DC8: Move_Neurotoxin (see animscripts.txt)
		  Implements: Neurotoxin animation
+1300E78: Move_??? (see animscripts.txt)
		  Implements: [move247] animation
+1301028: Move_??? (see animscripts.txt)
		  Implements: [move221] animation
+1301228: Move_??? (see animscripts.txt)
		  Implements: [move241] animation
+13012E0: Move_??? (see animscripts.txt)
		  Implements: [move28B] animation
+1301330: Move_??? (see animscripts.txt)
		  Implements: [move282] animation
+13013A0: Move_Bestow (see animscripts.txt)
		  Implements: Bestow animation
+13013D8: Move_??? (see animscripts.txt)
		  Implements: [move23B] animation
+1301448: Move_Crimson_Rush (see animscripts.txt)
		  Implements: Crimson Rush animation
+13014F8: Move_Snarl (see animscripts.txt)
		  Implements: Snarl animation
+13015E0: Move_Dragon_Tail (see animscripts.txt)
		  Implements: Dragon Tail animation
+1301678: Move_Farewell_Slap (see animscripts.txt)
		  Implements: Farewell Slap animation
+1301740: Move_Dinosword (see animscripts.txt)
		  Implements: Dinosword animation
+13017A8: Move_Sacred_Sword (see animscripts.txt)
		  Implements: Sacred Sword animation
+1301830: Move_??? (see animscripts.txt)
		  Implements: [move238] animation
+1301880: Move_Venom_Drench (see animscripts.txt)
		  Implements: Venom Drench animation
+13018C0: Move_Soil_Shot (see animscripts.txt)
		  Implements: Soil Shot animation
		  GLITCH!: doesn't look right
+1301910: Move_??? (see animscripts.txt)
		  Implements: [move246] animation
+13019A0: Move_??? (see animscripts.txt)
		  Implements: [move22E] animation
+1301B70: Move_Moon_Impact (see animscripts.txt)
		  Implements: Moon Impact animation
+1301C88: Move_Yoga_Smash (see animscripts.txt)
		  Implements: Yoga Smash animation
+1301D38: Move_U_Turn (see animscripts.txt)
		  Implements: U-Turn animation
+1301DC0: Move_Volt_Switch (see animscripts.txt)
		  Implements: Volt Switch animation
+1301E78: Move_??? (see animscripts.txt)
		  Implements: [move277] animation
+1301F00: Move_Power_Split (see animscripts.txt)
		  Implements: Power Split animation
+1301F40: Move_Guard_Split (see animscripts.txt)
		  Implements: Guard Split animation
+1301F80: Move_Gaia_Cube (see animscripts.txt)
		  Implements: Gaia Cube animation
+1302028: Move_Psy_Crush (see animscripts.txt)
		  Implements: Psy Crush animation
+1302150: Move_Ice_Crush (see animscripts.txt)
		  Implements: Ice Crush animation
+1302280: Move_Freeze_Dry (see animscripts.txt)
		  Implements: Freeze-Dry animation
+13023A0: Move_Stored_Power (see animscripts.txt)
		  Implements: Stored Power animation
+1302550: Move_Confide (see animscripts.txt)
		  Implements: Confide animation
+1302590: Move_??? (see animscripts.txt)
		  Implements: [move266] animation
+1302620: Move_Reflect_Type (see animscripts.txt)
		  Implements: Reflect Type animation
+1302828: Move_Thicket_Slip (see animscripts.txt)
		  Implements: Thicket Slip animation
+1302910: Move_Hex (see animscripts.txt)
		  Implements: Hex animation
+1302978: Move_??? (see animscripts.txt)
		  Implements: [move244] animation
+1302AC8: Move_??? (see animscripts.txt)
		  Implements: [move278] animation
+1302C10: Move_Circle_Throw (see animscripts.txt)
		  Implements: Circle Throw animation
+1302C80: Move_??? (see animscripts.txt)
		  Implements: [move263] animation
+1302DA8: Move_??? (see animscripts.txt)
		  Implements: [move27A] animation
+1302E58: Move_Soulstrike (see animscripts.txt)
		  Implements: Soulstrike animation
+1302F00: Move_Wildcard (see animscripts.txt)
		  Implements: Wildcard animation
		  GLITCH!: doesn't look right
+1302F60: Move_??? (see animscripts.txt)
		  Implements: [move289] animation
+1303030: Move_Wake_Up_Slap (see animscripts.txt)
		  Implements: Wake-Up Slap animation
+1303098: Move_Chatter (see animscripts.txt)
		  Implements: Chatter animation
+1303118: Move_Worry_Seed (see animscripts.txt)
		  Implements: Worry Seed animation
+13031B8: Move_??? (see animscripts.txt)
		  Implements: [move272] animation
+13032D8: Move_Spirit_Shackle (see animscripts.txt)
		  Implements: Spirit Shackle animation
+1303360: Move_??? (see animscripts.txt)
		  Implements: [move21C] animation
+1303408: Move_??? (see animscripts.txt)
		  Implements: [move23D] animation
+1303478: Move_Aqua_Cutter (see animscripts.txt)
		  Implements: Aqua Cutter animation
+13037E0: Move_Power_Whip (see animscripts.txt)
		  Implements: Power Whip animation
+1303888: Move_Chip_Away (see animscripts.txt)
		  Implements: Chip Away animation
+13038E8: Move_Tailwind (see animscripts.txt)
		  Implements: Tailwind animation
+1303928: Move_Black_Hole (see animscripts.txt)
		  Implements: Black Hole animation
+13039D0: Move_Frost_Breath (see animscripts.txt)
		  Implements: Frost Breath animation
+1303D30: Move_??? (see animscripts.txt)
		  Implements: [move234] animation
+1303DD0: Move_Eerie_Impulse (see animscripts.txt)
		  Implements: Eerie Impulse animation
+1303E58: Move_Aqua_Impact (see animscripts.txt)
		  Implements: Aqua Impact animation
+1303FD8: Move_??? (see animscripts.txt)
		  Implements: [move279] animation
+1304040: Move_Storm_Throw (see animscripts.txt)
		  Implements: Storm Throw animation
+13040D8: Move_Baby_Doll_Eyes (see animscripts.txt)
		  Implements: Baby-Doll Eyes animation
+1304110: Move_Wring_Out (see animscripts.txt)
		  Implements: Wring Out animation
+13041C8: Move_Possess (see animscripts.txt)
		  Implements: Possess animation
+1304238: Move_Barrier_Blast (see animscripts.txt)
		  Implements: Barrier Blast animation
+1304358: Move_Punishment (see animscripts.txt)
		  Implements: Punishment animation
		  Note: Looks like it would fit Payback more
+1304450: Move_Sucker_Punch (see animscripts.txt)
		  Implements: Sucker Punch animation
+13044C0: Move_??? (see animscripts.txt)
		  Implements: [move21B] animation
+13045B0: Move_Electro_Impact (see animscripts.txt)
		  Implements: Electro Impact animation
+1304738: Move_Light_Pulse (see animscripts.txt)
		  Implements: Light Pulse animation
+1304848: Move_Powervolt (see animscripts.txt)
		  Implements: Powervolt animation
+1304960: Move_??? (see animscripts.txt)
		  Implements: [move22D] animation
+1304AD8: Move_Gem_Laser (see animscripts.txt)
		  Implements: Gem Laser animation
+1304BD8: Move_??? (see animscripts.txt)
		  Implements: [move225] animation
+1304D68: Move_Barrier_Attack (see animscripts.txt)
		  Implements: Barrier Attack animation
+1304DC0: Move_??? (see animscripts.txt)
		  Implements: [move22F] animation
+1305060: Move_Rage_Powder (see animscripts.txt)
		  Implements: Rage Powder animation
+1305390: Move_??? (see animscripts.txt)
		  Implements: [move226] animation
+13053F0: Move_Disarming_Voice (see animscripts.txt)
		  Implements: Disarming Voice animation
+1305420: Move_Magical_Voice (see animscripts.txt)
		  Implements: Magical Voice animation
+1305500: Move_??? (see animscripts.txt)
		  Implements: [move233] animation
+1305570: Move_Boomburst (see animscripts.txt)
		  Implements: Boomburst animation
+13055E0: Move_Synchronoise (see animscripts.txt)
		  Implements: Synchronoise animation
+13057C0: Move_Clear_Smog (see animscripts.txt)
		  Implements: Clear Smog animation
!1305828: Move_Stretch (see animscripts.txt)
		  Implements: Stretch animation
		  GLITCH!: game crash
+1305950: Move_Power_Swap (see animscripts.txt)
		  Implements: Power Swap animation
		  Relies on: sub_80B3834 changes
+13059A0: Move_Guard_Swap (see animscripts.txt)
		  Implements: Guard Swap animation
		  Relies on: sub_80B3834 changes
+13059F0: Move_Petal_Blizzard (see animscripts.txt)
		  Implements: Petal Blizzard animation
+1305B70: Move_Smart_Strike (see animscripts.txt)
		  Implements: Smart Strike animation
+1305C28: Move_Power_Trick (see animscripts.txt)
		  Implements: Power Trick animation
+1305C60: Move_Wonder_Trick (see animscripts.txt)
		  Implements: Wonder Trick animation
+1305C98: Move_Simple_Beam (see animscripts.txt)
		  Implements: Simple Beam animation
+1305D30: Move_??? (see animscripts.txt)
		  Implements: [move228] animation
+1306150: Move_Dazzle_Powder (see animscripts.txt)
		  Implements: Dazzle Powder animation
+1306328: Move_Avalanche (see animscripts.txt)
		  Implements: Avalanche animation
+13064B0: Move_Poison_Jab (see animscripts.txt)
		  Implements: Poison Jab animation
+13065F0: Move_Tail_Slap (see animscripts.txt)
		  Implements: Tail Slap animation
+1306648: Move_Head_Smash (see animscripts.txt)
		  Implements: Head Smash animation
+1306718: Move_Feint (see animscripts.txt)
		  Implements: Feint animation
+1306768: Move_Payback (see animscripts.txt)
		  Implements: Payback animation
		  Note: Looks like it would fit Punishment more
+13067F0: Move_Fire_Lash (see animscripts.txt)
		  Implements: Fire Lash animation
+1306BF0: Move_Leaf_Storm (see animscripts.txt)
		  Implements: Leaf Storm animation
+1306D08: Move_Flash_Bubble (see animscripts.txt)
		  Implements: Flash Bubble animation
+1306F58: Move_Cross_Poison (see animscripts.txt)
		  Implements: Cross Poison animation
+1306FE8: Move_Leaf_Tornado (see animscripts.txt)
		  Implements: Leaf Tornado animation
+13070A8: Move_??? (see animscripts.txt)
		  Implements: [move236] animation
+13070F0: Move_??? (see animscripts.txt)
		  Implements: [move231] animation
+13071E8: Move_Inferno (see animscripts.txt)
		  Implements: Inferno animation
+1307440: Move_Psycho_Shift (see animscripts.txt)
		  Implements: Psycho Shift animation
+1307478: Move_Fire_Fang (see animscripts.txt)
		  Implements: Fire Fang animation
+1307510: Move_Thunder_Fang (see animscripts.txt)
		  Implements: Thunder Fang animation
+1307600: Move_Ice_Fang (see animscripts.txt)
		  Implements: Ice Fang animation
+1307950: Move_Rock_Climb (see animscripts.txt)
		  Implements: Rock Climb animation
+1307B48: Move_Pheromone_Poison (see animscripts.txt)
		  Implements: Pheromone Poison animation
+1307C10: Move_??? (see animscripts.txt)
		  Implements: [move29E] animation
+1307D70: Move_Shell_Smash (see animscripts.txt)
		  Implements: Shell Smash animation
+1307DB8: Move_??? (see animscripts.txt)
		  Implements: [move2A1] animation
+1307EE8: Move_Acrobatics (see animscripts.txt)
		  Implements: Acrobatics animation
+1307F70: Move_Aqua_Jet (see animscripts.txt)
		  Implements: Aqua Jet animation
+1307FF8: Move_??? (see animscripts.txt)
		  Implements: [move250] animation
+13080C0: Move_Gastro_Acid (see animscripts.txt)
		  Implements: Gastro Acid animation
+1308238: Move_??? (see animscripts.txt)
		  Implements: [move223] animation
+1308290: Move_Foul_Play (see animscripts.txt)
		  Implements: Foul Play animation
+1308368: Move_Focus_Blast (see animscripts.txt)
		  Implements: Focus Blast animation
+13083D0: Move_Gunk_Shot (see animscripts.txt)
		  Implements: Gunk Shot animation
+1308650: Move_??? (see animscripts.txt)
		  Implements: [move29A] animation
+13087A8: Move_Shadow_Sneak (see animscripts.txt)
		  Implements: Shadow Sneak animation
+13088A0: Move_??? (see animscripts.txt)
		  Implements: [move298] animation
+1308970: Move_Icicle_Crash (see animscripts.txt)
		  Implements: Icicle Crash animation
+1308CA0: Move_??? (see animscripts.txt)
		  Implements: [move29F] animation
+1308DC0: Move_Psycho_Cut (see animscripts.txt)
		  Implements: Psycho Cut animation
+1308E60: Move_Heal_Pulse (see animscripts.txt)
		  Implements: Heal Pulse animation
+1308F30: Move_??? (see animscripts.txt)
		  Implements: [move268] animation
+1308F80: Move_Raze_Earth (see animscripts.txt)
		  Implements: Raze Earth animation
+13091A0: Move_Rock_Wrecker (see animscripts.txt)
		  Implements: Rock Wrecker animation
		  GLITCH!: doesn't look right
+1309278: Move_??? (see animscripts.txt)
		  Implements: [move21E] animation
		  GLITCH!: should be a sword?
+1309350: Move_Aura_Sphere (see animscripts.txt)
		  Implements: Aura Sphere animation
+13093D0: Move_??? (see animscripts.txt)
		  Implements: [move29B] animation
+1309598: Move_Energy_Ball (see animscripts.txt)
		  Implements: Energy Ball animation
+1309690: Move_Metal_Burst (see animscripts.txt)
		  Implements: Metal Burst animation
+13097C0: Move_??? (see animscripts.txt)
		  Implements: [move2A0] animation
+13099A0: Move_??? (see animscripts.txt)
		  Implements: [move2A3] animation
+1309AF0: Move_??? (see animscripts.txt)
		  Implements: [move29C] animation
+1309B88: Move_Launcher_Arm (see animscripts.txt)
		  Implements: Launcher Arm animation
+1309D98: Move_??? (see animscripts.txt)
		  Implements: [move29D] animation
+1309E68: Move_Poison_Leaf (see animscripts.txt)
		  Implements: Poison Leaf animation
+1309F90: Move_Bug_Noise (see animscripts.txt)
		  Implements: Bug Noise animation
+130A078: Move_Tone_Deaf (see animscripts.txt)
		  Implements: Tone-Deaf animation
+130A1CB: Move_Wave_Splash (see animscripts.txt)
		  Implements: Wave Splash animation
+130A350: Move_Hammer_Arm (see animscripts.txt)
		  Implements: Hammer Arm animation
+130A3A0: Move_Dazzling_Gleam (see animscripts.txt)
		  Implements: Dazzling Gleam animation
+130A5C0: Move_Hone_Claws (see animscripts.txt)
		  Implements: Hone Claws animation
+130A6F0: Move_Seed_Bomb (see animscripts.txt)
		  Implements: Seed Bomb animation
+130A828: Move_Psyshock (see animscripts.txt)
		  Implements: Psyshock animation
+130A950: Move_X_Scissor (see animscripts.txt)
		  Implements: X-Scissor animation
+130A9D0: Move_Raid (see animscripts.txt)
		  Implements: Raid animation
+130AA80: Move_Play_Rough (see animscripts.txt)
		  Implements: Play Rough animation
+130ABB0: Move_Mud_Bomb (see animscripts.txt)
		  Implements: Mud Bomb animation
+130AC50: Move_??? (see animscripts.txt)
		  Implements: [move24D] animation
+130ADA0: Move_Psyburn (see animscripts.txt)
		  Implements: Psyburn animation
+130B0B0: Move_Metal_Pincer (see animscripts.txt)
		  Implements: Metal Pincer animation
+130B130: Move_Typhoon (see animscripts.txt)
		  Implements: Typhoon animation
+1340000: Move_Wood_Hammer (see animscripts.txt)
		  Implements: Wood Hammer animation
+13C4910: Move_Iron_Head (see animscripts.txt)
		  Implements: Iron Head animation
+13C4990: Move_Soul_Break (see animscripts.txt)
		  Implements: Soul Break/[move1D8] animation
+13C49C0: Move_Power_Gem (see animscripts.txt)
		  Implements: Power Gem animation
+140CEA0: Move_Lava_Plume (see animscripts.txt)
		  Implements: Lava Plume animation
+140CF90: Move_Guardian_Leaf (see animscripts.txt)
		  Implements: Guardian Leaf animation
+140D086: Move_Double_Hit (see animscripts.txt)
		  Implements: Double Hit/Double Shot animation
+140D0F6: Move_Defend_Order (see animscripts.txt)
		  Implements: Defend Order animation
+140D14C: Move_Attack_Order (see animscripts.txt)
		  Implements: Attack Order animation
+140D18A: Move_Heal_Order (see animscripts.txt)
		  Implements: Heal Order animation
+140D296: Move_Angry_Swarm (see animscripts.txt)
		  Implements: Angry Swarm
+140D316: Move_Mirror_Shot (see animscripts.txt)
		  Implements: Mirror Shot/Shine Bomb animation
+140D430: Move_Sonic_Sand (see animscripts.txt)
		  Implements: Sonic Sand animation
		  Note: background goes the wrong direction when used by ai
+140D632: Move_Rapid_Growth (see animscripts.txt)
		  Implements: Rapid Growth animation
+140D820: Move_Defog (see animscripts.txt)
		  Implements: Defog animation
+140D880: Move_Drain_Punch (see animscripts.txt)
		  Implements: Drain Punch animation
+140D906: Move_Wild_Growth (see animscripts.txt)
		  Implements: Wild Growth animation
!140DA56: Move_Dizzy_Whirl (see animscripts.txt)
		  Implements: Dizzy Whirl animation
		  GLITCH!: There's nothing here?
+140DA7C: Move_Corner (see animscripts.txt)
		  Implements: Corner animation
+140DAC8: Move_Earth_Power (see animscripts.txt)
		  Implements: Earth Power animation
+140DB3C: Move_Gravity_Wave (see animscripts.txt)
		  Implements: Gravity Wave animation
+140DC08: Move_Magnum_Punch (see animscripts.txt)
		  Implements: Magnum Punch animation
+140DCAC: Move_Diamond_Blast (see animscripts.txt)
		  Implements: Diamond Blast animation
+140DE22: Move_Flash_Cannon (see animscripts.txt)
		  Implements: Flash Cannon animation
+140DF20: Move_Magnet_Force (see animscripts.txt)
		  Implements: Magnet Force animation
+140DFC0: Move_Paleobreath (see animscripts.txt)
		  Implements: Paleobreath animation
+140E074: Move_Close_Combat (see animscripts.txt)
		  Implements: Close Combat animation
+1429760: Move_Stardust (see animscripts.txt)
		  Implements: Stardust animation
+14297E0: Move_Devastate (see animscripts.txt)
		  Implements: Devastate animation
+1429870: Move_Metal_Blast (see animscripts.txt)
		  Implements: Metal Blast animation
+1429A60: Move_Vacuum_Wave (see animscripts.txt)
		  Implements: Vacuum Wave animation
+1429A90: Move_Aqua_Tail (see animscripts.txt)
		  Implements: Aqua Tail animation
+1429B80: Move_Icy_Kiss (see animscripts.txt)
		  Implements: Icy Kiss animation
+142A090: Move_Night_Slash (see animscripts.txt)
		  Implements: Night Slash animation
+142A0D4: Move_Deep_Yawn (see animscripts.txt)
		  Implements: Deep Yawn animation
+142A128: Move_Dark_Pulse (see animscripts.txt)
		  Implements: Dark Pulse animation
+142A175: Move_Double_Spin (see animscripts.txt)
		  Implements: Double Spin animation
+142A20C: Move_Switcheroo (see animscripts.txt)
		  Implements: Switcheroo animation
+142A78E: Move_Hypnopulse (see animscripts.txt)
		  Implements: Hypnopulse animation
+142A7F0: Move_Bullet_Punch (see animscripts.txt)
		  Implements: Bullet Punch animation
+142A888: Move_Aqua_Bolt (see animscripts.txt)
		  Implements: Aqua Bolt animation
+142A96E: Move_Raging_Flame (see animscripts.txt)
		  Implements: Raging Flame animation
+142BCB8: Move_Smogscreen (see animscripts.txt)
		  Implements: Smogscreen animation
+142BEEC: Move_Icicle_Punch (see animscripts.txt)
		  Implements: Icicle Punch animation
+142BF8A: Move_Toxin_Spray (see animscripts.txt)
		  Implements: Toxin Spray animation
+142BFFE: Move_Dark_Hand (see animscripts.txt)
		  Implements: Dark Hand animation
+142C1A0: Move_Dark_Roar (see animscripts.txt)
		  Implements: Dark Roar animation
+142C1BE: Move_Dragon_Beat (see animscripts.txt)
		  Implements: Dragon Beat animation
+142C2AA: Move_Frostbite (see animscripts.txt)
		  Implements: Frostbite animation
+142C316: Move_Ice_Shard (see animscripts.txt)
		  Implements: Ice Shard animation
+142C3B0: Move_Starfreeze (see animscripts.txt)
		  Implements: Starfreeze animation
+142C4A8: Move_Nasty_Plot (see animscripts.txt)
		  Implements: Nasty Plot animation
+142C4CC: Move_Ominous_Wind (see animscripts.txt)
		  Implements: Ominous Wind animation
+142C612: Move_Dark_Resolve (see animscripts.txt)
		  Implements: Dark Resolve animation
+142C660: Move_Megashock (see animscripts.txt)
		  Implements: Megashock animation
+142C7AC: Move_Deluge (see animscripts.txt)
		  Implements: Deluge animation
+142C800: Move_Discharge (see animscripts.txt)
		  Implements: Discharge animation
+142CB10: Move_Giga_Spark (see animscripts.txt)
		  Implements: Giga Spark animation
+142CDC0: Move_Shadow_Clamp (see animscripts.txt)
		  Implements: Shadow Clamp animation
+142CE84: Move_Latent_Power (see animscripts.txt)
		  Implements: Latent Power animation
+142CFD8: Move_Giga_Impact (see animscripts.txt)
		  Implements: Giga Impact animation
+1696040: Move_Charge_Beam (see animscripts.txt)
		  Implements: Charge Beam animation
+1697F80: BattleScript_EffectHurricane (see movescripts.txt)
		  Implements: Hurricane
+1699D70: Move_Psycho_Punch (see animscripts.txt)
		  Implements: Psycho Punch animation
+1699DCA: Move_Glide (see animscripts.txt)
		  Implements: Glide animation
+1699E26: Move_Dragon_Pulse (see animscripts.txt)
		  Implements: Dragon Pulse animation
+1699EE0: Move_Draco_Meteor (see animscripts.txt)
		  Implements: Draco Meteor animation
+169A040: Move_Geo_Impact (see animscripts.txt)
		  Implements: Geo Impact animation
+169A19A: Move_Psygatling (see animscripts.txt)
		  Implements: Psygatling animation
+169A20A: Move_Magnet_Bomb (see animscripts.txt)
		  Implements: Magnet Bomb animation
+169A3A0: Move_Brave_Bird (see animscripts.txt)
		  Implements: Brave Bird animation
+169A4F0: Move_Burrow (see animscripts.txt)
		  Implements: Burrow animation
+16B40F0: Move_Acid_Spray (see animscripts.txt)
		  Implements: Acid Spray animation
+16B42A0: Move_Quiver_Dance (see animscripts.txt)
		  Implements: Quiver Dance animation
+16B4320: Move_Heart_Stamp (see animscripts.txt)
		  Implements: Heart Stamp animation
+16B43A0: Move_Sharpshoot (see animscripts.txt)
		  Implements: Sharpshoot animation
+16B4420: Move_Steamroller (see animscripts.txt)
		  Implements: Steamroller animation
+16B4510: Move_Scald (see animscripts.txt)
		  Implements: Scald animation
+16B4580: Move_Struggle_Bug (see animscripts.txt)
		  Implements: Struggle Bug animation
+16B4B20: Move_Work_Up (see animscripts.txt)
		  Implements: Work Up animation
+16B4B60: Move_Wild_Charge (see animscripts.txt)
		  Implements: Wild Charge animation
+16B4C70: Move_Electroweb (see animscripts.txt)
		  Implements: Electroweb animation
+1E24E80: Move_Nova_Inferno (see animscripts.txt)
		  Implements: Nova Inferno animation
+1E27BA0: ItemUseOutOfBattle_Honey (see 286disasm)
		  Implements: field function for Honey
		  Relies on: oei_task_add changes
+1E29CA0: Move_Wormhole (see animscripts.txt)
		  Implements: Wormhole animation
+1E29FF0: Move_Devour (see animscripts.txt)
		  Implements: Devour animation
+1E2E640: ItemUseOutOfBattle_EVReduction (see 285disasm)
		  Implements: field function for EV-reduction berries