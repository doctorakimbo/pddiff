atk06_typecalc()
{
	if(gCurrentMove != 0xA5)
	{
		if(gBattleStruct->0x13 != 0)
			r3 = gBattleStruct->0x13 & 0x3F
		else
			r3 = gBattleMoves[gCurrentMove].2
		
		if(r3 != 0)
		{
			if(gBattleMons[gBattlerAttacker].0x20 == 0x96)
				r3 = 0
			
			r8 = r3
		}
		else
		{
			r8 = 0

			do
			{
				r3++
				
				if(data_08168CB4_J[r3] == 0xFF)
					goto lbl8
			} while(gBattleMons[gBattlerAttacker].0x20 != data_08168CB4_J[r3])
			
			r8 = r3
		}

		lbl8:
		if(gBattleMons[gBattlerAttacker].0x21 == r8 || gBattleMons[gBattlerAttacker].0x22 == r8)
		{
			if(gBattleMons[gBattlerAttacker].0x20 == 0x5B)
				gBattleMoveDamage = gBattleMoveDamage * 2
			else
				gBattleMoveDamage = gBattleMoveDamage + (gBattleMoveDamage / 2)
		}
		
		if(gBattleMons[gBattlerAttacker].0x20 != 0x68 && gBattleMons[gBattlerAttacker].0x20 - 0xA3 >= 1 && gBattleMons[gBattlerTarget].0x20 == 0x1A && r8 == 4)
		{
			gMoveResultFlags |= 9
			r0 = 4
			goto lbl26
		}
		else
		{
			r4 = 0
			
			if((gBattleMons[gBattlerTarget].0x21 == 0xF || gBattleMons[gBattlerTarget].0x22) == 0xF && gCurrentMove == 0x149)
				ModulateDmgByType(0)
			else
			{
				lbl20:
				if(data_0824F050[r4].0 != 0xFF)
				{
					if(data_0824F050[r4].0 == 0xFE)
					{
						if(data_0824F050[r4].0 == r8 && data_0824F050[r4].1 == gBattleMons[gBattlerTarget].0x21 || data_0824F050[r4].1 == gBattleMons[gBattlerTarget].0x22))
							ModulateDmgByType(data_0824F050[r4].2)

						r4++
						goto lbl20
					}
					
					if(gBattleMons[gBattlerAttacker].0x20 != 0x71 && !(gBattleMons[gBattlerTarget].0x50 & 0x2000000000))
					{
						r4++
						goto lbl20
					}
				}
			}
			
			if((gMoveResultFlags & 2) && gBattleMons[gBattlerAttacker].0x20 != 0x67 && GetHoldEffect(gBattleMons[gBattlerAttacker].0x2E) == 0x4C)
				gBattleMoveDamage *= (12 / 10)

			if(gBattleMons[gBattlerAttacker].0x20) == 0x6E && (gMoveResultFlags & 4))
				gBattleMoveDamage *= 2

			if(gBattleMons[gBattlerAttacker].0x20 != 0x68 && gBattleMons[gBattlerAttacker].0x20 - 0xA3 >= 1)
			{
				if((gBattleMons[gBattlerTarget].0x20 == 0x6F || gBattleMons[gBattlerTarget].0x20 == 0x74) && (gMoveResultFlags & 2))
					gBattleMoveDamage -= (gBattleMoveDamage / 4)

				if(gBattleMons[gBattlerTarget].0x20 == 0x19 && AttacksThisTurn(gBattlerAttacker, gCurrentMove) == 2 && !(gMoveResultFlags & 2) && gBattleMoves[gCurrentMove].1 != 0)
				{
					gMoveResultFlags |= 1
					r0 = 3
					goto lbl26

					lbl26:
					gBattleCommunication[6] = r0
					gLastUsedAbility = gBattleMons[gBattlerTarget].0x20
					gLastLandedMoves[gBattlerTarget] = 0
					gLastHitByType[gBattlerTarget] = 0
					RecordAbilityBattle(gBattlerTarget, gLastUsedAbility)
				}
			}
		}
		
		if(gMoveResultFlags & 8)
			gProtectStructs[gBattlerAttacker].1 |= 2
		
		if(!(gMoveResultFlags & 0x29))
		{
			r0 = gBattleMons[gBattlerAttacker]
			r1 = r8
			fn_1EB20_J()
			
			if(r0 != 0 && GetHoldEffectParam(gBattleMons[gBattlerAttacker].0x2E) bcs 0x1E) // >= ? <= ?
			{
				r0 = gBattlerAttacker
				fn_1F4DC_J()
				gBattleScriptCurrInstr++
				BattleScriptPushCursor()
				gBattleScriptCurrInstr = script_1F552_J
				return
			}
		}
	}
	
	gBattleScriptCurrInstr++
}




fn_1EB20_J(arg0, arg1) @1EB20_J
{
	if(arg0.0x20 != 0x67)
	{
		gLastUsedItem = arg0.0x2E
		
		for(i = 0; i < 0x22; i++)
		{
			if(data_0821A8D4_J[i].0 == GetHoldEffect(arg0.0x2E) && data_0821A8D4_J[i].1 == arg1)
				return 1
		}
	}
	
	return 0
}




fn_1F4DC_J(arg0) @1F4DC_J
{
	if(data_02023D7C != 0xFF) // gChosenActionByBattler (FR) / ?????? (PD)
	{
		gActiveBattler = arg0
		gBattleStruct->0xB8[gActiveBattler] = gBattleMons[gActiveBattler].0x2E
		gBattleMons[gActiveBattler].0x2E = 0
		BtlController_EmitSetMonData(0, 2, 0, 2, gBattleMons[gActiveBattler].0x2E)
		MarkBattlerForControllerExec(*gActiveBattler)
	}
}